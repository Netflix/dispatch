"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7283],{5680:(e,t,n)=>{n.d(t,{xA:()=>u,yg:()=>h});var a=n(6540);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),c=p(n),d=i,h=c["".concat(s,".").concat(d)]||c[d]||g[d]||r;return n?a.createElement(h,l(l({ref:t},u),{},{components:n})):a.createElement(h,l({ref:t},u))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[c]="string"==typeof e?e:i,l[1]=o;for(var p=2;p<r;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5387:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>g,frontMatter:()=>r,metadata:()=>o,toc:()=>p});var a=n(8168),i=(n(6540),n(5680));const r={description:"Want to contribute back to Dispatch? These pages describe the general development flow, our philosophy, the test suite, and issue tracking."},l="Contributing",o={unversionedId:"administration/contributing/index",id:"administration/contributing/index",title:"Contributing",description:"Want to contribute back to Dispatch? These pages describe the general development flow, our philosophy, the test suite, and issue tracking.",source:"@site/docs/administration/contributing/index.mdx",sourceDirName:"administration/contributing",slug:"/administration/contributing/",permalink:"/dispatch/docs/administration/contributing/",draft:!1,editUrl:"https://github.com/netflix/dispatch/edit/main/docs/docs/administration/contributing/index.mdx",tags:[],version:"current",frontMatter:{description:"Want to contribute back to Dispatch? These pages describe the general development flow, our philosophy, the test suite, and issue tracking."},sidebar:"adminSidebar",previous:{title:"CLI",permalink:"/dispatch/docs/administration/cli"},next:{title:"Core",permalink:"/dispatch/docs/administration/contributing/core"}},s={},p=[{value:"Documentation",id:"documentation",level:2},{value:"Doing a release",id:"doing-a-release",level:2},{value:"Updating sample data",id:"updating-sample-data",level:3},{value:"Bumping the version number",id:"bumping-the-version-number",level:3},{value:"Change log",id:"change-log",level:3},{value:"Update &#39;latest&#39; tag",id:"update-latest-tag",level:3}],u={toc:p},c="wrapper";function g(e){let{components:t,...n}=e;return(0,i.yg)(c,(0,a.A)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"contributing"},"Contributing"),(0,i.yg)("h2",{id:"documentation"},"Documentation"),(0,i.yg)("p",null,"Dispatch documentation is managed via Gitbook."),(0,i.yg)("h2",{id:"doing-a-release"},"Doing a release"),(0,i.yg)("p",null,"Creating a release of Dispatch requires the step below."),(0,i.yg)("h3",{id:"updating-sample-data"},"Updating sample data"),(0,i.yg)("p",null,"If the database schema changes, we will need to update the sample data accordingly."),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Run the Bash script ",(0,i.yg)("inlineCode",{parentName:"li"},"update-example-data.sh")," in the ",(0,i.yg)("inlineCode",{parentName:"li"},"data")," directory."),(0,i.yg)("li",{parentName:"ul"},"Create a commit with any changes"),(0,i.yg)("li",{parentName:"ul"},"Create a pull request with the change"),(0,i.yg)("li",{parentName:"ul"},"Merge change")),(0,i.yg)("h3",{id:"bumping-the-version-number"},"Bumping the version number"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Update the version number in ",(0,i.yg)("inlineCode",{parentName:"li"},"dispatch/__about__.py")),(0,i.yg)("li",{parentName:"ul"},"Create a new entry in the changelog"),(0,i.yg)("li",{parentName:"ul"},"Create a commit with the changelog changes"),(0,i.yg)("li",{parentName:"ul"},"Create a pull request with the change"),(0,i.yg)("li",{parentName:"ul"},"Merge change")),(0,i.yg)("h3",{id:"change-log"},"Change log"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Create a new changelog with all significant changes since the last release"),(0,i.yg)("li",{parentName:"ul"},"Update GitHub releases: ",(0,i.yg)("a",{parentName:"li",href:"https://github.com/Netflix/dispatch/releases"},"https://github.com/Netflix/dispatch/releases")),(0,i.yg)("li",{parentName:"ul"},"Publish the release")),(0,i.yg)("h3",{id:"update-latest-tag"},"Update 'latest' tag"),(0,i.yg)("p",null,"We rely on the latest tag to identify the most current stable version. Follow the steps below to update this tag:"),(0,i.yg)("p",null,"Delete the previous tag:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},"git tag -d latest\n")),(0,i.yg)("p",null,"Create a new tag:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},"git tag -a latest <commit>\n")),(0,i.yg)("p",null,"Push the tag:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},"git push origin latest\n")))}g.isMDXComponent=!0}}]);