"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[787],{5680:(e,n,t)=>{t.d(n,{xA:()=>l,yg:()=>y});var r=t(6540);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function u(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var g=r.createContext({}),c=function(e){var n=r.useContext(g),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},l=function(e){var n=c(e.components);return r.createElement(g.Provider,{value:n},e.children)},s="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,g=e.parentName,l=u(e,["components","mdxType","originalType","parentName"]),s=c(t),d=i,y=s["".concat(g,".").concat(d)]||s[d]||p[d]||o;return t?r.createElement(y,a(a({ref:n},l),{},{components:t})):r.createElement(y,a({ref:n},l))}));function y(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=d;var u={};for(var g in n)hasOwnProperty.call(n,g)&&(u[g]=n[g]);u.originalType=e,u[s]="string"==typeof e?e:i,a[1]=u;for(var c=2;c<o;c++)a[c]=t[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},6502:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>g,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>u,toc:()=>c});var r=t(8168),i=(t(6540),t(5680));const o={description:"Configuration options for the PagerDuty plugin."},a="Configuring PagerDuty",u={unversionedId:"administration/settings/plugins/configuring-pagerduty",id:"administration/settings/plugins/configuring-pagerduty",title:"Configuring PagerDuty",description:"Configuration options for the PagerDuty plugin.",source:"@site/docs/administration/settings/plugins/configuring-pagerduty.mdx",sourceDirName:"administration/settings/plugins",slug:"/administration/settings/plugins/configuring-pagerduty",permalink:"/dispatch/docs/administration/settings/plugins/configuring-pagerduty",draft:!1,editUrl:"https://github.com/netflix/dispatch/edit/master/docs/docs/administration/settings/plugins/configuring-pagerduty.mdx",tags:[],version:"current",frontMatter:{description:"Configuration options for the PagerDuty plugin."},sidebar:"adminSidebar",previous:{title:"Configuring Opsgenie",permalink:"/dispatch/docs/administration/settings/plugins/configuring-opsgenie"},next:{title:"Configuring Slack",permalink:"/dispatch/docs/administration/settings/plugins/configuring-slack"}},g={},c=[{value:"Env Configuration",id:"env-configuration",level:3},{value:"<code>PAGERDUTY_API_KEY</code> [Required. Secret: True]",id:"pagerduty_api_key-required-secret-true",level:2},{value:"<code>PAGERDUTY_API_FROM_EMAIL</code> [Required]",id:"pagerduty_api_from_email-required",level:2},{value:"Oncall Service Configuration",id:"oncall-service-configuration",level:2}],l={toc:c},s="wrapper";function p(e){let{components:n,...o}=e;return(0,i.yg)(s,(0,r.A)({},l,o,{components:n,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"configuring-pagerduty"},"Configuring PagerDuty"),(0,i.yg)("admonition",{type:"info"},(0,i.yg)("p",{parentName:"admonition"},"Dispatch ships with support for resolving on-call schedules via the PagerDuty API.")),(0,i.yg)("h3",{id:"env-configuration"},"Env Configuration"),(0,i.yg)("p",null,"Add the following env vars to your ",(0,i.yg)("inlineCode",{parentName:"p"},".env")," file."),(0,i.yg)("h2",{id:"pagerduty_api_key-required-secret-true"},(0,i.yg)("inlineCode",{parentName:"h2"},"PAGERDUTY_API_KEY")," ","[","Required. Secret: True","]"),(0,i.yg)("blockquote",null,(0,i.yg)("p",{parentName:"blockquote"},"PagerDuty API key.")),(0,i.yg)("h2",{id:"pagerduty_api_from_email-required"},(0,i.yg)("inlineCode",{parentName:"h2"},"PAGERDUTY_API_FROM_EMAIL")," ","[","Required","]"),(0,i.yg)("blockquote",null,(0,i.yg)("p",{parentName:"blockquote"},"Email to be added to all outgoing incident pages.")),(0,i.yg)("h2",{id:"oncall-service-configuration"},"Oncall Service Configuration"),(0,i.yg)("p",null,"Go to /services on your Web server running Dispatch and add a new service. Select type ",(0,i.yg)("inlineCode",{parentName:"p"},"pagerduty-oncall")," and add your PagerDuty Service ID in the external id field."),(0,i.yg)("div",{style:{textAlign:"center"}},(0,i.yg)("p",null,(0,i.yg)("img",{src:t(8974).A,width:"1695",height:"1297"}))))}p.isMDXComponent=!0},8974:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/pagerduty-service-setup-5339e2eb2d6e6d856bfa05c0258f0479.png"}}]);