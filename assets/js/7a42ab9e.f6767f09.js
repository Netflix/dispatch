"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9114],{5680:(e,t,n)=>{n.d(t,{xA:()=>u,yg:()=>y});var r=n(6540);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=r.createContext({}),l=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},c="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,p=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=l(n),d=i,y=c["".concat(p,".").concat(d)]||c[d]||g[d]||o;return n?r.createElement(y,a(a({ref:t},u),{},{components:n})):r.createElement(y,a({ref:t},u))}));function y(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=d;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[c]="string"==typeof e?e:i,a[1]=s;for(var l=2;l<o;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9466:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>g,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var r=n(8168),i=(n(6540),n(5680));const o={description:"How to test your plugins."},a="Testing",s={unversionedId:"administration/contributing/plugins/testing",id:"administration/contributing/plugins/testing",title:"Testing",description:"How to test your plugins.",source:"@site/docs/administration/contributing/plugins/testing.mdx",sourceDirName:"administration/contributing/plugins",slug:"/administration/contributing/plugins/testing",permalink:"/dispatch/docs/administration/contributing/plugins/testing",draft:!1,editUrl:"https://github.com/netflix/dispatch/edit/master/docs/docs/administration/contributing/plugins/testing.mdx",tags:[],version:"current",frontMatter:{description:"How to test your plugins."},sidebar:"adminSidebar",previous:{title:"Interfaces",permalink:"/dispatch/docs/administration/contributing/plugins/interfaces"},next:{title:"FAQ",permalink:"/dispatch/docs/administration/faq"}},p={},l=[{value:"Require Dispatch",id:"require-dispatch",level:2},{value:"Running Tests",id:"running-tests",level:2}],u={toc:l},c="wrapper";function g(e){let{components:t,...n}=e;return(0,i.yg)(c,(0,r.A)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"testing"},"Testing"),(0,i.yg)("p",null,"Dispatch provides a basic test-based testing framework for plugins. In a simple plugin, you'll need to do a few things to get it working:"),(0,i.yg)("h2",{id:"require-dispatch"},"Require Dispatch"),(0,i.yg)("p",null,"Augment your plugins ",(0,i.yg)("inlineCode",{parentName:"p"},"setup.py")," to ensure that it depends on ",(0,i.yg)("inlineCode",{parentName:"p"},"dispatch")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-python"},"setup(\n    # ...\n    install_requires=[\n       'dispatch',\n    ]\n)\n")),(0,i.yg)("h2",{id:"running-tests"},"Running Tests"),(0,i.yg)("p",null,"Running tests follows the py.test standard. As long as your test files and methods are named appropriately ","(",(0,i.yg)("inlineCode",{parentName:"p"},"test_filename.py")," and ",(0,i.yg)("inlineCode",{parentName:"p"},"test_function()"),")"," you can call out to py.test:"))}g.isMDXComponent=!0}}]);