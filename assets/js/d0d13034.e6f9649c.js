"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[6026],{5680:(n,e,t)=>{t.d(e,{xA:()=>u,yg:()=>y});var i=t(6540);function r(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function a(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,i)}return t}function o(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?a(Object(t),!0).forEach((function(e){r(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function p(n,e){if(null==n)return{};var t,i,r=function(n,e){if(null==n)return{};var t,i,r={},a=Object.keys(n);for(i=0;i<a.length;i++)t=a[i],e.indexOf(t)>=0||(r[t]=n[t]);return r}(n,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);for(i=0;i<a.length;i++)t=a[i],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(r[t]=n[t])}return r}var l=i.createContext({}),s=function(n){var e=i.useContext(l),t=e;return n&&(t="function"==typeof n?n(e):o(o({},e),n)),t},u=function(n){var e=s(n.components);return i.createElement(l.Provider,{value:e},n.children)},c="mdxType",g={inlineCode:"code",wrapper:function(n){var e=n.children;return i.createElement(i.Fragment,{},e)}},m=i.forwardRef((function(n,e){var t=n.components,r=n.mdxType,a=n.originalType,l=n.parentName,u=p(n,["components","mdxType","originalType","parentName"]),c=s(t),m=r,y=c["".concat(l,".").concat(m)]||c[m]||g[m]||a;return t?i.createElement(y,o(o({ref:e},u),{},{components:t})):i.createElement(y,o({ref:e},u))}));function y(n,e){var t=arguments,r=e&&e.mdxType;if("string"==typeof n||r){var a=t.length,o=new Array(a);o[0]=m;var p={};for(var l in e)hasOwnProperty.call(e,l)&&(p[l]=e[l]);p.originalType=n,p[c]="string"==typeof n?n:r,o[1]=p;for(var s=2;s<a;s++)o[s]=t[s];return i.createElement.apply(null,o)}return i.createElement.apply(null,t)}m.displayName="MDXCreateElement"},730:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>o,default:()=>g,frontMatter:()=>a,metadata:()=>p,toc:()=>s});var i=t(8168),r=(t(6540),t(5680));const a={description:"Make Dispatch your own by writing a plugin!"},o="Plugins",p={unversionedId:"administration/contributing/plugins/index",id:"administration/contributing/plugins/index",title:"Plugins",description:"Make Dispatch your own by writing a plugin!",source:"@site/docs/administration/contributing/plugins/index.mdx",sourceDirName:"administration/contributing/plugins",slug:"/administration/contributing/plugins/",permalink:"/dispatch/docs/administration/contributing/plugins/",draft:!1,editUrl:"https://github.com/netflix/dispatch/edit/master/docs/docs/administration/contributing/plugins/index.mdx",tags:[],version:"current",frontMatter:{description:"Make Dispatch your own by writing a plugin!"},sidebar:"adminSidebar",previous:{title:"Environment",permalink:"/dispatch/docs/administration/contributing/environment"},next:{title:"Interfaces",permalink:"/dispatch/docs/administration/contributing/plugins/interfaces"}},l={},s=[],u={toc:s},c="wrapper";function g(n){let{components:e,...t}=n;return(0,r.yg)(c,(0,i.A)({},u,t,{components:e,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"plugins"},"Plugins"),(0,r.yg)("p",null,"Each plugin has its interface, but in general, all plugins are structured the same way."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"setup.py\ndispatch_pluginname/\ndispatch_pluginname/__init__.py\ndispatch_pluginname/plugin.py\n")),(0,r.yg)("p",null,"The ",(0,r.yg)("inlineCode",{parentName:"p"},"__init__.py")," file should contain no plugin logic, and at most, a VERSION = \u2018x.x.x\u2019 line. For example, if you want to pull the version using pkg_resources ","(","which is what we recommend",")",", your file might contain:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-python"},"try:\n    VERSION = __import__('pkg_resources') \\\n        .get_distribution(__name__).version\nexcept Exception as e:\n    VERSION = 'unknown'\n")),(0,r.yg)("p",null,"Inside of ",(0,r.yg)("inlineCode",{parentName:"p"},"plugin.py")," declare your own ",(0,r.yg)("inlineCode",{parentName:"p"},"Plugin")," class:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-python"},"import dispatch_pluginname\nfrom dispatch.plugins.base.conversation import ConversationPlugin\n\nclass PluginName(ConversationPlugin):\n    title = 'Plugin Name'\n    slug = 'pluginname'\n    description = 'My awesome plugin!'\n    version = dispatch_pluginname.VERSION\n\n    author = 'Your Name'\n    author_url = 'https://github.com/yourname/dispatch_pluginname'\n\n    def create(self, items, **kwargs):\n        return \"Conversation Created\"\n\n    def add(self, items, **kwargs):\n        return \"User Added\"\n\n    def send(self, items, **kwargs):\n        return \"Message sent\"\n")),(0,r.yg)("p",null,"Register your plugin via ",(0,r.yg)("inlineCode",{parentName:"p"},"entry_points")," by modifying your ",(0,r.yg)("inlineCode",{parentName:"p"},"setup.py"),":"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-python"},"setup(\n    # ...\n    entry_points={\n       'dispatch.plugins': [\n            'pluginname = dispatch_pluginname.conversations:PluginName'\n        ],\n    },\n)\n")),(0,r.yg)("p",null,"You can potentially package multiple plugin types in one package, say you want to create a conversation and conference plugins for the same third-party. To accomplish this, alias the plugin in entry points to point at multiple plugins within your package:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-python"},"setup(\n    # ...\n    entry_points={\n        'dispatch.plugins': [\n            'pluginnameconversation = dispatch_pluginname.plugin:PluginNameConversation',\n            'pluginnameconference = dispatch_pluginname.plugin:PluginNameConference'\n        ],\n    },\n)\n")),(0,r.yg)("p",null,"Once your plugin files are in place, you can load your plugin into your instance by installing your package:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"> pip install -e .\n")),(0,r.yg)("admonition",{type:"info"},(0,r.yg)("p",{parentName:"admonition"},"For more information about python packages see: ",(0,r.yg)("a",{parentName:"p",href:"https://packaging.python.org/en/latest/distributing.html"},"Python Packaging"))))}g.isMDXComponent=!0}}]);