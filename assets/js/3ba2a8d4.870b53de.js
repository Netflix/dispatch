"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7198],{5680:(e,a,n)=>{n.d(a,{xA:()=>p,yg:()=>m});var t=n(6540);function i(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function s(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function l(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?s(Object(n),!0).forEach((function(a){i(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function r(e,a){if(null==e)return{};var n,t,i=function(e,a){if(null==e)return{};var n,t,i={},s=Object.keys(e);for(t=0;t<s.length;t++)n=s[t],a.indexOf(n)>=0||(i[n]=e[n]);return i}(e,a);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(t=0;t<s.length;t++)n=s[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var o=t.createContext({}),d=function(e){var a=t.useContext(o),n=a;return e&&(n="function"==typeof e?e(a):l(l({},a),e)),n},p=function(e){var a=d(e.components);return t.createElement(o.Provider,{value:a},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},h=t.forwardRef((function(e,a){var n=e.components,i=e.mdxType,s=e.originalType,o=e.parentName,p=r(e,["components","mdxType","originalType","parentName"]),c=d(n),h=i,m=c["".concat(o,".").concat(h)]||c[h]||u[h]||s;return n?t.createElement(m,l(l({ref:a},p),{},{components:n})):t.createElement(m,l({ref:a},p))}));function m(e,a){var n=arguments,i=a&&a.mdxType;if("string"==typeof e||i){var s=n.length,l=new Array(s);l[0]=h;var r={};for(var o in a)hasOwnProperty.call(a,o)&&(r[o]=a[o]);r.originalType=e,r[c]="string"==typeof e?e:i,l[1]=r;for(var d=2;d<s;d++)l[d]=n[d];return t.createElement.apply(null,l)}return t.createElement.apply(null,n)}h.displayName="MDXCreateElement"},910:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>r,toc:()=>d});var t=n(8168),i=(n(6540),n(5680));const s={description:"Overview of the Dispatch CLI."},l="CLI",r={unversionedId:"administration/cli",id:"administration/cli",title:"CLI",description:"Overview of the Dispatch CLI.",source:"@site/docs/administration/cli.mdx",sourceDirName:"administration",slug:"/administration/cli",permalink:"/dispatch/docs/administration/cli",draft:!1,editUrl:"https://github.com/netflix/dispatch/edit/master/docs/docs/administration/cli.mdx",tags:[],version:"current",frontMatter:{description:"Overview of the Dispatch CLI."},sidebar:"adminSidebar",previous:{title:"Templates",permalink:"/dispatch/docs/administration/settings/templates"},next:{title:"Contributing",permalink:"/dispatch/docs/administration/contributing/"}},o={},d=[{value:"Server",id:"server",level:2},{value:"Config",id:"config",level:3},{value:"Develop",id:"develop",level:3},{value:"Routes",id:"routes",level:3},{value:"Shell",id:"shell",level:3},{value:"Start",id:"start",level:3},{value:"Scheduler",id:"scheduler",level:2},{value:"List",id:"list",level:3},{value:"Start",id:"start-1",level:3},{value:"Database",id:"database",level:2},{value:"Init",id:"init",level:3},{value:"Revision",id:"revision",level:3},{value:"Upgrade/Downgrade",id:"upgradedowngrade",level:3},{value:"Restore/Dump",id:"restoredump",level:3},{value:"Plugins",id:"plugins",level:2},{value:"List",id:"list-1",level:3},{value:"Install",id:"install",level:3}],p={toc:d},c="wrapper";function u(e){let{components:a,...n}=e;return(0,i.yg)(c,(0,t.A)({},p,n,{components:a,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"cli"},"CLI"),(0,i.yg)("p",null,"Dispatch ships with a robust CLI, providing configuration, server, scheduler, plugin, database, and shell commands. Here we'll give a partial overview; if you'd like a complete list of Dispatch commands available via the CLI, please use the command ",(0,i.yg)("inlineCode",{parentName:"p"},"dispatch --help")," once you have installed the application."),(0,i.yg)("h2",{id:"server"},"Server"),(0,i.yg)("p",null,"The server sub-command contains all Dispatch server-related commands."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-bash"},"> dispatch server --help                                                                        develop \u2b07 \u25fc\nUsage: dispatch server [OPTIONS] COMMAND [ARGS]...\n\n  Container for all dispatch server commands.\n\nOptions:\n  --help  Show this message and exit.\n\nCommands:\n  config   Prints the current config as dispatch sees it.\n  develop  Runs a simple server for development.\n  routes   Prints all available routes.\n  shell    Starts an ipython shell importing our app.\n  start\n")),(0,i.yg)("h3",{id:"config"},"Config"),(0,i.yg)("p",null,"The ",(0,i.yg)("inlineCode",{parentName:"p"},"config")," command helps debug as it shows the configuration variables seen by the server ","(","combining envvars, defaults, and the .env file",")","."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-bash"},"> dispatch server config\n>\nKey                                       Value\n----------------------------------------  -----------------------\nDISPATCH_DOMAIN                           example.com\nSTATIC_DIR\nMETRIC_PROVIDERS                          spectator-metric\n...\n")),(0,i.yg)("h3",{id:"develop"},"Develop"),(0,i.yg)("p",null,"The ",(0,i.yg)("inlineCode",{parentName:"p"},"develop")," command starts the development server. This server will continually watch for file changes and reload the server accordingly. You'll find it useful to combine this with a ",(0,i.yg)("inlineCode",{parentName:"p"},"DEBUG")," log level, as below."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-bash"},"> dispatch server develop --log-level debug\n")),(0,i.yg)("h3",{id:"routes"},"Routes"),(0,i.yg)("p",null,"The ",(0,i.yg)("inlineCode",{parentName:"p"},"routes")," command is useful for development. This command shows which endpoints the server is currently listening on, the HTTP verb methods are accepted, and whether authentication is enabled."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-bash"},"> dispatch server routes\nPath                                  Authenticated    Methods\n------------------------------------  ---------------  ---------\n/healthcheck                          False            GET\n/documents/                           True             GET\n/documents/{document_id}              True             GET\n/documents/                           True             POST\n...\n")),(0,i.yg)("h3",{id:"shell"},"Shell"),(0,i.yg)("p",null,"The ",(0,i.yg)("inlineCode",{parentName:"p"},"shell")," command is useful for development. It drops you into an interactive python shell with the same context as the server itself."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-bash"},"> dispatch server shell\n")),(0,i.yg)("h3",{id:"start"},"Start"),(0,i.yg)("p",null,"The ",(0,i.yg)("inlineCode",{parentName:"p"},"start")," command starts a production-grade Dispatch web server. It's an alias to the ",(0,i.yg)("a",{parentName:"p",href:"https://www.uvicorn.org/"},"uvicorn")," web server, so it contains all of the options and flags available with that server."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-bash"},"> dispatch server start --help\nUsage: dispatch server start [OPTIONS] APP\n\nOptions:\n  --host TEXT                     Bind socket to this host.  [default:\n                                  127.0.0.1]\n  --port INTEGER                  Bind socket to this port.  [default: 8000]\n  --uds TEXT                      Bind to a UNIX domain socket.\n  --fd INTEGER                    Bind to socket from this file descriptor.\n  --reload                        Enable auto-reload.\n  --reload-dir TEXT               Set reload directories explicitly, instead\n                                  of using the current working directory.\n  ...\n")),(0,i.yg)("p",null,"To start Dispatch, you will need to tell the start command where to find the ",(0,i.yg)("inlineCode",{parentName:"p"},"dispatch")," ",(0,i.yg)("a",{parentName:"p",href:"https://asgi.readthedocs.io/en/latest/"},"ASGI")," application. For example, a common set of flags might be:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-bash"},"> dispatch server start dispatch.main:app --workers 6 --host 127.0.0.1 --port 8000 --proxy-headers\n")),(0,i.yg)("h2",{id:"scheduler"},"Scheduler"),(0,i.yg)("p",null,"The ",(0,i.yg)("inlineCode",{parentName:"p"},"scheduler")," command contains all of the Dispatch scheduler logic."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-bash"},"> dispatch scheduler --help\nUsage: dispatch scheduler [OPTIONS] COMMAND [ARGS]...\n\n  Container for all dispatch scheduler commands.\n\nOptions:\n  --help  Show this message and exit.\n\nCommands:\n  list   Prints and runs all currently configured periodic tasks, in...\n  start  Starts the scheduler.\n")),(0,i.yg)("h3",{id:"list"},"List"),(0,i.yg)("p",null,"The ",(0,i.yg)("inlineCode",{parentName:"p"},"list")," command lists all tasks registered with the scheduler. Today the scheduler periods are hardcoded and cannot be adjusted."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-bash"},"> dispatch scheduler list\nTask Name                        Period          At Time\n-------------------------------  --------------  ---------\nincident-status-report-reminder  1:00:00\nincident-daily-summary           1 day, 0:00:00  18:00:00\ncalculate-incident-cost          0:05:00\nincident-task-reminders          1:00:00\nincident-task-sync               0:00:30\nterm-sync                        1:00:00\ndocument-term-sync               1 day, 0:00:00\napplication-sync                 1:00:00\n")),(0,i.yg)("h3",{id:"start-1"},"Start"),(0,i.yg)("p",null,"The ",(0,i.yg)("inlineCode",{parentName:"p"},"start")," command starts the scheduler and allows tasks to be executed based on the defined period."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-bash"},"> dispatch scheduler start\nStarting scheduler...\n")),(0,i.yg)("p",null,"Often it's helpful to run a particular task immediately:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-bash"},"> dispatch scheduler start incident-status-report-reminder --eager\n")),(0,i.yg)("h2",{id:"database"},"Database"),(0,i.yg)("p",null,"The ",(0,i.yg)("inlineCode",{parentName:"p"},"database")," command contains all of the Dispatch database logic."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-bash"},"> dispatch database --help\nUsage: dispatch database [OPTIONS] COMMAND [ARGS]...\n\n  Container for all dispatch database commands.\n\nOptions:\n  --help  Show this message and exit.\n\nCommands:\n  downgrade      Downgrades database schema to the next newest version.\n  drop           Drops all data in database.\n  heads          Shows the heads of the database.\n  history        Shows the history of the database.\n  init           Initializes a new database.\n  populate       Populates database with default values.\n  revision       Create new database revision.\n  sync-triggers  Ensures that all database triggers have been installed.\n  upgrade        Upgrades database schema to newest version.\n")),(0,i.yg)("admonition",{type:"info"},(0,i.yg)("p",{parentName:"admonition"},"Note: The database command is a combination of custom commands and ",(0,i.yg)("inlineCode",{parentName:"p"},"alembic")," commands. For more information about alembic database migrations, see ",(0,i.yg)("a",{parentName:"p",href:"https://alembic.sqlalchemy.org/en/latest/"},"here"),".")),(0,i.yg)("h3",{id:"init"},"Init"),(0,i.yg)("p",null,"The ",(0,i.yg)("inlineCode",{parentName:"p"},"init")," command takes a fresh database and creates the necessary tables and values for Dispatch to operate."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-bash"},"> dispatch database init\n")),(0,i.yg)("h3",{id:"revision"},"Revision"),(0,i.yg)("p",null,"The ",(0,i.yg)("inlineCode",{parentName:"p"},"revision")," command is an ",(0,i.yg)("inlineCode",{parentName:"p"},"alembic")," command that creates a new database schema revision based on the application's models."),(0,i.yg)("p",null,"Commonly used in conjunction with the ",(0,i.yg)("inlineCode",{parentName:"p"},"--autogenerate")," flag:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-bash"},"> dispatch database revision --autogenerate\n")),(0,i.yg)("h3",{id:"upgradedowngrade"},"Upgrade/Downgrade"),(0,i.yg)("p",null,"The ",(0,i.yg)("inlineCode",{parentName:"p"},"upgrade")," and ",(0,i.yg)("inlineCode",{parentName:"p"},"downgrade")," commands manage how ",(0,i.yg)("inlineCode",{parentName:"p"},"alembic")," database migrations are deployed, allowing you to move the database forward and backward through revisions. You'll often need to run the ",(0,i.yg)("inlineCode",{parentName:"p"},"upgrade")," command after installing a new version of Dispatch."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-bash"},"> dispatch database upgrade\n")),(0,i.yg)("h3",{id:"restoredump"},"Restore/Dump"),(0,i.yg)("p",null,"The ",(0,i.yg)("inlineCode",{parentName:"p"},"restore")," and ",(0,i.yg)("inlineCode",{parentName:"p"},"dump")," commands allow you to quickly backup and restore the Dispatch database. It can also be used to load our ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/Netflix/dispatch/blob/develop/data/dispatch-sample-data.dump"},"example")," data set into your Dispatch installation."),(0,i.yg)("p",null,"Today, the ",(0,i.yg)("inlineCode",{parentName:"p"},".dump")," file must be located in ",(0,i.yg)("inlineCode",{parentName:"p"},"$CWD")," and must be named ",(0,i.yg)("inlineCode",{parentName:"p"},"dispatch-backup.dump"),"."),(0,i.yg)("h2",{id:"plugins"},"Plugins"),(0,i.yg)("p",null,"The ",(0,i.yg)("inlineCode",{parentName:"p"},"plugin")," command contains all of the logic for dealing with Dispatch's plugins."),(0,i.yg)("h3",{id:"list-1"},"List"),(0,i.yg)("p",null,"The ",(0,i.yg)("inlineCode",{parentName:"p"},"list")," command lists all currently available plugins. This command is useful in determining which plugins are available to be used via configuration variables."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-bash"},"> dispatch plugins list\nTitle                             Slug                            Version     Type               Author         Description\n--------------------------------  ------------------------------  ----------  -----------------  -------------  ---------------------------------------------------------\nDispatch - Document Resolver      dispatch-document-resolver      0.1.0       document-resolver  Kevin Glisson  Uses dispatch itself to resolve incident documents.\nDispatch - Participants           dispatch-participants           0.1.0       participant        Kevin Glisson  Uses dispatch itself to determine participants.\nGoogle Docs - Document            google-docs-document            0.1.0       document           Kevin Glisson  Uses google docs to manage document contents.\nGoogle Group - Participant Group  google-group-participant-group  0.1.0       participant_group  Kevin Glisson  Uses Google Groups to help manage participant membership.\n...\n")),(0,i.yg)("h3",{id:"install"},"Install"),(0,i.yg)("p",null,"The ",(0,i.yg)("inlineCode",{parentName:"p"},"install")," command will try installing all available plugins."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-bash"},"> dispatch plugins install\nINFO:dispatch.common.utils.cli:Attempting to load plugin: dispatch_basic_auth\nINFO:dispatch.common.utils.cli:Successfully loaded plugin: dispatch_basic_auth\nINFO:dispatch.common.utils.cli:Attempting to load plugin: dispatch_contact\nINFO:dispatch.common.utils.cli:Successfully loaded plugin: dispatch_contact\nINFO:dispatch.common.utils.cli:Attempting to load plugin: dispatch_document_resolver\n...\n")),(0,i.yg)("p",null,"Keep in mind that this will only make plugins available. To enable them ",(0,i.yg)("a",{parentName:"p",href:"/dispatch/docs/administration/settings/plugins/"},"create and configure the plugin instance")))}u.isMDXComponent=!0}}]);