--
-- PostgreSQL database dump
--

-- Dumped from database version 14.6 (Debian 14.6-1.pgdg110+1)
-- Dumped by pg_dump version 14.10 (Homebrew)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: dispatch_core; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA dispatch_core;


ALTER SCHEMA dispatch_core OWNER TO postgres;

--
-- Name: dispatch_organization_default; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA dispatch_organization_default;


ALTER SCHEMA dispatch_organization_default OWNER TO postgres;

--
-- Name: tsq_state; Type: TYPE; Schema: dispatch_core; Owner: postgres
--

CREATE TYPE dispatch_core.tsq_state AS (
	search_query text,
	parentheses_stack integer,
	skip_for integer,
	current_token text,
	current_index integer,
	current_char text,
	previous_char text,
	tokens text[]
);


ALTER TYPE dispatch_core.tsq_state OWNER TO postgres;

--
-- Name: tsq_state; Type: TYPE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TYPE dispatch_organization_default.tsq_state AS (
	search_query text,
	parentheses_stack integer,
	skip_for integer,
	current_token text,
	current_index integer,
	current_char text,
	previous_char text,
	tokens text[]
);


ALTER TYPE dispatch_organization_default.tsq_state OWNER TO postgres;

--
-- Name: tsq_state; Type: TYPE; Schema: public; Owner: postgres
--

CREATE TYPE public.tsq_state AS (
	search_query text,
	parentheses_stack integer,
	skip_for integer,
	current_token text,
	current_index integer,
	current_char text,
	previous_char text,
	tokens text[]
);


ALTER TYPE public.tsq_state OWNER TO postgres;

--
-- Name: array_nremove(anyarray, anyelement, integer); Type: FUNCTION; Schema: dispatch_core; Owner: postgres
--

CREATE FUNCTION dispatch_core.array_nremove(anyarray, anyelement, integer) RETURNS anyarray
    LANGUAGE sql IMMUTABLE
    AS $_$
    WITH replaced_positions AS (
        SELECT UNNEST(
            CASE
            WHEN $2 IS NULL THEN
                '{}'::int[]
            WHEN $3 > 0 THEN
                (array_positions($1, $2))[1:$3]
            WHEN $3 < 0 THEN
                (array_positions($1, $2))[
                    (cardinality(array_positions($1, $2)) + $3 + 1):
                ]
            ELSE
                '{}'::int[]
            END
        ) AS position
    )
    SELECT COALESCE((
        SELECT array_agg(value)
        FROM unnest($1) WITH ORDINALITY AS t(value, index)
        WHERE index NOT IN (SELECT position FROM replaced_positions)
    ), $1[1:0]);
$_$;


ALTER FUNCTION dispatch_core.array_nremove(anyarray, anyelement, integer) OWNER TO postgres;

--
-- Name: dispatch_user_search_vector_update(); Type: FUNCTION; Schema: dispatch_core; Owner: postgres
--

CREATE FUNCTION dispatch_core.dispatch_user_search_vector_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
            BEGIN
                NEW.search_vector = setweight(to_tsvector('pg_catalog.english', coalesce(NEW.email, '')), 'A');
                RETURN NEW;
            END
            $$;


ALTER FUNCTION dispatch_core.dispatch_user_search_vector_update() OWNER TO postgres;

--
-- Name: organization_search_vector_update(); Type: FUNCTION; Schema: dispatch_core; Owner: postgres
--

CREATE FUNCTION dispatch_core.organization_search_vector_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
            BEGIN
                NEW.search_vector = setweight(to_tsvector('pg_catalog.english', coalesce(NEW.name, '')), 'A') || setweight(to_tsvector('pg_catalog.english', coalesce(NEW.description, '')), 'B');
                RETURN NEW;
            END
            $$;


ALTER FUNCTION dispatch_core.organization_search_vector_update() OWNER TO postgres;

--
-- Name: plugin_search_vector_update(); Type: FUNCTION; Schema: dispatch_core; Owner: postgres
--

CREATE FUNCTION dispatch_core.plugin_search_vector_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
            BEGIN
                NEW.search_vector = ((setweight(to_tsvector('pg_catalog.english', coalesce(NEW.title, '')), 'A') || setweight(to_tsvector('pg_catalog.english', coalesce(NEW.slug, '')), 'B')) || setweight(to_tsvector('pg_catalog.english', coalesce(NEW.type, '')), 'C')) || setweight(to_tsvector('pg_catalog.english', coalesce(NEW.description, '')), 'C');
                RETURN NEW;
            END
            $$;


ALTER FUNCTION dispatch_core.plugin_search_vector_update() OWNER TO postgres;

--
-- Name: tsq_append_current_token(dispatch_core.tsq_state); Type: FUNCTION; Schema: dispatch_core; Owner: postgres
--

CREATE FUNCTION dispatch_core.tsq_append_current_token(state dispatch_core.tsq_state) RETURNS dispatch_core.tsq_state
    LANGUAGE plpgsql IMMUTABLE
    AS $$
BEGIN
    IF state.current_token != '' THEN
        state.tokens := array_append(state.tokens, state.current_token);
        state.current_token := '';
    END IF;
    RETURN state;
END;
$$;


ALTER FUNCTION dispatch_core.tsq_append_current_token(state dispatch_core.tsq_state) OWNER TO postgres;

--
-- Name: tsq_parse(text); Type: FUNCTION; Schema: dispatch_core; Owner: postgres
--

CREATE FUNCTION dispatch_core.tsq_parse(search_query text) RETURNS tsquery
    LANGUAGE sql IMMUTABLE
    AS $$
    SELECT tsq_parse(get_current_ts_config(), search_query);
$$;


ALTER FUNCTION dispatch_core.tsq_parse(search_query text) OWNER TO postgres;

--
-- Name: tsq_parse(regconfig, text); Type: FUNCTION; Schema: dispatch_core; Owner: postgres
--

CREATE FUNCTION dispatch_core.tsq_parse(config regconfig, search_query text) RETURNS tsquery
    LANGUAGE sql IMMUTABLE
    AS $$
    SELECT tsq_process_tokens(config, tsq_tokenize(search_query));
$$;


ALTER FUNCTION dispatch_core.tsq_parse(config regconfig, search_query text) OWNER TO postgres;

--
-- Name: tsq_parse(text, text); Type: FUNCTION; Schema: dispatch_core; Owner: postgres
--

CREATE FUNCTION dispatch_core.tsq_parse(config text, search_query text) RETURNS tsquery
    LANGUAGE sql IMMUTABLE
    AS $$
    SELECT tsq_parse(config::regconfig, search_query);
$$;


ALTER FUNCTION dispatch_core.tsq_parse(config text, search_query text) OWNER TO postgres;

--
-- Name: tsq_process_tokens(text[]); Type: FUNCTION; Schema: dispatch_core; Owner: postgres
--

CREATE FUNCTION dispatch_core.tsq_process_tokens(tokens text[]) RETURNS tsquery
    LANGUAGE sql IMMUTABLE
    AS $$
    SELECT tsq_process_tokens(get_current_ts_config(), tokens);
$$;


ALTER FUNCTION dispatch_core.tsq_process_tokens(tokens text[]) OWNER TO postgres;

--
-- Name: tsq_process_tokens(regconfig, text[]); Type: FUNCTION; Schema: dispatch_core; Owner: postgres
--

CREATE FUNCTION dispatch_core.tsq_process_tokens(config regconfig, tokens text[]) RETURNS tsquery
    LANGUAGE plpgsql IMMUTABLE
    AS $$
DECLARE
    result_query text;
    previous_value text;
    value text;
BEGIN
    result_query := '';

    FOREACH value IN ARRAY tokens LOOP
        IF value = '"' THEN
            CONTINUE;
        END IF;

        IF value = 'or' THEN
            value := ' | ';
        END IF;

        IF left(value, 1) = '"' AND right(value, 1) = '"' THEN
            value := phraseto_tsquery(config, value);
        ELSIF value NOT IN ('(', ' | ', ')', '-') THEN
            value := quote_literal(value) || ':*';
        END IF;

        IF previous_value = '-' THEN
            IF value = '(' THEN
                value := '!' || value;
            ELSIF value = ' | ' THEN
                CONTINUE;
            ELSE
                value := '!(' || value || ')';
            END IF;
        END IF;

        SELECT
            CASE
                WHEN result_query = '' THEN value
                WHEN previous_value = ' | ' AND value = ' | ' THEN result_query
                WHEN previous_value = ' | ' THEN result_query || ' | ' || value
                WHEN previous_value IN ('!(', '(') OR value = ')' THEN result_query || value
                WHEN value != ' | ' THEN result_query || ' & ' || value
                ELSE result_query
            END
        INTO result_query;

        IF result_query = ' | ' THEN
            result_query := '';
        END IF;

        previous_value := value;
    END LOOP;

    RETURN to_tsquery(config, result_query);
END;
$$;


ALTER FUNCTION dispatch_core.tsq_process_tokens(config regconfig, tokens text[]) OWNER TO postgres;

--
-- Name: tsq_tokenize(text); Type: FUNCTION; Schema: dispatch_core; Owner: postgres
--

CREATE FUNCTION dispatch_core.tsq_tokenize(search_query text) RETURNS text[]
    LANGUAGE plpgsql IMMUTABLE
    AS $$
DECLARE
    state tsq_state;
BEGIN
    SELECT
        search_query::text AS search_query,
        0::int AS parentheses_stack,
        0 AS skip_for,
        ''::text AS current_token,
        0 AS current_index,
        ''::text AS current_char,
        ''::text AS previous_char,
        '{}'::text[] AS tokens
    INTO state;

    state.search_query := lower(trim(
        regexp_replace(search_query, '""+', '""', 'g')
    ));

    FOR state.current_index IN (
        SELECT generate_series(1, length(state.search_query))
    ) LOOP
        state.current_char := substring(
            search_query FROM state.current_index FOR 1
        );

        IF state.skip_for > 0 THEN
            state.skip_for := state.skip_for - 1;
            CONTINUE;
        END IF;

        state := tsq_tokenize_character(state);
        state.previous_char := state.current_char;
    END LOOP;
    state := tsq_append_current_token(state);

    state.tokens := array_nremove(state.tokens, '(', -state.parentheses_stack);

    RETURN state.tokens;
END;
$$;


ALTER FUNCTION dispatch_core.tsq_tokenize(search_query text) OWNER TO postgres;

--
-- Name: tsq_tokenize_character(dispatch_core.tsq_state); Type: FUNCTION; Schema: dispatch_core; Owner: postgres
--

CREATE FUNCTION dispatch_core.tsq_tokenize_character(state dispatch_core.tsq_state) RETURNS dispatch_core.tsq_state
    LANGUAGE plpgsql IMMUTABLE
    AS $$
BEGIN
    IF state.current_char = '(' THEN
        state.tokens := array_append(state.tokens, '(');
        state.parentheses_stack := state.parentheses_stack + 1;
        state := tsq_append_current_token(state);
    ELSIF state.current_char = ')' THEN
        IF (state.parentheses_stack > 0 AND state.current_token != '') THEN
            state := tsq_append_current_token(state);
            state.tokens := array_append(state.tokens, ')');
            state.parentheses_stack := state.parentheses_stack - 1;
        END IF;
    ELSIF state.current_char = '"' THEN
        state.skip_for := position('"' IN substring(
            state.search_query FROM state.current_index + 1
        ));

        IF state.skip_for > 1 THEN
            state.tokens = array_append(
                state.tokens,
                substring(
                    state.search_query
                    FROM state.current_index FOR state.skip_for + 1
                )
            );
        ELSIF state.skip_for = 0 THEN
            state.current_token := state.current_token || state.current_char;
        END IF;
    ELSIF (
        state.current_char = '-' AND
        (state.current_index = 1 OR state.previous_char = ' ')
    ) THEN
        state.tokens := array_append(state.tokens, '-');
    ELSIF state.current_char = ' ' THEN
        state := tsq_append_current_token(state);
    ELSE
        state.current_token = state.current_token || state.current_char;
    END IF;
    RETURN state;
END;
$$;


ALTER FUNCTION dispatch_core.tsq_tokenize_character(state dispatch_core.tsq_state) OWNER TO postgres;

--
-- Name: alert_search_vector_update(); Type: FUNCTION; Schema: dispatch_organization_default; Owner: postgres
--

CREATE FUNCTION dispatch_organization_default.alert_search_vector_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
            BEGIN
                NEW.search_vector = to_tsvector('pg_catalog.english', coalesce(NEW.name, ''));
                RETURN NEW;
            END
            $$;


ALTER FUNCTION dispatch_organization_default.alert_search_vector_update() OWNER TO postgres;

--
-- Name: array_nremove(anyarray, anyelement, integer); Type: FUNCTION; Schema: dispatch_organization_default; Owner: postgres
--

CREATE FUNCTION dispatch_organization_default.array_nremove(anyarray, anyelement, integer) RETURNS anyarray
    LANGUAGE sql IMMUTABLE
    AS $_$
    WITH replaced_positions AS (
        SELECT UNNEST(
            CASE
            WHEN $2 IS NULL THEN
                '{}'::int[]
            WHEN $3 > 0 THEN
                (array_positions($1, $2))[1:$3]
            WHEN $3 < 0 THEN
                (array_positions($1, $2))[
                    (cardinality(array_positions($1, $2)) + $3 + 1):
                ]
            ELSE
                '{}'::int[]
            END
        ) AS position
    )
    SELECT COALESCE((
        SELECT array_agg(value)
        FROM unnest($1) WITH ORDINALITY AS t(value, index)
        WHERE index NOT IN (SELECT position FROM replaced_positions)
    ), $1[1:0]);
$_$;


ALTER FUNCTION dispatch_organization_default.array_nremove(anyarray, anyelement, integer) OWNER TO postgres;

--
-- Name: definition_search_vector_update(); Type: FUNCTION; Schema: dispatch_organization_default; Owner: postgres
--

CREATE FUNCTION dispatch_organization_default.definition_search_vector_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
            BEGIN
                NEW.search_vector = to_tsvector('pg_catalog.english', coalesce(NEW.text, ''));
                RETURN NEW;
            END
            $$;


ALTER FUNCTION dispatch_organization_default.definition_search_vector_update() OWNER TO postgres;

--
-- Name: document_search_vector_update(); Type: FUNCTION; Schema: dispatch_organization_default; Owner: postgres
--

CREATE FUNCTION dispatch_organization_default.document_search_vector_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
            BEGIN
                NEW.search_vector = to_tsvector('pg_catalog.english', coalesce(NEW.name, ''));
                RETURN NEW;
            END
            $$;


ALTER FUNCTION dispatch_organization_default.document_search_vector_update() OWNER TO postgres;

--
-- Name: entity_type_search_vector_update(); Type: FUNCTION; Schema: dispatch_organization_default; Owner: postgres
--

CREATE FUNCTION dispatch_organization_default.entity_type_search_vector_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
            BEGIN
                NEW.search_vector = to_tsvector('pg_catalog.english', coalesce(NEW.name, '')) || to_tsvector('pg_catalog.english', coalesce(NEW.description, ''));
                RETURN NEW;
            END
            $$;


ALTER FUNCTION dispatch_organization_default.entity_type_search_vector_update() OWNER TO postgres;

--
-- Name: event_search_vector_update(); Type: FUNCTION; Schema: dispatch_organization_default; Owner: postgres
--

CREATE FUNCTION dispatch_organization_default.event_search_vector_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
            BEGIN
                NEW.search_vector = setweight(to_tsvector('pg_catalog.english', coalesce(NEW.source, '')), 'A') || setweight(to_tsvector('pg_catalog.english', coalesce(NEW.description, '')), 'B');
                RETURN NEW;
            END
            $$;


ALTER FUNCTION dispatch_organization_default.event_search_vector_update() OWNER TO postgres;

--
-- Name: feedback_search_vector_update(); Type: FUNCTION; Schema: dispatch_organization_default; Owner: postgres
--

CREATE FUNCTION dispatch_organization_default.feedback_search_vector_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
            BEGIN
                NEW.search_vector = to_tsvector('pg_catalog.english', coalesce(NEW.feedback, '')) || to_tsvector('pg_catalog.english', coalesce(NEW.rating, ''));
                RETURN NEW;
            END
            $$;


ALTER FUNCTION dispatch_organization_default.feedback_search_vector_update() OWNER TO postgres;

--
-- Name: incident_cost_type_search_vector_update(); Type: FUNCTION; Schema: dispatch_organization_default; Owner: postgres
--

CREATE FUNCTION dispatch_organization_default.incident_cost_type_search_vector_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
            BEGIN
                NEW.search_vector = setweight(to_tsvector('pg_catalog.english', coalesce(NEW.name, '')), 'A') || setweight(to_tsvector('pg_catalog.english', coalesce(NEW.description, '')), 'B');
                RETURN NEW;
            END
            $$;


ALTER FUNCTION dispatch_organization_default.incident_cost_type_search_vector_update() OWNER TO postgres;

--
-- Name: incident_priority_search_vector_update(); Type: FUNCTION; Schema: dispatch_organization_default; Owner: postgres
--

CREATE FUNCTION dispatch_organization_default.incident_priority_search_vector_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
            BEGIN
                NEW.search_vector = to_tsvector('pg_catalog.english', coalesce(NEW.name, '')) || to_tsvector('pg_catalog.english', coalesce(NEW.description, ''));
                RETURN NEW;
            END
            $$;


ALTER FUNCTION dispatch_organization_default.incident_priority_search_vector_update() OWNER TO postgres;

--
-- Name: incident_search_vector_update(); Type: FUNCTION; Schema: dispatch_organization_default; Owner: postgres
--

CREATE FUNCTION dispatch_organization_default.incident_search_vector_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
            BEGIN
                NEW.search_vector = (setweight(to_tsvector('pg_catalog.english', coalesce(NEW.title, '')), 'B') || setweight(to_tsvector('pg_catalog.english', coalesce(NEW.description, '')), 'C')) || setweight(to_tsvector('pg_catalog.english', coalesce(NEW.name, '')), 'A');
                RETURN NEW;
            END
            $$;


ALTER FUNCTION dispatch_organization_default.incident_search_vector_update() OWNER TO postgres;

--
-- Name: incident_type_search_vector_update(); Type: FUNCTION; Schema: dispatch_organization_default; Owner: postgres
--

CREATE FUNCTION dispatch_organization_default.incident_type_search_vector_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
            BEGIN
                NEW.search_vector = to_tsvector('pg_catalog.english', coalesce(NEW.name, '')) || to_tsvector('pg_catalog.english', coalesce(NEW.description, ''));
                RETURN NEW;
            END
            $$;


ALTER FUNCTION dispatch_organization_default.incident_type_search_vector_update() OWNER TO postgres;

--
-- Name: individual_contact_search_vector_update(); Type: FUNCTION; Schema: dispatch_organization_default; Owner: postgres
--

CREATE FUNCTION dispatch_organization_default.individual_contact_search_vector_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
            BEGIN
                NEW.search_vector = (((to_tsvector('pg_catalog.english', coalesce(NEW.name, '')) || to_tsvector('pg_catalog.english', coalesce(NEW.title, ''))) || to_tsvector('pg_catalog.english', coalesce(NEW.email, ''))) || to_tsvector('pg_catalog.english', coalesce(NEW.company, ''))) || to_tsvector('pg_catalog.english', coalesce(NEW.notes, ''));
                RETURN NEW;
            END
            $$;


ALTER FUNCTION dispatch_organization_default.individual_contact_search_vector_update() OWNER TO postgres;

--
-- Name: notification_search_vector_update(); Type: FUNCTION; Schema: dispatch_organization_default; Owner: postgres
--

CREATE FUNCTION dispatch_organization_default.notification_search_vector_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
            BEGIN
                NEW.search_vector = to_tsvector('pg_catalog.english', coalesce(NEW.name, '')) || to_tsvector('pg_catalog.english', coalesce(NEW.description, ''));
                RETURN NEW;
            END
            $$;


ALTER FUNCTION dispatch_organization_default.notification_search_vector_update() OWNER TO postgres;

--
-- Name: project_search_vector_update(); Type: FUNCTION; Schema: dispatch_organization_default; Owner: postgres
--

CREATE FUNCTION dispatch_organization_default.project_search_vector_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
            BEGIN
                NEW.search_vector = setweight(to_tsvector('pg_catalog.english', coalesce(NEW.name, '')), 'A') || setweight(to_tsvector('pg_catalog.english', coalesce(NEW.description, '')), 'B');
                RETURN NEW;
            END
            $$;


ALTER FUNCTION dispatch_organization_default.project_search_vector_update() OWNER TO postgres;

--
-- Name: query_search_vector_update(); Type: FUNCTION; Schema: dispatch_organization_default; Owner: postgres
--

CREATE FUNCTION dispatch_organization_default.query_search_vector_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
            BEGIN
                NEW.search_vector = to_tsvector('pg_catalog.english', coalesce(NEW.name, ''));
                RETURN NEW;
            END
            $$;


ALTER FUNCTION dispatch_organization_default.query_search_vector_update() OWNER TO postgres;

--
-- Name: report_search_vector_update(); Type: FUNCTION; Schema: dispatch_organization_default; Owner: postgres
--

CREATE FUNCTION dispatch_organization_default.report_search_vector_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
            BEGIN
                NEW.search_vector = to_tsvector('pg_catalog.english', coalesce(NEW.details_raw, ''));
                RETURN NEW;
            END
            $$;


ALTER FUNCTION dispatch_organization_default.report_search_vector_update() OWNER TO postgres;

--
-- Name: search_filter_search_vector_update(); Type: FUNCTION; Schema: dispatch_organization_default; Owner: postgres
--

CREATE FUNCTION dispatch_organization_default.search_filter_search_vector_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
            BEGIN
                NEW.search_vector = setweight(to_tsvector('pg_catalog.english', coalesce(NEW.name, '')), 'A') || setweight(to_tsvector('pg_catalog.english', coalesce(NEW.description, '')), 'B');
                RETURN NEW;
            END
            $$;


ALTER FUNCTION dispatch_organization_default.search_filter_search_vector_update() OWNER TO postgres;

--
-- Name: service_search_vector_update(); Type: FUNCTION; Schema: dispatch_organization_default; Owner: postgres
--

CREATE FUNCTION dispatch_organization_default.service_search_vector_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
            BEGIN
                NEW.search_vector = to_tsvector('pg_catalog.english', coalesce(NEW.name, ''));
                RETURN NEW;
            END
            $$;


ALTER FUNCTION dispatch_organization_default.service_search_vector_update() OWNER TO postgres;

--
-- Name: signal_filter_search_vector_update(); Type: FUNCTION; Schema: dispatch_organization_default; Owner: postgres
--

CREATE FUNCTION dispatch_organization_default.signal_filter_search_vector_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
            BEGIN
                NEW.search_vector = to_tsvector('pg_catalog.english', coalesce(NEW.name, '')) || to_tsvector('pg_catalog.english', coalesce(NEW.description, ''));
                RETURN NEW;
            END
            $$;


ALTER FUNCTION dispatch_organization_default.signal_filter_search_vector_update() OWNER TO postgres;

--
-- Name: signal_search_vector_update(); Type: FUNCTION; Schema: dispatch_organization_default; Owner: postgres
--

CREATE FUNCTION dispatch_organization_default.signal_search_vector_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
            BEGIN
                NEW.search_vector = (to_tsvector('pg_catalog.english', coalesce(NEW.name, '')) || to_tsvector('pg_catalog.english', coalesce(NEW.description, ''))) || to_tsvector('pg_catalog.english', coalesce(NEW.variant, ''));
                RETURN NEW;
            END
            $$;


ALTER FUNCTION dispatch_organization_default.signal_search_vector_update() OWNER TO postgres;

--
-- Name: source_data_format_search_vector_update(); Type: FUNCTION; Schema: dispatch_organization_default; Owner: postgres
--

CREATE FUNCTION dispatch_organization_default.source_data_format_search_vector_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
            BEGIN
                NEW.search_vector = to_tsvector('pg_catalog.english', coalesce(NEW.name, ''));
                RETURN NEW;
            END
            $$;


ALTER FUNCTION dispatch_organization_default.source_data_format_search_vector_update() OWNER TO postgres;

--
-- Name: source_environment_search_vector_update(); Type: FUNCTION; Schema: dispatch_organization_default; Owner: postgres
--

CREATE FUNCTION dispatch_organization_default.source_environment_search_vector_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
            BEGIN
                NEW.search_vector = to_tsvector('pg_catalog.english', coalesce(NEW.name, ''));
                RETURN NEW;
            END
            $$;


ALTER FUNCTION dispatch_organization_default.source_environment_search_vector_update() OWNER TO postgres;

--
-- Name: source_search_vector_update(); Type: FUNCTION; Schema: dispatch_organization_default; Owner: postgres
--

CREATE FUNCTION dispatch_organization_default.source_search_vector_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
            BEGIN
                NEW.search_vector = to_tsvector('pg_catalog.english', coalesce(NEW.name, ''));
                RETURN NEW;
            END
            $$;


ALTER FUNCTION dispatch_organization_default.source_search_vector_update() OWNER TO postgres;

--
-- Name: source_status_search_vector_update(); Type: FUNCTION; Schema: dispatch_organization_default; Owner: postgres
--

CREATE FUNCTION dispatch_organization_default.source_status_search_vector_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
            BEGIN
                NEW.search_vector = to_tsvector('pg_catalog.english', coalesce(NEW.name, ''));
                RETURN NEW;
            END
            $$;


ALTER FUNCTION dispatch_organization_default.source_status_search_vector_update() OWNER TO postgres;

--
-- Name: source_transport_search_vector_update(); Type: FUNCTION; Schema: dispatch_organization_default; Owner: postgres
--

CREATE FUNCTION dispatch_organization_default.source_transport_search_vector_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
            BEGIN
                NEW.search_vector = to_tsvector('pg_catalog.english', coalesce(NEW.name, ''));
                RETURN NEW;
            END
            $$;


ALTER FUNCTION dispatch_organization_default.source_transport_search_vector_update() OWNER TO postgres;

--
-- Name: source_type_search_vector_update(); Type: FUNCTION; Schema: dispatch_organization_default; Owner: postgres
--

CREATE FUNCTION dispatch_organization_default.source_type_search_vector_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
            BEGIN
                NEW.search_vector = to_tsvector('pg_catalog.english', coalesce(NEW.name, ''));
                RETURN NEW;
            END
            $$;


ALTER FUNCTION dispatch_organization_default.source_type_search_vector_update() OWNER TO postgres;

--
-- Name: tag_search_vector_update(); Type: FUNCTION; Schema: dispatch_organization_default; Owner: postgres
--

CREATE FUNCTION dispatch_organization_default.tag_search_vector_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
            BEGIN
                NEW.search_vector = (to_tsvector('pg_catalog.english', coalesce(NEW.name, '')) || to_tsvector('pg_catalog.english', coalesce(NEW.description, ''))) || to_tsvector('pg_catalog.english', coalesce(NEW.external_id, ''));
                RETURN NEW;
            END
            $$;


ALTER FUNCTION dispatch_organization_default.tag_search_vector_update() OWNER TO postgres;

--
-- Name: tag_type_search_vector_update(); Type: FUNCTION; Schema: dispatch_organization_default; Owner: postgres
--

CREATE FUNCTION dispatch_organization_default.tag_type_search_vector_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
            BEGIN
                NEW.search_vector = to_tsvector('pg_catalog.english', coalesce(NEW.name, ''));
                RETURN NEW;
            END
            $$;


ALTER FUNCTION dispatch_organization_default.tag_type_search_vector_update() OWNER TO postgres;

--
-- Name: task_search_vector_update(); Type: FUNCTION; Schema: dispatch_organization_default; Owner: postgres
--

CREATE FUNCTION dispatch_organization_default.task_search_vector_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
            BEGIN
                NEW.search_vector = to_tsvector('pg_catalog.english', coalesce(NEW.description, ''));
                RETURN NEW;
            END
            $$;


ALTER FUNCTION dispatch_organization_default.task_search_vector_update() OWNER TO postgres;

--
-- Name: team_contact_search_vector_update(); Type: FUNCTION; Schema: dispatch_organization_default; Owner: postgres
--

CREATE FUNCTION dispatch_organization_default.team_contact_search_vector_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
            BEGIN
                NEW.search_vector = setweight(to_tsvector('pg_catalog.english', coalesce(NEW.name, '')), 'A') || setweight(to_tsvector('pg_catalog.english', coalesce(NEW.notes, '')), 'B');
                RETURN NEW;
            END
            $$;


ALTER FUNCTION dispatch_organization_default.team_contact_search_vector_update() OWNER TO postgres;

--
-- Name: term_search_vector_update(); Type: FUNCTION; Schema: dispatch_organization_default; Owner: postgres
--

CREATE FUNCTION dispatch_organization_default.term_search_vector_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
            BEGIN
                NEW.search_vector = to_tsvector('pg_catalog.english', coalesce(NEW.text, ''));
                RETURN NEW;
            END
            $$;


ALTER FUNCTION dispatch_organization_default.term_search_vector_update() OWNER TO postgres;

--
-- Name: tsq_append_current_token(dispatch_organization_default.tsq_state); Type: FUNCTION; Schema: dispatch_organization_default; Owner: postgres
--

CREATE FUNCTION dispatch_organization_default.tsq_append_current_token(state dispatch_organization_default.tsq_state) RETURNS dispatch_organization_default.tsq_state
    LANGUAGE plpgsql IMMUTABLE
    AS $$
BEGIN
    IF state.current_token != '' THEN
        state.tokens := array_append(state.tokens, state.current_token);
        state.current_token := '';
    END IF;
    RETURN state;
END;
$$;


ALTER FUNCTION dispatch_organization_default.tsq_append_current_token(state dispatch_organization_default.tsq_state) OWNER TO postgres;

--
-- Name: tsq_parse(text); Type: FUNCTION; Schema: dispatch_organization_default; Owner: postgres
--

CREATE FUNCTION dispatch_organization_default.tsq_parse(search_query text) RETURNS tsquery
    LANGUAGE sql IMMUTABLE
    AS $$
    SELECT tsq_parse(get_current_ts_config(), search_query);
$$;


ALTER FUNCTION dispatch_organization_default.tsq_parse(search_query text) OWNER TO postgres;

--
-- Name: tsq_parse(regconfig, text); Type: FUNCTION; Schema: dispatch_organization_default; Owner: postgres
--

CREATE FUNCTION dispatch_organization_default.tsq_parse(config regconfig, search_query text) RETURNS tsquery
    LANGUAGE sql IMMUTABLE
    AS $$
    SELECT tsq_process_tokens(config, tsq_tokenize(search_query));
$$;


ALTER FUNCTION dispatch_organization_default.tsq_parse(config regconfig, search_query text) OWNER TO postgres;

--
-- Name: tsq_parse(text, text); Type: FUNCTION; Schema: dispatch_organization_default; Owner: postgres
--

CREATE FUNCTION dispatch_organization_default.tsq_parse(config text, search_query text) RETURNS tsquery
    LANGUAGE sql IMMUTABLE
    AS $$
    SELECT tsq_parse(config::regconfig, search_query);
$$;


ALTER FUNCTION dispatch_organization_default.tsq_parse(config text, search_query text) OWNER TO postgres;

--
-- Name: tsq_process_tokens(text[]); Type: FUNCTION; Schema: dispatch_organization_default; Owner: postgres
--

CREATE FUNCTION dispatch_organization_default.tsq_process_tokens(tokens text[]) RETURNS tsquery
    LANGUAGE sql IMMUTABLE
    AS $$
    SELECT tsq_process_tokens(get_current_ts_config(), tokens);
$$;


ALTER FUNCTION dispatch_organization_default.tsq_process_tokens(tokens text[]) OWNER TO postgres;

--
-- Name: tsq_process_tokens(regconfig, text[]); Type: FUNCTION; Schema: dispatch_organization_default; Owner: postgres
--

CREATE FUNCTION dispatch_organization_default.tsq_process_tokens(config regconfig, tokens text[]) RETURNS tsquery
    LANGUAGE plpgsql IMMUTABLE
    AS $$
DECLARE
    result_query text;
    previous_value text;
    value text;
BEGIN
    result_query := '';

    FOREACH value IN ARRAY tokens LOOP
        IF value = '"' THEN
            CONTINUE;
        END IF;

        IF value = 'or' THEN
            value := ' | ';
        END IF;

        IF left(value, 1) = '"' AND right(value, 1) = '"' THEN
            value := phraseto_tsquery(config, value);
        ELSIF value NOT IN ('(', ' | ', ')', '-') THEN
            value := quote_literal(value) || ':*';
        END IF;

        IF previous_value = '-' THEN
            IF value = '(' THEN
                value := '!' || value;
            ELSIF value = ' | ' THEN
                CONTINUE;
            ELSE
                value := '!(' || value || ')';
            END IF;
        END IF;

        SELECT
            CASE
                WHEN result_query = '' THEN value
                WHEN previous_value = ' | ' AND value = ' | ' THEN result_query
                WHEN previous_value = ' | ' THEN result_query || ' | ' || value
                WHEN previous_value IN ('!(', '(') OR value = ')' THEN result_query || value
                WHEN value != ' | ' THEN result_query || ' & ' || value
                ELSE result_query
            END
        INTO result_query;

        IF result_query = ' | ' THEN
            result_query := '';
        END IF;

        previous_value := value;
    END LOOP;

    RETURN to_tsquery(config, result_query);
END;
$$;


ALTER FUNCTION dispatch_organization_default.tsq_process_tokens(config regconfig, tokens text[]) OWNER TO postgres;

--
-- Name: tsq_tokenize(text); Type: FUNCTION; Schema: dispatch_organization_default; Owner: postgres
--

CREATE FUNCTION dispatch_organization_default.tsq_tokenize(search_query text) RETURNS text[]
    LANGUAGE plpgsql IMMUTABLE
    AS $$
DECLARE
    state tsq_state;
BEGIN
    SELECT
        search_query::text AS search_query,
        0::int AS parentheses_stack,
        0 AS skip_for,
        ''::text AS current_token,
        0 AS current_index,
        ''::text AS current_char,
        ''::text AS previous_char,
        '{}'::text[] AS tokens
    INTO state;

    state.search_query := lower(trim(
        regexp_replace(search_query, '""+', '""', 'g')
    ));

    FOR state.current_index IN (
        SELECT generate_series(1, length(state.search_query))
    ) LOOP
        state.current_char := substring(
            search_query FROM state.current_index FOR 1
        );

        IF state.skip_for > 0 THEN
            state.skip_for := state.skip_for - 1;
            CONTINUE;
        END IF;

        state := tsq_tokenize_character(state);
        state.previous_char := state.current_char;
    END LOOP;
    state := tsq_append_current_token(state);

    state.tokens := array_nremove(state.tokens, '(', -state.parentheses_stack);

    RETURN state.tokens;
END;
$$;


ALTER FUNCTION dispatch_organization_default.tsq_tokenize(search_query text) OWNER TO postgres;

--
-- Name: tsq_tokenize_character(dispatch_organization_default.tsq_state); Type: FUNCTION; Schema: dispatch_organization_default; Owner: postgres
--

CREATE FUNCTION dispatch_organization_default.tsq_tokenize_character(state dispatch_organization_default.tsq_state) RETURNS dispatch_organization_default.tsq_state
    LANGUAGE plpgsql IMMUTABLE
    AS $$
BEGIN
    IF state.current_char = '(' THEN
        state.tokens := array_append(state.tokens, '(');
        state.parentheses_stack := state.parentheses_stack + 1;
        state := tsq_append_current_token(state);
    ELSIF state.current_char = ')' THEN
        IF (state.parentheses_stack > 0 AND state.current_token != '') THEN
            state := tsq_append_current_token(state);
            state.tokens := array_append(state.tokens, ')');
            state.parentheses_stack := state.parentheses_stack - 1;
        END IF;
    ELSIF state.current_char = '"' THEN
        state.skip_for := position('"' IN substring(
            state.search_query FROM state.current_index + 1
        ));

        IF state.skip_for > 1 THEN
            state.tokens = array_append(
                state.tokens,
                substring(
                    state.search_query
                    FROM state.current_index FOR state.skip_for + 1
                )
            );
        ELSIF state.skip_for = 0 THEN
            state.current_token := state.current_token || state.current_char;
        END IF;
    ELSIF (
        state.current_char = '-' AND
        (state.current_index = 1 OR state.previous_char = ' ')
    ) THEN
        state.tokens := array_append(state.tokens, '-');
    ELSIF state.current_char = ' ' THEN
        state := tsq_append_current_token(state);
    ELSE
        state.current_token = state.current_token || state.current_char;
    END IF;
    RETURN state;
END;
$$;


ALTER FUNCTION dispatch_organization_default.tsq_tokenize_character(state dispatch_organization_default.tsq_state) OWNER TO postgres;

--
-- Name: workflow_search_vector_update(); Type: FUNCTION; Schema: dispatch_organization_default; Owner: postgres
--

CREATE FUNCTION dispatch_organization_default.workflow_search_vector_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
            BEGIN
                NEW.search_vector = to_tsvector('pg_catalog.english', coalesce(NEW.name, '')) || to_tsvector('pg_catalog.english', coalesce(NEW.description, ''));
                RETURN NEW;
            END
            $$;


ALTER FUNCTION dispatch_organization_default.workflow_search_vector_update() OWNER TO postgres;

--
-- Name: array_nremove(anyarray, anyelement, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.array_nremove(anyarray, anyelement, integer) RETURNS anyarray
    LANGUAGE sql IMMUTABLE
    AS $_$
    WITH replaced_positions AS (
        SELECT UNNEST(
            CASE
            WHEN $2 IS NULL THEN
                '{}'::int[]
            WHEN $3 > 0 THEN
                (array_positions($1, $2))[1:$3]
            WHEN $3 < 0 THEN
                (array_positions($1, $2))[
                    (cardinality(array_positions($1, $2)) + $3 + 1):
                ]
            ELSE
                '{}'::int[]
            END
        ) AS position
    )
    SELECT COALESCE((
        SELECT array_agg(value)
        FROM unnest($1) WITH ORDINALITY AS t(value, index)
        WHERE index NOT IN (SELECT position FROM replaced_positions)
    ), $1[1:0]);
$_$;


ALTER FUNCTION public.array_nremove(anyarray, anyelement, integer) OWNER TO postgres;

--
-- Name: clone_schema(text, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.clone_schema(source_schema text, dest_schema text) RETURNS void
    LANGUAGE plpgsql
    AS $$

DECLARE
  object text;
  buffer text;
  default_ text;
  column_ text;
  constraint_name_ text;
  constraint_def_ text;
  trigger_name_ text;
  trigger_timing_ text;
  trigger_events_ text;
  trigger_orientation_ text;
  trigger_action_ text;
BEGIN

  -- replace existing schema
  EXECUTE 'DROP SCHEMA IF EXISTS ' || dest_schema || ' CASCADE';

  -- create schema
  EXECUTE 'CREATE SCHEMA ' || dest_schema ;

  -- create sequences
  FOR object IN
    SELECT sequence_name::text FROM information_schema.SEQUENCES WHERE sequence_schema = source_schema
  LOOP
    EXECUTE 'CREATE SEQUENCE ' || dest_schema || '.' || object;
  END LOOP;

  -- create tables
  FOR object IN
    SELECT table_name::text FROM information_schema.TABLES WHERE table_schema = source_schema
  LOOP
    buffer := dest_schema || '.' || object;

    -- create table
    EXECUTE 'CREATE TABLE ' || buffer || ' (LIKE ' || source_schema || '.' || object || ' INCLUDING CONSTRAINTS INCLUDING INDEXES INCLUDING DEFAULTS)';
    EXECUTE 'INSERT INTO ' || buffer || '(SELECT * FROM ' || source_schema || '.' || object || ')';

    -- fix sequence defaults
    FOR column_, default_ IN
      SELECT column_name::text, REPLACE(column_default::text, source_schema || '.', dest_schema|| '.') FROM information_schema.COLUMNS WHERE table_schema = dest_schema AND table_name = object AND column_default LIKE 'nextval(%' || source_schema || '.%::regclass)'
    LOOP
      EXECUTE 'ALTER TABLE ' || buffer || ' ALTER COLUMN ' || column_ || ' SET DEFAULT ' || default_;
    END LOOP;

    -- create triggers
    FOR trigger_name_, trigger_timing_, trigger_events_, trigger_orientation_, trigger_action_ IN
      SELECT trigger_name::text, action_timing::text, string_agg(event_manipulation::text, ' OR '), action_orientation::text, action_statement::text FROM information_schema.TRIGGERS WHERE event_object_schema=source_schema and event_object_table=object GROUP BY trigger_name, action_timing, action_orientation, action_statement
    LOOP
      EXECUTE 'CREATE TRIGGER ' || trigger_name_ || ' ' || trigger_timing_ || ' ' || trigger_events_ || ' ON ' || buffer || ' FOR EACH ' || trigger_orientation_ || ' ' || trigger_action_;
    END LOOP;
  END LOOP;

  -- reiterate tables and create foreign keys
  FOR object IN
    SELECT table_name::text FROM information_schema.TABLES WHERE table_schema = source_schema
  LOOP
    buffer := dest_schema || '.' || object;

    -- create foreign keys
    FOR constraint_name_, constraint_def_ IN
      SELECT conname::text, REPLACE(pg_get_constraintdef(pg_constraint.oid), source_schema||'.', dest_schema||'.') FROM pg_constraint INNER JOIN pg_class ON conrelid=pg_class.oid INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace WHERE contype='f' and relname=object and nspname=source_schema
    LOOP
      EXECUTE 'ALTER TABLE '|| buffer ||' ADD CONSTRAINT '|| constraint_name_ ||' '|| constraint_def_;
    END LOOP;
  END LOOP;

END;

$$;


ALTER FUNCTION public.clone_schema(source_schema text, dest_schema text) OWNER TO postgres;

--
-- Name: definition_search_vector_update(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.definition_search_vector_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
            BEGIN
                NEW.search_vector = to_tsvector('pg_catalog.english', coalesce(NEW.text, ''));
                RETURN NEW;
            END
            $$;


ALTER FUNCTION public.definition_search_vector_update() OWNER TO postgres;

--
-- Name: dispatch_user_search_vector_update(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.dispatch_user_search_vector_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
            BEGIN
                NEW.search_vector = setweight(to_tsvector('pg_catalog.english', coalesce(NEW.email, '')), 'A');
                RETURN NEW;
            END
            $$;


ALTER FUNCTION public.dispatch_user_search_vector_update() OWNER TO postgres;

--
-- Name: document_search_vector_update(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.document_search_vector_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
            BEGIN
                NEW.search_vector = to_tsvector('pg_catalog.english', coalesce(NEW.name, ''));
                RETURN NEW;
            END
            $$;


ALTER FUNCTION public.document_search_vector_update() OWNER TO postgres;

--
-- Name: event_search_vector_update(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.event_search_vector_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
            BEGIN
                NEW.search_vector = setweight(to_tsvector('pg_catalog.english', coalesce(NEW.source, '')), 'A') || setweight(to_tsvector('pg_catalog.english', coalesce(NEW.description, '')), 'B');
                RETURN NEW;
            END
            $$;


ALTER FUNCTION public.event_search_vector_update() OWNER TO postgres;

--
-- Name: incident_cost_type_search_vector_update(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.incident_cost_type_search_vector_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
            BEGIN
                NEW.search_vector = setweight(to_tsvector('pg_catalog.english', coalesce(NEW.name, '')), 'A') || setweight(to_tsvector('pg_catalog.english', coalesce(NEW.description, '')), 'B');
                RETURN NEW;
            END
            $$;


ALTER FUNCTION public.incident_cost_type_search_vector_update() OWNER TO postgres;

--
-- Name: incident_priority_search_vector_update(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.incident_priority_search_vector_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
            BEGIN
                NEW.search_vector = to_tsvector('pg_catalog.english', coalesce(NEW.name, '')) || to_tsvector('pg_catalog.english', coalesce(NEW.description, ''));
                RETURN NEW;
            END
            $$;


ALTER FUNCTION public.incident_priority_search_vector_update() OWNER TO postgres;

--
-- Name: incident_search_vector_update(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.incident_search_vector_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
            BEGIN
                NEW.search_vector = (setweight(to_tsvector('pg_catalog.english', coalesce(NEW.title, '')), 'B') || setweight(to_tsvector('pg_catalog.english', coalesce(NEW.description, '')), 'C')) || setweight(to_tsvector('pg_catalog.english', coalesce(NEW.name, '')), 'A');
                RETURN NEW;
            END
            $$;


ALTER FUNCTION public.incident_search_vector_update() OWNER TO postgres;

--
-- Name: incident_type_search_vector_update(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.incident_type_search_vector_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
            BEGIN
                NEW.search_vector = to_tsvector('pg_catalog.english', coalesce(NEW.name, '')) || to_tsvector('pg_catalog.english', coalesce(NEW.description, ''));
                RETURN NEW;
            END
            $$;


ALTER FUNCTION public.incident_type_search_vector_update() OWNER TO postgres;

--
-- Name: individual_contact_search_vector_update(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.individual_contact_search_vector_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
            BEGIN
                NEW.search_vector = ((setweight(to_tsvector('pg_catalog.english', coalesce(NEW.name, '')), 'A') || setweight(to_tsvector('pg_catalog.english', coalesce(NEW.title, '')), 'B')) || setweight(to_tsvector('pg_catalog.english', coalesce(NEW.company, '')), 'C')) || setweight(to_tsvector('pg_catalog.english', coalesce(NEW.notes, '')), 'D');
                RETURN NEW;
            END
            $$;


ALTER FUNCTION public.individual_contact_search_vector_update() OWNER TO postgres;

--
-- Name: notification_search_vector_update(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.notification_search_vector_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
            BEGIN
                NEW.search_vector = to_tsvector('pg_catalog.english', coalesce(NEW.name, '')) || to_tsvector('pg_catalog.english', coalesce(NEW.description, ''));
                RETURN NEW;
            END
            $$;


ALTER FUNCTION public.notification_search_vector_update() OWNER TO postgres;

--
-- Name: organization_search_vector_update(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.organization_search_vector_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
            BEGIN
                NEW.search_vector = setweight(to_tsvector('pg_catalog.english', coalesce(NEW.name, '')), 'A') || setweight(to_tsvector('pg_catalog.english', coalesce(NEW.description, '')), 'B');
                RETURN NEW;
            END
            $$;


ALTER FUNCTION public.organization_search_vector_update() OWNER TO postgres;

--
-- Name: plugin_search_vector_update(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.plugin_search_vector_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
            BEGIN
                NEW.search_vector = ((setweight(to_tsvector('pg_catalog.english', coalesce(NEW.title, '')), 'A') || setweight(to_tsvector('pg_catalog.english', coalesce(NEW.slug, '')), 'B')) || setweight(to_tsvector('pg_catalog.english', coalesce(NEW.type, '')), 'C')) || setweight(to_tsvector('pg_catalog.english', coalesce(NEW.description, '')), 'C');
                RETURN NEW;
            END
            $$;


ALTER FUNCTION public.plugin_search_vector_update() OWNER TO postgres;

--
-- Name: policy_search_vector_update(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.policy_search_vector_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
            BEGIN
                NEW.search_vector = to_tsvector('pg_catalog.english', coalesce(NEW.name, '')) || to_tsvector('pg_catalog.english', coalesce(NEW.description, ''));
                RETURN NEW;
            END
            $$;


ALTER FUNCTION public.policy_search_vector_update() OWNER TO postgres;

--
-- Name: project_search_vector_update(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.project_search_vector_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
            BEGIN
                NEW.search_vector = setweight(to_tsvector('pg_catalog.english', coalesce(NEW.name, '')), 'A') || setweight(to_tsvector('pg_catalog.english', coalesce(NEW.description, '')), 'B');
                RETURN NEW;
            END
            $$;


ALTER FUNCTION public.project_search_vector_update() OWNER TO postgres;

--
-- Name: report_search_vector_update(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.report_search_vector_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
            BEGIN
                NEW.search_vector = to_tsvector('pg_catalog.english', coalesce(NEW.details_raw, ''));
                RETURN NEW;
            END
            $$;


ALTER FUNCTION public.report_search_vector_update() OWNER TO postgres;

--
-- Name: search_filter_search_vector_update(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.search_filter_search_vector_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
            BEGIN
                NEW.search_vector = setweight(to_tsvector('pg_catalog.english', coalesce(NEW.name, '')), 'A') || setweight(to_tsvector('pg_catalog.english', coalesce(NEW.description, '')), 'B');
                RETURN NEW;
            END
            $$;


ALTER FUNCTION public.search_filter_search_vector_update() OWNER TO postgres;

--
-- Name: service_search_vector_update(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.service_search_vector_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
            BEGIN
                NEW.search_vector = to_tsvector('pg_catalog.english', coalesce(NEW.name, ''));
                RETURN NEW;
            END
            $$;


ALTER FUNCTION public.service_search_vector_update() OWNER TO postgres;

--
-- Name: tag_search_vector_update(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.tag_search_vector_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
            BEGIN
                NEW.search_vector = to_tsvector('pg_catalog.english', coalesce(NEW.name, ''));
                RETURN NEW;
            END
            $$;


ALTER FUNCTION public.tag_search_vector_update() OWNER TO postgres;

--
-- Name: tag_type_search_vector_update(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.tag_type_search_vector_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
            BEGIN
                NEW.search_vector = to_tsvector('pg_catalog.english', coalesce(NEW.name, ''));
                RETURN NEW;
            END
            $$;


ALTER FUNCTION public.tag_type_search_vector_update() OWNER TO postgres;

--
-- Name: task_search_vector_update(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.task_search_vector_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
            BEGIN
                NEW.search_vector = to_tsvector('pg_catalog.english', coalesce(NEW.description, ''));
                RETURN NEW;
            END
            $$;


ALTER FUNCTION public.task_search_vector_update() OWNER TO postgres;

--
-- Name: team_contact_search_vector_update(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.team_contact_search_vector_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
            BEGIN
                NEW.search_vector = setweight(to_tsvector('pg_catalog.english', coalesce(NEW.name, '')), 'A') || setweight(to_tsvector('pg_catalog.english', coalesce(NEW.notes, '')), 'B');
                RETURN NEW;
            END
            $$;


ALTER FUNCTION public.team_contact_search_vector_update() OWNER TO postgres;

--
-- Name: term_search_vector_update(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.term_search_vector_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
            BEGIN
                NEW.search_vector = to_tsvector('pg_catalog.english', coalesce(NEW.text, ''));
                RETURN NEW;
            END
            $$;


ALTER FUNCTION public.term_search_vector_update() OWNER TO postgres;

--
-- Name: tsq_append_current_token(public.tsq_state); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.tsq_append_current_token(state public.tsq_state) RETURNS public.tsq_state
    LANGUAGE plpgsql IMMUTABLE
    AS $$
BEGIN
    IF state.current_token != '' THEN
        state.tokens := array_append(state.tokens, state.current_token);
        state.current_token := '';
    END IF;
    RETURN state;
END;
$$;


ALTER FUNCTION public.tsq_append_current_token(state public.tsq_state) OWNER TO postgres;

--
-- Name: tsq_parse(text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.tsq_parse(search_query text) RETURNS tsquery
    LANGUAGE sql IMMUTABLE
    AS $$
    SELECT tsq_parse(get_current_ts_config(), search_query);
$$;


ALTER FUNCTION public.tsq_parse(search_query text) OWNER TO postgres;

--
-- Name: tsq_parse(regconfig, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.tsq_parse(config regconfig, search_query text) RETURNS tsquery
    LANGUAGE sql IMMUTABLE
    AS $$
    SELECT tsq_process_tokens(config, tsq_tokenize(search_query));
$$;


ALTER FUNCTION public.tsq_parse(config regconfig, search_query text) OWNER TO postgres;

--
-- Name: tsq_parse(text, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.tsq_parse(config text, search_query text) RETURNS tsquery
    LANGUAGE sql IMMUTABLE
    AS $$
    SELECT tsq_parse(config::regconfig, search_query);
$$;


ALTER FUNCTION public.tsq_parse(config text, search_query text) OWNER TO postgres;

--
-- Name: tsq_process_tokens(text[]); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.tsq_process_tokens(tokens text[]) RETURNS tsquery
    LANGUAGE sql IMMUTABLE
    AS $$
    SELECT tsq_process_tokens(get_current_ts_config(), tokens);
$$;


ALTER FUNCTION public.tsq_process_tokens(tokens text[]) OWNER TO postgres;

--
-- Name: tsq_process_tokens(regconfig, text[]); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.tsq_process_tokens(config regconfig, tokens text[]) RETURNS tsquery
    LANGUAGE plpgsql IMMUTABLE
    AS $$
DECLARE
    result_query text;
    previous_value text;
    value text;
BEGIN
    result_query := '';

    FOREACH value IN ARRAY tokens LOOP
        IF value = '"' THEN
            CONTINUE;
        END IF;

        IF value = 'or' THEN
            value := ' | ';
        END IF;

        IF left(value, 1) = '"' AND right(value, 1) = '"' THEN
            value := phraseto_tsquery(config, value);
        ELSIF value NOT IN ('(', ' | ', ')', '-') THEN
            value := quote_literal(value) || ':*';
        END IF;

        IF previous_value = '-' THEN
            IF value = '(' THEN
                value := '!' || value;
            ELSIF value = ' | ' THEN
                CONTINUE;
            ELSE
                value := '!(' || value || ')';
            END IF;
        END IF;

        SELECT
            CASE
                WHEN result_query = '' THEN value
                WHEN previous_value = ' | ' AND value = ' | ' THEN result_query
                WHEN previous_value = ' | ' THEN result_query || ' | ' || value
                WHEN previous_value IN ('!(', '(') OR value = ')' THEN result_query || value
                WHEN value != ' | ' THEN result_query || ' & ' || value
                ELSE result_query
            END
        INTO result_query;

        IF result_query = ' | ' THEN
            result_query := '';
        END IF;

        previous_value := value;
    END LOOP;

    RETURN to_tsquery(config, result_query);
END;
$$;


ALTER FUNCTION public.tsq_process_tokens(config regconfig, tokens text[]) OWNER TO postgres;

--
-- Name: tsq_tokenize(text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.tsq_tokenize(search_query text) RETURNS text[]
    LANGUAGE plpgsql IMMUTABLE
    AS $$
DECLARE
    state tsq_state;
BEGIN
    SELECT
        search_query::text AS search_query,
        0::int AS parentheses_stack,
        0 AS skip_for,
        ''::text AS current_token,
        0 AS current_index,
        ''::text AS current_char,
        ''::text AS previous_char,
        '{}'::text[] AS tokens
    INTO state;

    state.search_query := lower(trim(
        regexp_replace(search_query, '""+', '""', 'g')
    ));

    FOR state.current_index IN (
        SELECT generate_series(1, length(state.search_query))
    ) LOOP
        state.current_char := substring(
            search_query FROM state.current_index FOR 1
        );

        IF state.skip_for > 0 THEN
            state.skip_for := state.skip_for - 1;
            CONTINUE;
        END IF;

        state := tsq_tokenize_character(state);
        state.previous_char := state.current_char;
    END LOOP;
    state := tsq_append_current_token(state);

    state.tokens := array_nremove(state.tokens, '(', -state.parentheses_stack);

    RETURN state.tokens;
END;
$$;


ALTER FUNCTION public.tsq_tokenize(search_query text) OWNER TO postgres;

--
-- Name: tsq_tokenize_character(public.tsq_state); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.tsq_tokenize_character(state public.tsq_state) RETURNS public.tsq_state
    LANGUAGE plpgsql IMMUTABLE
    AS $$
BEGIN
    IF state.current_char = '(' THEN
        state.tokens := array_append(state.tokens, '(');
        state.parentheses_stack := state.parentheses_stack + 1;
        state := tsq_append_current_token(state);
    ELSIF state.current_char = ')' THEN
        IF (state.parentheses_stack > 0 AND state.current_token != '') THEN
            state := tsq_append_current_token(state);
            state.tokens := array_append(state.tokens, ')');
            state.parentheses_stack := state.parentheses_stack - 1;
        END IF;
    ELSIF state.current_char = '"' THEN
        state.skip_for := position('"' IN substring(
            state.search_query FROM state.current_index + 1
        ));

        IF state.skip_for > 1 THEN
            state.tokens = array_append(
                state.tokens,
                substring(
                    state.search_query
                    FROM state.current_index FOR state.skip_for + 1
                )
            );
        ELSIF state.skip_for = 0 THEN
            state.current_token := state.current_token || state.current_char;
        END IF;
    ELSIF (
        state.current_char = '-' AND
        (state.current_index = 1 OR state.previous_char = ' ')
    ) THEN
        state.tokens := array_append(state.tokens, '-');
    ELSIF state.current_char = ' ' THEN
        state := tsq_append_current_token(state);
    ELSE
        state.current_token = state.current_token || state.current_char;
    END IF;
    RETURN state;
END;
$$;


ALTER FUNCTION public.tsq_tokenize_character(state public.tsq_state) OWNER TO postgres;

--
-- Name: workflow_search_vector_update(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.workflow_search_vector_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
            BEGIN
                NEW.search_vector = to_tsvector('pg_catalog.english', coalesce(NEW.name, '')) || to_tsvector('pg_catalog.english', coalesce(NEW.description, ''));
                RETURN NEW;
            END
            $$;


ALTER FUNCTION public.workflow_search_vector_update() OWNER TO postgres;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: alembic_version; Type: TABLE; Schema: dispatch_core; Owner: postgres
--

CREATE TABLE dispatch_core.alembic_version (
    version_num character varying(32) NOT NULL
);


ALTER TABLE dispatch_core.alembic_version OWNER TO postgres;

--
-- Name: dispatch_user; Type: TABLE; Schema: dispatch_core; Owner: postgres
--

CREATE TABLE dispatch_core.dispatch_user (
    id integer NOT NULL,
    email character varying,
    password bytea NOT NULL,
    search_vector tsvector,
    updated_at timestamp without time zone,
    created_at timestamp without time zone,
    last_mfa_time timestamp without time zone,
    experimental_features boolean
);


ALTER TABLE dispatch_core.dispatch_user OWNER TO postgres;

--
-- Name: dispatch_user_id_seq; Type: SEQUENCE; Schema: dispatch_core; Owner: postgres
--

CREATE SEQUENCE dispatch_core.dispatch_user_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE dispatch_core.dispatch_user_id_seq OWNER TO postgres;

--
-- Name: dispatch_user_id_seq; Type: SEQUENCE OWNED BY; Schema: dispatch_core; Owner: postgres
--

ALTER SEQUENCE dispatch_core.dispatch_user_id_seq OWNED BY dispatch_core.dispatch_user.id;


--
-- Name: dispatch_user_organization; Type: TABLE; Schema: dispatch_core; Owner: postgres
--

CREATE TABLE dispatch_core.dispatch_user_organization (
    dispatch_user_id integer NOT NULL,
    organization_id integer NOT NULL,
    role character varying,
    updated_at timestamp without time zone,
    created_at timestamp without time zone
);


ALTER TABLE dispatch_core.dispatch_user_organization OWNER TO postgres;

--
-- Name: organization; Type: TABLE; Schema: dispatch_core; Owner: postgres
--

CREATE TABLE dispatch_core.organization (
    id integer NOT NULL,
    name character varying,
    "default" boolean,
    description character varying,
    banner_enabled boolean,
    banner_color character varying,
    banner_text character varying,
    search_vector tsvector,
    slug character varying
);


ALTER TABLE dispatch_core.organization OWNER TO postgres;

--
-- Name: organization_id_seq; Type: SEQUENCE; Schema: dispatch_core; Owner: postgres
--

CREATE SEQUENCE dispatch_core.organization_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE dispatch_core.organization_id_seq OWNER TO postgres;

--
-- Name: organization_id_seq; Type: SEQUENCE OWNED BY; Schema: dispatch_core; Owner: postgres
--

ALTER SEQUENCE dispatch_core.organization_id_seq OWNED BY dispatch_core.organization.id;


--
-- Name: plugin; Type: TABLE; Schema: dispatch_core; Owner: postgres
--

CREATE TABLE dispatch_core.plugin (
    id integer NOT NULL,
    title character varying,
    slug character varying,
    description character varying,
    version character varying,
    author character varying,
    author_url character varying,
    type character varying,
    multiple boolean,
    search_vector tsvector
);


ALTER TABLE dispatch_core.plugin OWNER TO postgres;

--
-- Name: plugin_event; Type: TABLE; Schema: dispatch_core; Owner: postgres
--

CREATE TABLE dispatch_core.plugin_event (
    id integer NOT NULL,
    name character varying,
    slug character varying,
    description character varying,
    plugin_id integer,
    search_vector tsvector
);


ALTER TABLE dispatch_core.plugin_event OWNER TO postgres;

--
-- Name: plugin_event_id_seq; Type: SEQUENCE; Schema: dispatch_core; Owner: postgres
--

CREATE SEQUENCE dispatch_core.plugin_event_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE dispatch_core.plugin_event_id_seq OWNER TO postgres;

--
-- Name: plugin_event_id_seq; Type: SEQUENCE OWNED BY; Schema: dispatch_core; Owner: postgres
--

ALTER SEQUENCE dispatch_core.plugin_event_id_seq OWNED BY dispatch_core.plugin_event.id;


--
-- Name: plugin_id_seq; Type: SEQUENCE; Schema: dispatch_core; Owner: postgres
--

CREATE SEQUENCE dispatch_core.plugin_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE dispatch_core.plugin_id_seq OWNER TO postgres;

--
-- Name: plugin_id_seq; Type: SEQUENCE OWNED BY; Schema: dispatch_core; Owner: postgres
--

ALTER SEQUENCE dispatch_core.plugin_id_seq OWNED BY dispatch_core.plugin.id;


--
-- Name: alembic_version; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.alembic_version (
    version_num character varying(32) NOT NULL
);


ALTER TABLE dispatch_organization_default.alembic_version OWNER TO postgres;

--
-- Name: alert; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.alert (
    id integer NOT NULL,
    name character varying,
    description character varying,
    orginator character varying,
    external_link character varying,
    source_id integer,
    search_vector tsvector,
    updated_at timestamp without time zone,
    created_at timestamp without time zone
);


ALTER TABLE dispatch_organization_default.alert OWNER TO postgres;

--
-- Name: alert_id_seq; Type: SEQUENCE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE SEQUENCE dispatch_organization_default.alert_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE dispatch_organization_default.alert_id_seq OWNER TO postgres;

--
-- Name: alert_id_seq; Type: SEQUENCE OWNED BY; Schema: dispatch_organization_default; Owner: postgres
--

ALTER SEQUENCE dispatch_organization_default.alert_id_seq OWNED BY dispatch_organization_default.alert.id;


--
-- Name: assoc_case_incidents; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.assoc_case_incidents (
    case_id integer NOT NULL,
    incident_id integer NOT NULL
);


ALTER TABLE dispatch_organization_default.assoc_case_incidents OWNER TO postgres;

--
-- Name: assoc_case_tags; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.assoc_case_tags (
    case_id integer NOT NULL,
    tag_id integer NOT NULL
);


ALTER TABLE dispatch_organization_default.assoc_case_tags OWNER TO postgres;

--
-- Name: assoc_cost_model_activities; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.assoc_cost_model_activities (
    cost_model_id integer NOT NULL,
    cost_model_activity_id integer NOT NULL
);


ALTER TABLE dispatch_organization_default.assoc_cost_model_activities OWNER TO postgres;

--
-- Name: assoc_document_filters; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.assoc_document_filters (
    document_id integer NOT NULL,
    search_filter_id integer NOT NULL
);


ALTER TABLE dispatch_organization_default.assoc_document_filters OWNER TO postgres;

--
-- Name: assoc_incident_tags; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.assoc_incident_tags (
    incident_id integer NOT NULL,
    tag_id integer NOT NULL
);


ALTER TABLE dispatch_organization_default.assoc_incident_tags OWNER TO postgres;

--
-- Name: assoc_incident_terms; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.assoc_incident_terms (
    incident_id integer NOT NULL,
    term_id integer NOT NULL
);


ALTER TABLE dispatch_organization_default.assoc_incident_terms OWNER TO postgres;

--
-- Name: assoc_individual_contact_filters; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.assoc_individual_contact_filters (
    individual_contact_id integer NOT NULL,
    search_filter_id integer NOT NULL
);


ALTER TABLE dispatch_organization_default.assoc_individual_contact_filters OWNER TO postgres;

--
-- Name: assoc_notification_filters; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.assoc_notification_filters (
    notification_id integer NOT NULL,
    search_filter_id integer NOT NULL
);


ALTER TABLE dispatch_organization_default.assoc_notification_filters OWNER TO postgres;

--
-- Name: assoc_query_incidents; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.assoc_query_incidents (
    query_id integer NOT NULL,
    incident_id integer NOT NULL
);


ALTER TABLE dispatch_organization_default.assoc_query_incidents OWNER TO postgres;

--
-- Name: assoc_query_tags; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.assoc_query_tags (
    query_id integer NOT NULL,
    tag_id integer NOT NULL
);


ALTER TABLE dispatch_organization_default.assoc_query_tags OWNER TO postgres;

--
-- Name: assoc_service_filters; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.assoc_service_filters (
    service_id integer NOT NULL,
    search_filter_id integer NOT NULL
);


ALTER TABLE dispatch_organization_default.assoc_service_filters OWNER TO postgres;

--
-- Name: assoc_signal_engagements; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.assoc_signal_engagements (
    signal_id integer NOT NULL,
    signal_engagement_id integer NOT NULL
);


ALTER TABLE dispatch_organization_default.assoc_signal_engagements OWNER TO postgres;

--
-- Name: assoc_signal_entity_types; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.assoc_signal_entity_types (
    signal_id integer NOT NULL,
    entity_type_id integer NOT NULL
);


ALTER TABLE dispatch_organization_default.assoc_signal_entity_types OWNER TO postgres;

--
-- Name: assoc_signal_filters; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.assoc_signal_filters (
    signal_id integer NOT NULL,
    signal_filter_id integer NOT NULL
);


ALTER TABLE dispatch_organization_default.assoc_signal_filters OWNER TO postgres;

--
-- Name: assoc_signal_instance_entities; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.assoc_signal_instance_entities (
    signal_instance_id uuid NOT NULL,
    entity_id integer NOT NULL
);


ALTER TABLE dispatch_organization_default.assoc_signal_instance_entities OWNER TO postgres;

--
-- Name: assoc_signal_tags; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.assoc_signal_tags (
    signal_id integer NOT NULL,
    tag_id integer NOT NULL
);


ALTER TABLE dispatch_organization_default.assoc_signal_tags OWNER TO postgres;

--
-- Name: assoc_signal_workflows; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.assoc_signal_workflows (
    signal_id integer NOT NULL,
    workflow_id integer NOT NULL
);


ALTER TABLE dispatch_organization_default.assoc_signal_workflows OWNER TO postgres;

--
-- Name: assoc_source_incidents; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.assoc_source_incidents (
    source_id integer NOT NULL,
    incident_id integer NOT NULL
);


ALTER TABLE dispatch_organization_default.assoc_source_incidents OWNER TO postgres;

--
-- Name: assoc_source_tags; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.assoc_source_tags (
    source_id integer NOT NULL,
    tag_id integer NOT NULL
);


ALTER TABLE dispatch_organization_default.assoc_source_tags OWNER TO postgres;

--
-- Name: assoc_team_contact_filters; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.assoc_team_contact_filters (
    team_contact_id integer NOT NULL,
    search_filter_id integer NOT NULL
);


ALTER TABLE dispatch_organization_default.assoc_team_contact_filters OWNER TO postgres;

--
-- Name: case; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default."case" (
    id integer NOT NULL,
    name character varying,
    title character varying NOT NULL,
    description character varying NOT NULL,
    resolution character varying NOT NULL,
    status character varying NOT NULL,
    visibility character varying NOT NULL,
    reported_at timestamp without time zone,
    closed_at timestamp without time zone,
    search_vector tsvector,
    duplicate_id integer,
    project_id integer,
    updated_at timestamp without time zone,
    created_at timestamp without time zone,
    triage_at timestamp without time zone,
    escalated_at timestamp without time zone,
    tactical_group_id integer,
    case_document_id integer,
    related_id integer,
    case_type_id integer,
    case_severity_id integer,
    case_priority_id integer,
    participants_team character varying,
    participants_location character varying,
    assignee_id integer,
    resolution_reason character varying,
    signal_thread_ts character varying,
    reporter_id integer
);


ALTER TABLE dispatch_organization_default."case" OWNER TO postgres;

--
-- Name: case_id_seq; Type: SEQUENCE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE SEQUENCE dispatch_organization_default.case_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE dispatch_organization_default.case_id_seq OWNER TO postgres;

--
-- Name: case_id_seq; Type: SEQUENCE OWNED BY; Schema: dispatch_organization_default; Owner: postgres
--

ALTER SEQUENCE dispatch_organization_default.case_id_seq OWNED BY dispatch_organization_default."case".id;


--
-- Name: case_priority; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.case_priority (
    id integer NOT NULL,
    name character varying,
    description character varying,
    color character varying,
    enabled boolean,
    "default" boolean,
    view_order integer,
    search_vector tsvector,
    project_id integer,
    page_assignee boolean
);


ALTER TABLE dispatch_organization_default.case_priority OWNER TO postgres;

--
-- Name: case_priority_id_seq; Type: SEQUENCE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE SEQUENCE dispatch_organization_default.case_priority_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE dispatch_organization_default.case_priority_id_seq OWNER TO postgres;

--
-- Name: case_priority_id_seq; Type: SEQUENCE OWNED BY; Schema: dispatch_organization_default; Owner: postgres
--

ALTER SEQUENCE dispatch_organization_default.case_priority_id_seq OWNED BY dispatch_organization_default.case_priority.id;


--
-- Name: case_severity; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.case_severity (
    id integer NOT NULL,
    name character varying,
    description character varying,
    color character varying,
    enabled boolean,
    "default" boolean,
    view_order integer,
    search_vector tsvector,
    project_id integer
);


ALTER TABLE dispatch_organization_default.case_severity OWNER TO postgres;

--
-- Name: case_severity_id_seq; Type: SEQUENCE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE SEQUENCE dispatch_organization_default.case_severity_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE dispatch_organization_default.case_severity_id_seq OWNER TO postgres;

--
-- Name: case_severity_id_seq; Type: SEQUENCE OWNED BY; Schema: dispatch_organization_default; Owner: postgres
--

ALTER SEQUENCE dispatch_organization_default.case_severity_id_seq OWNED BY dispatch_organization_default.case_severity.id;


--
-- Name: case_type; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.case_type (
    id integer NOT NULL,
    name character varying,
    description character varying,
    visibility character varying,
    "default" boolean,
    enabled boolean,
    exclude_from_metrics boolean,
    search_vector tsvector,
    project_id integer,
    plugin_metadata json,
    case_template_document_id integer,
    oncall_service_id integer,
    incident_type_id integer,
    conversation_target character varying
);


ALTER TABLE dispatch_organization_default.case_type OWNER TO postgres;

--
-- Name: case_type_id_seq; Type: SEQUENCE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE SEQUENCE dispatch_organization_default.case_type_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE dispatch_organization_default.case_type_id_seq OWNER TO postgres;

--
-- Name: case_type_id_seq; Type: SEQUENCE OWNED BY; Schema: dispatch_organization_default; Owner: postgres
--

ALTER SEQUENCE dispatch_organization_default.case_type_id_seq OWNED BY dispatch_organization_default.case_type.id;


--
-- Name: conference; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.conference (
    resource_type character varying,
    resource_id character varying,
    weblink character varying,
    id integer NOT NULL,
    conference_id character varying,
    conference_challenge character varying DEFAULT 'N/A'::character varying NOT NULL,
    incident_id integer,
    created_at timestamp without time zone,
    updated_at timestamp without time zone
);


ALTER TABLE dispatch_organization_default.conference OWNER TO postgres;

--
-- Name: conference_id_seq; Type: SEQUENCE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE SEQUENCE dispatch_organization_default.conference_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE dispatch_organization_default.conference_id_seq OWNER TO postgres;

--
-- Name: conference_id_seq; Type: SEQUENCE OWNED BY; Schema: dispatch_organization_default; Owner: postgres
--

ALTER SEQUENCE dispatch_organization_default.conference_id_seq OWNED BY dispatch_organization_default.conference.id;


--
-- Name: conversation; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.conversation (
    resource_type character varying,
    resource_id character varying,
    weblink character varying,
    id integer NOT NULL,
    channel_id character varying,
    incident_id integer,
    created_at timestamp without time zone,
    updated_at timestamp without time zone,
    thread_id character varying,
    case_id integer
);


ALTER TABLE dispatch_organization_default.conversation OWNER TO postgres;

--
-- Name: conversation_id_seq; Type: SEQUENCE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE SEQUENCE dispatch_organization_default.conversation_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE dispatch_organization_default.conversation_id_seq OWNER TO postgres;

--
-- Name: conversation_id_seq; Type: SEQUENCE OWNED BY; Schema: dispatch_organization_default; Owner: postgres
--

ALTER SEQUENCE dispatch_organization_default.conversation_id_seq OWNED BY dispatch_organization_default.conversation.id;


--
-- Name: cost_model; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.cost_model (
    id integer NOT NULL,
    name character varying,
    description character varying,
    enabled boolean,
    search_vector tsvector,
    project_id integer,
    created_at timestamp without time zone,
    updated_at timestamp without time zone
);


ALTER TABLE dispatch_organization_default.cost_model OWNER TO postgres;

--
-- Name: cost_model_activity; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.cost_model_activity (
    id integer NOT NULL,
    plugin_event_id integer,
    response_time_seconds integer,
    enabled boolean
);


ALTER TABLE dispatch_organization_default.cost_model_activity OWNER TO postgres;

--
-- Name: cost_model_activity_id_seq; Type: SEQUENCE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE SEQUENCE dispatch_organization_default.cost_model_activity_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE dispatch_organization_default.cost_model_activity_id_seq OWNER TO postgres;

--
-- Name: cost_model_activity_id_seq; Type: SEQUENCE OWNED BY; Schema: dispatch_organization_default; Owner: postgres
--

ALTER SEQUENCE dispatch_organization_default.cost_model_activity_id_seq OWNED BY dispatch_organization_default.cost_model_activity.id;


--
-- Name: cost_model_id_seq; Type: SEQUENCE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE SEQUENCE dispatch_organization_default.cost_model_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE dispatch_organization_default.cost_model_id_seq OWNER TO postgres;

--
-- Name: cost_model_id_seq; Type: SEQUENCE OWNED BY; Schema: dispatch_organization_default; Owner: postgres
--

ALTER SEQUENCE dispatch_organization_default.cost_model_id_seq OWNED BY dispatch_organization_default.cost_model.id;


--
-- Name: definition; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.definition (
    id integer NOT NULL,
    text character varying,
    source character varying,
    search_vector tsvector,
    project_id integer
);


ALTER TABLE dispatch_organization_default.definition OWNER TO postgres;

--
-- Name: definition_id_seq; Type: SEQUENCE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE SEQUENCE dispatch_organization_default.definition_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE dispatch_organization_default.definition_id_seq OWNER TO postgres;

--
-- Name: definition_id_seq; Type: SEQUENCE OWNED BY; Schema: dispatch_organization_default; Owner: postgres
--

ALTER SEQUENCE dispatch_organization_default.definition_id_seq OWNED BY dispatch_organization_default.definition.id;


--
-- Name: definition_teams; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.definition_teams (
    definition_id integer NOT NULL,
    team_contact_id integer NOT NULL
);


ALTER TABLE dispatch_organization_default.definition_teams OWNER TO postgres;

--
-- Name: definition_terms; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.definition_terms (
    definition_id integer NOT NULL,
    term_id integer NOT NULL
);


ALTER TABLE dispatch_organization_default.definition_terms OWNER TO postgres;

--
-- Name: dispatch_user_project; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.dispatch_user_project (
    dispatch_user_id integer NOT NULL,
    project_id integer NOT NULL,
    role character varying NOT NULL,
    updated_at timestamp without time zone,
    created_at timestamp without time zone,
    "default" boolean
);


ALTER TABLE dispatch_organization_default.dispatch_user_project OWNER TO postgres;

--
-- Name: document; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.document (
    resource_type character varying,
    resource_id character varying,
    weblink character varying,
    id integer NOT NULL,
    name character varying,
    description character varying,
    report_id integer,
    incident_id integer,
    evergreen boolean,
    evergreen_owner character varying,
    evergreen_reminder_interval integer,
    evergreen_last_reminder_at timestamp without time zone,
    search_vector tsvector,
    project_id integer,
    created_at timestamp without time zone,
    updated_at timestamp without time zone,
    case_id integer
);


ALTER TABLE dispatch_organization_default.document OWNER TO postgres;

--
-- Name: document_id_seq; Type: SEQUENCE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE SEQUENCE dispatch_organization_default.document_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE dispatch_organization_default.document_id_seq OWNER TO postgres;

--
-- Name: document_id_seq; Type: SEQUENCE OWNED BY; Schema: dispatch_organization_default; Owner: postgres
--

ALTER SEQUENCE dispatch_organization_default.document_id_seq OWNED BY dispatch_organization_default.document.id;


--
-- Name: entity; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.entity (
    id integer NOT NULL,
    name character varying,
    description character varying,
    value character varying,
    source boolean,
    entity_type_id integer NOT NULL,
    search_vector tsvector,
    project_id integer,
    updated_at timestamp without time zone,
    created_at timestamp without time zone
);


ALTER TABLE dispatch_organization_default.entity OWNER TO postgres;

--
-- Name: entity_id_seq; Type: SEQUENCE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE SEQUENCE dispatch_organization_default.entity_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE dispatch_organization_default.entity_id_seq OWNER TO postgres;

--
-- Name: entity_id_seq; Type: SEQUENCE OWNED BY; Schema: dispatch_organization_default; Owner: postgres
--

ALTER SEQUENCE dispatch_organization_default.entity_id_seq OWNED BY dispatch_organization_default.entity.id;


--
-- Name: entity_type; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.entity_type (
    id integer NOT NULL,
    name character varying,
    description character varying,
    jpath character varying NOT NULL,
    regular_expression character varying,
    enabled boolean,
    search_vector tsvector,
    project_id integer,
    updated_at timestamp without time zone,
    created_at timestamp without time zone,
    scope character varying NOT NULL
);


ALTER TABLE dispatch_organization_default.entity_type OWNER TO postgres;

--
-- Name: entity_type_id_seq; Type: SEQUENCE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE SEQUENCE dispatch_organization_default.entity_type_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE dispatch_organization_default.entity_type_id_seq OWNER TO postgres;

--
-- Name: entity_type_id_seq; Type: SEQUENCE OWNED BY; Schema: dispatch_organization_default; Owner: postgres
--

ALTER SEQUENCE dispatch_organization_default.entity_type_id_seq OWNED BY dispatch_organization_default.entity_type.id;


--
-- Name: event; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.event (
    id integer NOT NULL,
    uuid uuid NOT NULL,
    started_at timestamp without time zone NOT NULL,
    ended_at timestamp without time zone NOT NULL,
    source character varying NOT NULL,
    description character varying NOT NULL,
    details json,
    individual_id integer,
    incident_id integer,
    search_vector tsvector,
    updated_at timestamp without time zone,
    created_at timestamp without time zone,
    dispatch_user_id integer,
    case_id integer,
    type character varying,
    owner character varying,
    pinned boolean
);


ALTER TABLE dispatch_organization_default.event OWNER TO postgres;

--
-- Name: event_id_seq; Type: SEQUENCE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE SEQUENCE dispatch_organization_default.event_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE dispatch_organization_default.event_id_seq OWNER TO postgres;

--
-- Name: event_id_seq; Type: SEQUENCE OWNED BY; Schema: dispatch_organization_default; Owner: postgres
--

ALTER SEQUENCE dispatch_organization_default.event_id_seq OWNED BY dispatch_organization_default.event.id;


--
-- Name: feedback; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.feedback (
    id integer NOT NULL,
    rating character varying,
    feedback character varying,
    incident_id integer,
    participant_id integer,
    updated_at timestamp without time zone,
    created_at timestamp without time zone,
    search_vector tsvector
);


ALTER TABLE dispatch_organization_default.feedback OWNER TO postgres;

--
-- Name: feedback_id_seq; Type: SEQUENCE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE SEQUENCE dispatch_organization_default.feedback_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE dispatch_organization_default.feedback_id_seq OWNER TO postgres;

--
-- Name: feedback_id_seq; Type: SEQUENCE OWNED BY; Schema: dispatch_organization_default; Owner: postgres
--

ALTER SEQUENCE dispatch_organization_default.feedback_id_seq OWNED BY dispatch_organization_default.feedback.id;


--
-- Name: forms; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.forms (
    id integer NOT NULL,
    form_data character varying,
    created_at timestamp without time zone,
    updated_at timestamp without time zone,
    status character varying,
    attorney_status character varying,
    attorney_questions character varying,
    attorney_analysis character varying,
    creator_id integer,
    incident_id integer,
    form_type_id integer,
    project_id integer
);


ALTER TABLE dispatch_organization_default.forms OWNER TO postgres;

--
-- Name: forms_id_seq; Type: SEQUENCE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE SEQUENCE dispatch_organization_default.forms_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE dispatch_organization_default.forms_id_seq OWNER TO postgres;

--
-- Name: forms_id_seq; Type: SEQUENCE OWNED BY; Schema: dispatch_organization_default; Owner: postgres
--

ALTER SEQUENCE dispatch_organization_default.forms_id_seq OWNED BY dispatch_organization_default.forms.id;


--
-- Name: forms_type; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.forms_type (
    id integer NOT NULL,
    name character varying,
    description character varying,
    enabled boolean,
    created_at timestamp without time zone,
    updated_at timestamp without time zone,
    form_schema character varying,
    creator_id integer,
    project_id integer,
    service_id integer
);


ALTER TABLE dispatch_organization_default.forms_type OWNER TO postgres;

--
-- Name: forms_type_id_seq; Type: SEQUENCE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE SEQUENCE dispatch_organization_default.forms_type_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE dispatch_organization_default.forms_type_id_seq OWNER TO postgres;

--
-- Name: forms_type_id_seq; Type: SEQUENCE OWNED BY; Schema: dispatch_organization_default; Owner: postgres
--

ALTER SEQUENCE dispatch_organization_default.forms_type_id_seq OWNED BY dispatch_organization_default.forms_type.id;


--
-- Name: group; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default."group" (
    resource_type character varying,
    resource_id character varying,
    weblink character varying,
    id integer NOT NULL,
    name character varying,
    email character varying,
    incident_id integer,
    created_at timestamp without time zone,
    updated_at timestamp without time zone,
    case_id integer
);


ALTER TABLE dispatch_organization_default."group" OWNER TO postgres;

--
-- Name: group_id_seq; Type: SEQUENCE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE SEQUENCE dispatch_organization_default.group_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE dispatch_organization_default.group_id_seq OWNER TO postgres;

--
-- Name: group_id_seq; Type: SEQUENCE OWNED BY; Schema: dispatch_organization_default; Owner: postgres
--

ALTER SEQUENCE dispatch_organization_default.group_id_seq OWNED BY dispatch_organization_default."group".id;


--
-- Name: incident; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.incident (
    id integer NOT NULL,
    name character varying,
    title character varying NOT NULL,
    description character varying NOT NULL,
    status character varying NOT NULL,
    visibility character varying NOT NULL,
    reported_at timestamp without time zone,
    stable_at timestamp without time zone,
    closed_at timestamp without time zone,
    search_vector tsvector,
    incident_priority_id integer,
    incident_type_id integer,
    duplicate_id integer,
    project_id integer,
    created_at timestamp without time zone,
    updated_at timestamp without time zone,
    resolution character varying NOT NULL,
    participants_team character varying,
    participants_location character varying,
    commanders_location character varying,
    reporters_location character varying,
    commander_id integer,
    reporter_id integer,
    liaison_id integer,
    scribe_id integer,
    incident_document_id integer,
    incident_review_document_id integer,
    tactical_group_id integer,
    notifications_group_id integer,
    incident_severity_id integer,
    delay_executive_report_reminder timestamp without time zone,
    delay_tactical_report_reminder timestamp without time zone,
    cost_model_id integer
);


ALTER TABLE dispatch_organization_default.incident OWNER TO postgres;

--
-- Name: incident_cost; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.incident_cost (
    id integer NOT NULL,
    amount numeric(10,2),
    incident_cost_type_id integer,
    incident_id integer,
    project_id integer,
    updated_at timestamp without time zone,
    created_at timestamp without time zone
);


ALTER TABLE dispatch_organization_default.incident_cost OWNER TO postgres;

--
-- Name: incident_cost_id_seq; Type: SEQUENCE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE SEQUENCE dispatch_organization_default.incident_cost_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE dispatch_organization_default.incident_cost_id_seq OWNER TO postgres;

--
-- Name: incident_cost_id_seq; Type: SEQUENCE OWNED BY; Schema: dispatch_organization_default; Owner: postgres
--

ALTER SEQUENCE dispatch_organization_default.incident_cost_id_seq OWNED BY dispatch_organization_default.incident_cost.id;


--
-- Name: incident_cost_type; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.incident_cost_type (
    id integer NOT NULL,
    name character varying,
    description character varying,
    category character varying,
    details json,
    "default" boolean,
    editable boolean,
    search_vector tsvector,
    project_id integer,
    updated_at timestamp without time zone,
    created_at timestamp without time zone
);


ALTER TABLE dispatch_organization_default.incident_cost_type OWNER TO postgres;

--
-- Name: incident_cost_type_id_seq; Type: SEQUENCE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE SEQUENCE dispatch_organization_default.incident_cost_type_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE dispatch_organization_default.incident_cost_type_id_seq OWNER TO postgres;

--
-- Name: incident_cost_type_id_seq; Type: SEQUENCE OWNED BY; Schema: dispatch_organization_default; Owner: postgres
--

ALTER SEQUENCE dispatch_organization_default.incident_cost_type_id_seq OWNED BY dispatch_organization_default.incident_cost_type.id;


--
-- Name: incident_id_seq; Type: SEQUENCE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE SEQUENCE dispatch_organization_default.incident_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE dispatch_organization_default.incident_id_seq OWNER TO postgres;

--
-- Name: incident_id_seq; Type: SEQUENCE OWNED BY; Schema: dispatch_organization_default; Owner: postgres
--

ALTER SEQUENCE dispatch_organization_default.incident_id_seq OWNED BY dispatch_organization_default.incident.id;


--
-- Name: incident_priority; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.incident_priority (
    id integer NOT NULL,
    name character varying,
    description character varying,
    page_commander boolean,
    tactical_report_reminder integer DEFAULT 24,
    executive_report_reminder integer DEFAULT 24,
    enabled boolean,
    "default" boolean,
    view_order integer,
    search_vector tsvector,
    project_id integer,
    color character varying
);


ALTER TABLE dispatch_organization_default.incident_priority OWNER TO postgres;

--
-- Name: incident_priority_id_seq; Type: SEQUENCE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE SEQUENCE dispatch_organization_default.incident_priority_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE dispatch_organization_default.incident_priority_id_seq OWNER TO postgres;

--
-- Name: incident_priority_id_seq; Type: SEQUENCE OWNED BY; Schema: dispatch_organization_default; Owner: postgres
--

ALTER SEQUENCE dispatch_organization_default.incident_priority_id_seq OWNED BY dispatch_organization_default.incident_priority.id;


--
-- Name: incident_role; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.incident_role (
    id integer NOT NULL,
    role character varying,
    enabled boolean,
    "order" integer,
    service_id integer,
    individual_id integer,
    project_id integer,
    updated_at timestamp without time zone,
    created_at timestamp without time zone,
    engage_next_oncall boolean
);


ALTER TABLE dispatch_organization_default.incident_role OWNER TO postgres;

--
-- Name: incident_role_id_seq; Type: SEQUENCE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE SEQUENCE dispatch_organization_default.incident_role_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE dispatch_organization_default.incident_role_id_seq OWNER TO postgres;

--
-- Name: incident_role_id_seq; Type: SEQUENCE OWNED BY; Schema: dispatch_organization_default; Owner: postgres
--

ALTER SEQUENCE dispatch_organization_default.incident_role_id_seq OWNED BY dispatch_organization_default.incident_role.id;


--
-- Name: incident_role_incident_priority; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.incident_role_incident_priority (
    incident_role_id integer NOT NULL,
    incident_priority_id integer NOT NULL
);


ALTER TABLE dispatch_organization_default.incident_role_incident_priority OWNER TO postgres;

--
-- Name: incident_role_incident_type; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.incident_role_incident_type (
    incident_role_id integer NOT NULL,
    incident_type_id integer NOT NULL
);


ALTER TABLE dispatch_organization_default.incident_role_incident_type OWNER TO postgres;

--
-- Name: incident_role_tag; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.incident_role_tag (
    incident_role_id integer NOT NULL,
    tag_id integer NOT NULL
);


ALTER TABLE dispatch_organization_default.incident_role_tag OWNER TO postgres;

--
-- Name: incident_severity; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.incident_severity (
    id integer NOT NULL,
    name character varying,
    description character varying,
    color character varying,
    enabled boolean,
    "default" boolean,
    view_order integer,
    search_vector tsvector,
    project_id integer
);


ALTER TABLE dispatch_organization_default.incident_severity OWNER TO postgres;

--
-- Name: incident_severity_id_seq; Type: SEQUENCE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE SEQUENCE dispatch_organization_default.incident_severity_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE dispatch_organization_default.incident_severity_id_seq OWNER TO postgres;

--
-- Name: incident_severity_id_seq; Type: SEQUENCE OWNED BY; Schema: dispatch_organization_default; Owner: postgres
--

ALTER SEQUENCE dispatch_organization_default.incident_severity_id_seq OWNED BY dispatch_organization_default.incident_severity.id;


--
-- Name: incident_type; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.incident_type (
    id integer NOT NULL,
    name character varying,
    slug character varying,
    description character varying,
    exclude_from_metrics boolean,
    enabled boolean,
    "default" boolean,
    visibility character varying,
    plugin_metadata json,
    incident_template_document_id integer,
    executive_template_document_id integer,
    review_template_document_id integer,
    tracking_template_document_id integer,
    commander_service_id integer,
    liaison_service_id integer,
    search_vector tsvector,
    project_id integer
);


ALTER TABLE dispatch_organization_default.incident_type OWNER TO postgres;

--
-- Name: incident_type_id_seq; Type: SEQUENCE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE SEQUENCE dispatch_organization_default.incident_type_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE dispatch_organization_default.incident_type_id_seq OWNER TO postgres;

--
-- Name: incident_type_id_seq; Type: SEQUENCE OWNED BY; Schema: dispatch_organization_default; Owner: postgres
--

ALTER SEQUENCE dispatch_organization_default.incident_type_id_seq OWNED BY dispatch_organization_default.incident_type.id;


--
-- Name: individual_contact; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.individual_contact (
    is_active boolean,
    is_external boolean,
    contact_type character varying,
    email character varying,
    company character varying,
    notes character varying,
    owner character varying,
    id integer NOT NULL,
    name character varying,
    mobile_phone character varying,
    office_phone character varying,
    title character varying,
    weblink character varying,
    external_id character varying,
    team_contact_id integer,
    search_vector tsvector,
    project_id integer,
    created_at timestamp without time zone,
    updated_at timestamp without time zone
);


ALTER TABLE dispatch_organization_default.individual_contact OWNER TO postgres;

--
-- Name: individual_contact_id_seq; Type: SEQUENCE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE SEQUENCE dispatch_organization_default.individual_contact_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE dispatch_organization_default.individual_contact_id_seq OWNER TO postgres;

--
-- Name: individual_contact_id_seq; Type: SEQUENCE OWNED BY; Schema: dispatch_organization_default; Owner: postgres
--

ALTER SEQUENCE dispatch_organization_default.individual_contact_id_seq OWNED BY dispatch_organization_default.individual_contact.id;


--
-- Name: monitor; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.monitor (
    resource_type character varying,
    resource_id character varying,
    weblink character varying,
    id integer NOT NULL,
    plugin_instance_id integer,
    creator_id integer,
    incident_id integer,
    enabled boolean,
    status json,
    created_at timestamp without time zone,
    updated_at timestamp without time zone
);


ALTER TABLE dispatch_organization_default.monitor OWNER TO postgres;

--
-- Name: monitor_id_seq; Type: SEQUENCE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE SEQUENCE dispatch_organization_default.monitor_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE dispatch_organization_default.monitor_id_seq OWNER TO postgres;

--
-- Name: monitor_id_seq; Type: SEQUENCE OWNED BY; Schema: dispatch_organization_default; Owner: postgres
--

ALTER SEQUENCE dispatch_organization_default.monitor_id_seq OWNED BY dispatch_organization_default.monitor.id;


--
-- Name: notification; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.notification (
    id integer NOT NULL,
    name character varying,
    description character varying,
    type character varying,
    target character varying,
    enabled boolean,
    search_vector tsvector,
    project_id integer,
    updated_at timestamp without time zone,
    created_at timestamp without time zone,
    evergreen boolean,
    evergreen_owner character varying,
    evergreen_reminder_interval integer,
    evergreen_last_reminder_at timestamp without time zone
);


ALTER TABLE dispatch_organization_default.notification OWNER TO postgres;

--
-- Name: notification_id_seq; Type: SEQUENCE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE SEQUENCE dispatch_organization_default.notification_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE dispatch_organization_default.notification_id_seq OWNER TO postgres;

--
-- Name: notification_id_seq; Type: SEQUENCE OWNED BY; Schema: dispatch_organization_default; Owner: postgres
--

ALTER SEQUENCE dispatch_organization_default.notification_id_seq OWNED BY dispatch_organization_default.notification.id;


--
-- Name: participant; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.participant (
    id integer NOT NULL,
    team character varying,
    department character varying,
    location character varying,
    added_by_id integer,
    added_reason character varying,
    after_hours_notification boolean,
    service_id integer,
    incident_id integer,
    individual_contact_id integer,
    user_conversation_id character varying,
    case_id integer
);


ALTER TABLE dispatch_organization_default.participant OWNER TO postgres;

--
-- Name: participant_activity; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.participant_activity (
    id integer NOT NULL,
    plugin_event_id integer,
    started_at timestamp without time zone,
    ended_at timestamp without time zone,
    participant_id integer,
    incident_id integer
);


ALTER TABLE dispatch_organization_default.participant_activity OWNER TO postgres;

--
-- Name: participant_activity_id_seq; Type: SEQUENCE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE SEQUENCE dispatch_organization_default.participant_activity_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE dispatch_organization_default.participant_activity_id_seq OWNER TO postgres;

--
-- Name: participant_activity_id_seq; Type: SEQUENCE OWNED BY; Schema: dispatch_organization_default; Owner: postgres
--

ALTER SEQUENCE dispatch_organization_default.participant_activity_id_seq OWNED BY dispatch_organization_default.participant_activity.id;


--
-- Name: participant_id_seq; Type: SEQUENCE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE SEQUENCE dispatch_organization_default.participant_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE dispatch_organization_default.participant_id_seq OWNER TO postgres;

--
-- Name: participant_id_seq; Type: SEQUENCE OWNED BY; Schema: dispatch_organization_default; Owner: postgres
--

ALTER SEQUENCE dispatch_organization_default.participant_id_seq OWNED BY dispatch_organization_default.participant.id;


--
-- Name: participant_role; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.participant_role (
    id integer NOT NULL,
    assumed_at timestamp without time zone,
    renounced_at timestamp without time zone,
    role character varying,
    participant_id integer,
    activity integer
);


ALTER TABLE dispatch_organization_default.participant_role OWNER TO postgres;

--
-- Name: participant_role_id_seq; Type: SEQUENCE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE SEQUENCE dispatch_organization_default.participant_role_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE dispatch_organization_default.participant_role_id_seq OWNER TO postgres;

--
-- Name: participant_role_id_seq; Type: SEQUENCE OWNED BY; Schema: dispatch_organization_default; Owner: postgres
--

ALTER SEQUENCE dispatch_organization_default.participant_role_id_seq OWNED BY dispatch_organization_default.participant_role.id;


--
-- Name: plugin_instance; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.plugin_instance (
    id integer NOT NULL,
    enabled boolean,
    configuration json,
    plugin_id integer,
    project_id integer,
    _configuration character varying
);


ALTER TABLE dispatch_organization_default.plugin_instance OWNER TO postgres;

--
-- Name: plugin_instance_id_seq; Type: SEQUENCE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE SEQUENCE dispatch_organization_default.plugin_instance_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE dispatch_organization_default.plugin_instance_id_seq OWNER TO postgres;

--
-- Name: plugin_instance_id_seq; Type: SEQUENCE OWNED BY; Schema: dispatch_organization_default; Owner: postgres
--

ALTER SEQUENCE dispatch_organization_default.plugin_instance_id_seq OWNED BY dispatch_organization_default.plugin_instance.id;


--
-- Name: project; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.project (
    id integer NOT NULL,
    name character varying,
    description character varying,
    "default" boolean,
    color character varying,
    organization_id integer,
    search_vector tsvector,
    annual_employee_cost integer,
    business_year_hours integer,
    owner_email character varying,
    owner_conversation character varying,
    send_daily_reports boolean,
    stable_priority_id integer
);


ALTER TABLE dispatch_organization_default.project OWNER TO postgres;

--
-- Name: project_id_seq; Type: SEQUENCE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE SEQUENCE dispatch_organization_default.project_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE dispatch_organization_default.project_id_seq OWNER TO postgres;

--
-- Name: project_id_seq; Type: SEQUENCE OWNED BY; Schema: dispatch_organization_default; Owner: postgres
--

ALTER SEQUENCE dispatch_organization_default.project_id_seq OWNED BY dispatch_organization_default.project.id;


--
-- Name: query; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.query (
    id integer NOT NULL,
    name character varying,
    description character varying,
    text character varying,
    language character varying,
    source_id integer,
    search_vector tsvector,
    project_id integer,
    created_at timestamp without time zone,
    updated_at timestamp without time zone
);


ALTER TABLE dispatch_organization_default.query OWNER TO postgres;

--
-- Name: query_id_seq; Type: SEQUENCE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE SEQUENCE dispatch_organization_default.query_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE dispatch_organization_default.query_id_seq OWNER TO postgres;

--
-- Name: query_id_seq; Type: SEQUENCE OWNED BY; Schema: dispatch_organization_default; Owner: postgres
--

ALTER SEQUENCE dispatch_organization_default.query_id_seq OWNED BY dispatch_organization_default.query.id;


--
-- Name: recommendation; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.recommendation (
    id integer NOT NULL,
    incident_id integer,
    created_at timestamp without time zone
);


ALTER TABLE dispatch_organization_default.recommendation OWNER TO postgres;

--
-- Name: recommendation_id_seq; Type: SEQUENCE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE SEQUENCE dispatch_organization_default.recommendation_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE dispatch_organization_default.recommendation_id_seq OWNER TO postgres;

--
-- Name: recommendation_id_seq; Type: SEQUENCE OWNED BY; Schema: dispatch_organization_default; Owner: postgres
--

ALTER SEQUENCE dispatch_organization_default.recommendation_id_seq OWNED BY dispatch_organization_default.recommendation.id;


--
-- Name: recommendation_match; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.recommendation_match (
    id integer NOT NULL,
    recommendation_id integer,
    correct boolean,
    resource_type character varying,
    resource_state json
);


ALTER TABLE dispatch_organization_default.recommendation_match OWNER TO postgres;

--
-- Name: recommendation_match_id_seq; Type: SEQUENCE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE SEQUENCE dispatch_organization_default.recommendation_match_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE dispatch_organization_default.recommendation_match_id_seq OWNER TO postgres;

--
-- Name: recommendation_match_id_seq; Type: SEQUENCE OWNED BY; Schema: dispatch_organization_default; Owner: postgres
--

ALTER SEQUENCE dispatch_organization_default.recommendation_match_id_seq OWNED BY dispatch_organization_default.recommendation_match.id;


--
-- Name: report; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.report (
    id integer NOT NULL,
    created_at timestamp without time zone,
    details json,
    details_raw character varying,
    type character varying DEFAULT 'Tactical Report'::character varying NOT NULL,
    incident_id integer,
    participant_id integer,
    search_vector tsvector
);


ALTER TABLE dispatch_organization_default.report OWNER TO postgres;

--
-- Name: report_id_seq; Type: SEQUENCE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE SEQUENCE dispatch_organization_default.report_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE dispatch_organization_default.report_id_seq OWNER TO postgres;

--
-- Name: report_id_seq; Type: SEQUENCE OWNED BY; Schema: dispatch_organization_default; Owner: postgres
--

ALTER SEQUENCE dispatch_organization_default.report_id_seq OWNED BY dispatch_organization_default.report.id;


--
-- Name: search_filter; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.search_filter (
    id integer NOT NULL,
    name character varying,
    description character varying,
    expression json NOT NULL,
    creator_id integer,
    search_vector tsvector,
    project_id integer,
    subject character varying,
    enabled boolean,
    updated_at timestamp without time zone,
    created_at timestamp without time zone
);


ALTER TABLE dispatch_organization_default.search_filter OWNER TO postgres;

--
-- Name: search_filter_id_seq; Type: SEQUENCE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE SEQUENCE dispatch_organization_default.search_filter_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE dispatch_organization_default.search_filter_id_seq OWNER TO postgres;

--
-- Name: search_filter_id_seq; Type: SEQUENCE OWNED BY; Schema: dispatch_organization_default; Owner: postgres
--

ALTER SEQUENCE dispatch_organization_default.search_filter_id_seq OWNED BY dispatch_organization_default.search_filter.id;


--
-- Name: service; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.service (
    id integer NOT NULL,
    is_active boolean,
    name character varying,
    type character varying,
    description character varying,
    external_id character varying,
    search_vector tsvector,
    project_id integer,
    updated_at timestamp without time zone,
    created_at timestamp without time zone,
    evergreen boolean,
    evergreen_owner character varying,
    evergreen_reminder_interval integer,
    evergreen_last_reminder_at timestamp without time zone,
    health_metrics boolean
);


ALTER TABLE dispatch_organization_default.service OWNER TO postgres;

--
-- Name: service_feedback; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.service_feedback (
    rating character varying,
    feedback character varying,
    id integer NOT NULL,
    hours numeric,
    shift_start_at timestamp without time zone,
    shift_end_at timestamp without time zone,
    schedule character varying,
    individual_contact_id integer,
    search_vector tsvector,
    updated_at timestamp without time zone,
    created_at timestamp without time zone,
    project_id integer
);


ALTER TABLE dispatch_organization_default.service_feedback OWNER TO postgres;

--
-- Name: service_feedback_id_seq; Type: SEQUENCE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE SEQUENCE dispatch_organization_default.service_feedback_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE dispatch_organization_default.service_feedback_id_seq OWNER TO postgres;

--
-- Name: service_feedback_id_seq; Type: SEQUENCE OWNED BY; Schema: dispatch_organization_default; Owner: postgres
--

ALTER SEQUENCE dispatch_organization_default.service_feedback_id_seq OWNED BY dispatch_organization_default.service_feedback.id;


--
-- Name: service_feedback_reminder; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.service_feedback_reminder (
    id integer NOT NULL,
    reminder_at timestamp without time zone,
    schedule_id character varying,
    schedule_name character varying,
    shift_end_at timestamp without time zone,
    individual_contact_id integer,
    project_id integer,
    created_at timestamp without time zone,
    updated_at timestamp without time zone
);


ALTER TABLE dispatch_organization_default.service_feedback_reminder OWNER TO postgres;

--
-- Name: service_feedback_reminder_id_seq; Type: SEQUENCE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE SEQUENCE dispatch_organization_default.service_feedback_reminder_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE dispatch_organization_default.service_feedback_reminder_id_seq OWNER TO postgres;

--
-- Name: service_feedback_reminder_id_seq; Type: SEQUENCE OWNED BY; Schema: dispatch_organization_default; Owner: postgres
--

ALTER SEQUENCE dispatch_organization_default.service_feedback_reminder_id_seq OWNED BY dispatch_organization_default.service_feedback_reminder.id;


--
-- Name: service_id_seq; Type: SEQUENCE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE SEQUENCE dispatch_organization_default.service_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE dispatch_organization_default.service_id_seq OWNER TO postgres;

--
-- Name: service_id_seq; Type: SEQUENCE OWNED BY; Schema: dispatch_organization_default; Owner: postgres
--

ALTER SEQUENCE dispatch_organization_default.service_id_seq OWNED BY dispatch_organization_default.service.id;


--
-- Name: signal; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.signal (
    id integer NOT NULL,
    name character varying,
    owner character varying,
    description character varying,
    external_url character varying,
    external_id character varying,
    source_id integer,
    variant character varying,
    case_type_id integer,
    case_priority_id integer,
    search_vector tsvector,
    project_id integer,
    created_at timestamp without time zone,
    updated_at timestamp without time zone,
    loopin_signal_identity boolean,
    enabled boolean,
    create_case boolean,
    conversation_target character varying,
    oncall_service_id integer
);


ALTER TABLE dispatch_organization_default.signal OWNER TO postgres;

--
-- Name: signal_engagement; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.signal_engagement (
    id integer NOT NULL,
    name character varying,
    description character varying,
    message character varying,
    require_mfa boolean,
    entity_type_id integer,
    creator_id integer,
    search_vector tsvector,
    project_id integer,
    created_at timestamp without time zone,
    updated_at timestamp without time zone
);


ALTER TABLE dispatch_organization_default.signal_engagement OWNER TO postgres;

--
-- Name: signal_engagement_id_seq; Type: SEQUENCE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE SEQUENCE dispatch_organization_default.signal_engagement_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE dispatch_organization_default.signal_engagement_id_seq OWNER TO postgres;

--
-- Name: signal_engagement_id_seq; Type: SEQUENCE OWNED BY; Schema: dispatch_organization_default; Owner: postgres
--

ALTER SEQUENCE dispatch_organization_default.signal_engagement_id_seq OWNED BY dispatch_organization_default.signal_engagement.id;


--
-- Name: signal_filter; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.signal_filter (
    evergreen boolean,
    evergreen_owner character varying,
    evergreen_reminder_interval integer,
    evergreen_last_reminder_at timestamp without time zone,
    id integer NOT NULL,
    name character varying,
    description character varying,
    expression json NOT NULL,
    mode character varying NOT NULL,
    action character varying NOT NULL,
    expiration timestamp without time zone,
    "window" integer,
    creator_id integer,
    search_vector tsvector,
    project_id integer,
    created_at timestamp without time zone,
    updated_at timestamp without time zone
);


ALTER TABLE dispatch_organization_default.signal_filter OWNER TO postgres;

--
-- Name: signal_filter_id_seq; Type: SEQUENCE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE SEQUENCE dispatch_organization_default.signal_filter_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE dispatch_organization_default.signal_filter_id_seq OWNER TO postgres;

--
-- Name: signal_filter_id_seq; Type: SEQUENCE OWNED BY; Schema: dispatch_organization_default; Owner: postgres
--

ALTER SEQUENCE dispatch_organization_default.signal_filter_id_seq OWNED BY dispatch_organization_default.signal_filter.id;


--
-- Name: signal_id_seq; Type: SEQUENCE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE SEQUENCE dispatch_organization_default.signal_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE dispatch_organization_default.signal_id_seq OWNER TO postgres;

--
-- Name: signal_id_seq; Type: SEQUENCE OWNED BY; Schema: dispatch_organization_default; Owner: postgres
--

ALTER SEQUENCE dispatch_organization_default.signal_id_seq OWNED BY dispatch_organization_default.signal.id;


--
-- Name: signal_instance; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.signal_instance (
    id uuid NOT NULL,
    case_id integer,
    signal_id integer,
    raw jsonb,
    project_id integer,
    updated_at timestamp without time zone,
    created_at timestamp without time zone,
    filter_action character varying,
    engagement_thread_ts character varying,
    case_type_id integer,
    case_priority_id integer,
    canary boolean
);


ALTER TABLE dispatch_organization_default.signal_instance OWNER TO postgres;

--
-- Name: source; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.source (
    id integer NOT NULL,
    name character varying,
    description character varying,
    cost integer,
    data_last_loaded_at timestamp without time zone,
    daily_volume integer,
    aggregated boolean,
    retention integer,
    size bigint,
    delay integer,
    environment character varying,
    external_id character varying,
    documentation text,
    sampling_rate integer,
    source_schema text,
    links json,
    source_type_id integer,
    source_status_id integer,
    source_environment_id integer,
    source_data_format_id integer,
    source_transport_id integer,
    owner_id integer,
    search_vector tsvector,
    project_id integer,
    created_at timestamp without time zone,
    updated_at timestamp without time zone
);


ALTER TABLE dispatch_organization_default.source OWNER TO postgres;

--
-- Name: source_data_format; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.source_data_format (
    id integer NOT NULL,
    name character varying,
    description character varying,
    search_vector tsvector,
    project_id integer
);


ALTER TABLE dispatch_organization_default.source_data_format OWNER TO postgres;

--
-- Name: source_data_format_id_seq; Type: SEQUENCE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE SEQUENCE dispatch_organization_default.source_data_format_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE dispatch_organization_default.source_data_format_id_seq OWNER TO postgres;

--
-- Name: source_data_format_id_seq; Type: SEQUENCE OWNED BY; Schema: dispatch_organization_default; Owner: postgres
--

ALTER SEQUENCE dispatch_organization_default.source_data_format_id_seq OWNED BY dispatch_organization_default.source_data_format.id;


--
-- Name: source_environment; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.source_environment (
    id integer NOT NULL,
    name character varying,
    description character varying,
    search_vector tsvector,
    project_id integer
);


ALTER TABLE dispatch_organization_default.source_environment OWNER TO postgres;

--
-- Name: source_environment_id_seq; Type: SEQUENCE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE SEQUENCE dispatch_organization_default.source_environment_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE dispatch_organization_default.source_environment_id_seq OWNER TO postgres;

--
-- Name: source_environment_id_seq; Type: SEQUENCE OWNED BY; Schema: dispatch_organization_default; Owner: postgres
--

ALTER SEQUENCE dispatch_organization_default.source_environment_id_seq OWNED BY dispatch_organization_default.source_environment.id;


--
-- Name: source_id_seq; Type: SEQUENCE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE SEQUENCE dispatch_organization_default.source_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE dispatch_organization_default.source_id_seq OWNER TO postgres;

--
-- Name: source_id_seq; Type: SEQUENCE OWNED BY; Schema: dispatch_organization_default; Owner: postgres
--

ALTER SEQUENCE dispatch_organization_default.source_id_seq OWNED BY dispatch_organization_default.source.id;


--
-- Name: source_status; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.source_status (
    id integer NOT NULL,
    name character varying,
    description character varying,
    search_vector tsvector,
    project_id integer
);


ALTER TABLE dispatch_organization_default.source_status OWNER TO postgres;

--
-- Name: source_status_id_seq; Type: SEQUENCE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE SEQUENCE dispatch_organization_default.source_status_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE dispatch_organization_default.source_status_id_seq OWNER TO postgres;

--
-- Name: source_status_id_seq; Type: SEQUENCE OWNED BY; Schema: dispatch_organization_default; Owner: postgres
--

ALTER SEQUENCE dispatch_organization_default.source_status_id_seq OWNED BY dispatch_organization_default.source_status.id;


--
-- Name: source_transport; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.source_transport (
    id integer NOT NULL,
    name character varying,
    description character varying,
    search_vector tsvector,
    project_id integer
);


ALTER TABLE dispatch_organization_default.source_transport OWNER TO postgres;

--
-- Name: source_transport_id_seq; Type: SEQUENCE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE SEQUENCE dispatch_organization_default.source_transport_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE dispatch_organization_default.source_transport_id_seq OWNER TO postgres;

--
-- Name: source_transport_id_seq; Type: SEQUENCE OWNED BY; Schema: dispatch_organization_default; Owner: postgres
--

ALTER SEQUENCE dispatch_organization_default.source_transport_id_seq OWNED BY dispatch_organization_default.source_transport.id;


--
-- Name: source_type; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.source_type (
    id integer NOT NULL,
    name character varying,
    description character varying,
    search_vector tsvector,
    project_id integer
);


ALTER TABLE dispatch_organization_default.source_type OWNER TO postgres;

--
-- Name: source_type_id_seq; Type: SEQUENCE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE SEQUENCE dispatch_organization_default.source_type_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE dispatch_organization_default.source_type_id_seq OWNER TO postgres;

--
-- Name: source_type_id_seq; Type: SEQUENCE OWNED BY; Schema: dispatch_organization_default; Owner: postgres
--

ALTER SEQUENCE dispatch_organization_default.source_type_id_seq OWNED BY dispatch_organization_default.source_type.id;


--
-- Name: storage; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.storage (
    resource_type character varying,
    resource_id character varying,
    weblink character varying,
    id integer NOT NULL,
    incident_id integer,
    created_at timestamp without time zone,
    updated_at timestamp without time zone,
    case_id integer
);


ALTER TABLE dispatch_organization_default.storage OWNER TO postgres;

--
-- Name: storage_id_seq; Type: SEQUENCE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE SEQUENCE dispatch_organization_default.storage_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE dispatch_organization_default.storage_id_seq OWNER TO postgres;

--
-- Name: storage_id_seq; Type: SEQUENCE OWNED BY; Schema: dispatch_organization_default; Owner: postgres
--

ALTER SEQUENCE dispatch_organization_default.storage_id_seq OWNED BY dispatch_organization_default.storage.id;


--
-- Name: tag; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.tag (
    id integer NOT NULL,
    name character varying,
    description character varying,
    uri character varying,
    source character varying,
    discoverable boolean,
    tag_type_id integer NOT NULL,
    search_vector tsvector,
    project_id integer,
    created_at timestamp without time zone,
    updated_at timestamp without time zone,
    external_id character varying
);


ALTER TABLE dispatch_organization_default.tag OWNER TO postgres;

--
-- Name: tag_id_seq; Type: SEQUENCE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE SEQUENCE dispatch_organization_default.tag_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE dispatch_organization_default.tag_id_seq OWNER TO postgres;

--
-- Name: tag_id_seq; Type: SEQUENCE OWNED BY; Schema: dispatch_organization_default; Owner: postgres
--

ALTER SEQUENCE dispatch_organization_default.tag_id_seq OWNED BY dispatch_organization_default.tag.id;


--
-- Name: tag_type; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.tag_type (
    id integer NOT NULL,
    name character varying,
    description character varying,
    search_vector tsvector,
    project_id integer,
    created_at timestamp without time zone,
    updated_at timestamp without time zone,
    exclusive boolean,
    discoverable_case boolean DEFAULT true,
    discoverable_incident boolean DEFAULT true,
    discoverable_query boolean DEFAULT true,
    discoverable_signal boolean DEFAULT true,
    discoverable_source boolean DEFAULT true,
    color character varying,
    icon character varying
);


ALTER TABLE dispatch_organization_default.tag_type OWNER TO postgres;

--
-- Name: tag_type_id_seq; Type: SEQUENCE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE SEQUENCE dispatch_organization_default.tag_type_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE dispatch_organization_default.tag_type_id_seq OWNER TO postgres;

--
-- Name: tag_type_id_seq; Type: SEQUENCE OWNED BY; Schema: dispatch_organization_default; Owner: postgres
--

ALTER SEQUENCE dispatch_organization_default.tag_type_id_seq OWNED BY dispatch_organization_default.tag_type.id;


--
-- Name: task; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.task (
    resource_type character varying,
    resource_id character varying,
    weblink character varying,
    id integer NOT NULL,
    resolved_at timestamp without time zone,
    resolve_by timestamp without time zone,
    last_reminder_at timestamp without time zone,
    creator_id integer,
    owner_id integer,
    incident_id integer,
    description character varying,
    source character varying,
    priority character varying,
    status character varying,
    reminders boolean,
    search_vector tsvector,
    created_at timestamp without time zone,
    updated_at timestamp without time zone
);


ALTER TABLE dispatch_organization_default.task OWNER TO postgres;

--
-- Name: task_assignees; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.task_assignees (
    participant_id integer NOT NULL,
    task_id integer NOT NULL
);


ALTER TABLE dispatch_organization_default.task_assignees OWNER TO postgres;

--
-- Name: task_id_seq; Type: SEQUENCE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE SEQUENCE dispatch_organization_default.task_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE dispatch_organization_default.task_id_seq OWNER TO postgres;

--
-- Name: task_id_seq; Type: SEQUENCE OWNED BY; Schema: dispatch_organization_default; Owner: postgres
--

ALTER SEQUENCE dispatch_organization_default.task_id_seq OWNED BY dispatch_organization_default.task.id;


--
-- Name: team_contact; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.team_contact (
    is_active boolean,
    is_external boolean,
    contact_type character varying,
    email character varying,
    company character varying,
    owner character varying,
    id integer NOT NULL,
    name character varying,
    notes character varying,
    search_vector tsvector,
    project_id integer,
    created_at timestamp without time zone,
    updated_at timestamp without time zone,
    evergreen boolean,
    evergreen_owner character varying,
    evergreen_reminder_interval integer,
    evergreen_last_reminder_at timestamp without time zone
);


ALTER TABLE dispatch_organization_default.team_contact OWNER TO postgres;

--
-- Name: team_contact_id_seq; Type: SEQUENCE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE SEQUENCE dispatch_organization_default.team_contact_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE dispatch_organization_default.team_contact_id_seq OWNER TO postgres;

--
-- Name: team_contact_id_seq; Type: SEQUENCE OWNED BY; Schema: dispatch_organization_default; Owner: postgres
--

ALTER SEQUENCE dispatch_organization_default.team_contact_id_seq OWNED BY dispatch_organization_default.team_contact.id;


--
-- Name: team_contact_incident; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.team_contact_incident (
    incident_id integer NOT NULL,
    team_contact_id integer NOT NULL
);


ALTER TABLE dispatch_organization_default.team_contact_incident OWNER TO postgres;

--
-- Name: term; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.term (
    id integer NOT NULL,
    text character varying,
    discoverable boolean,
    search_vector tsvector,
    project_id integer
);


ALTER TABLE dispatch_organization_default.term OWNER TO postgres;

--
-- Name: term_id_seq; Type: SEQUENCE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE SEQUENCE dispatch_organization_default.term_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE dispatch_organization_default.term_id_seq OWNER TO postgres;

--
-- Name: term_id_seq; Type: SEQUENCE OWNED BY; Schema: dispatch_organization_default; Owner: postgres
--

ALTER SEQUENCE dispatch_organization_default.term_id_seq OWNED BY dispatch_organization_default.term.id;


--
-- Name: ticket; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.ticket (
    resource_type character varying,
    resource_id character varying,
    weblink character varying,
    id integer NOT NULL,
    incident_id integer,
    created_at timestamp without time zone,
    updated_at timestamp without time zone,
    case_id integer
);


ALTER TABLE dispatch_organization_default.ticket OWNER TO postgres;

--
-- Name: ticket_id_seq; Type: SEQUENCE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE SEQUENCE dispatch_organization_default.ticket_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE dispatch_organization_default.ticket_id_seq OWNER TO postgres;

--
-- Name: ticket_id_seq; Type: SEQUENCE OWNED BY; Schema: dispatch_organization_default; Owner: postgres
--

ALTER SEQUENCE dispatch_organization_default.ticket_id_seq OWNED BY dispatch_organization_default.ticket.id;


--
-- Name: workflow; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.workflow (
    id integer NOT NULL,
    name character varying,
    description character varying,
    enabled boolean,
    parameters json,
    resource_id character varying,
    plugin_instance_id integer,
    search_vector tsvector,
    project_id integer,
    updated_at timestamp without time zone,
    created_at timestamp without time zone
);


ALTER TABLE dispatch_organization_default.workflow OWNER TO postgres;

--
-- Name: workflow_id_seq; Type: SEQUENCE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE SEQUENCE dispatch_organization_default.workflow_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE dispatch_organization_default.workflow_id_seq OWNER TO postgres;

--
-- Name: workflow_id_seq; Type: SEQUENCE OWNED BY; Schema: dispatch_organization_default; Owner: postgres
--

ALTER SEQUENCE dispatch_organization_default.workflow_id_seq OWNED BY dispatch_organization_default.workflow.id;


--
-- Name: workflow_incident_priority; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.workflow_incident_priority (
    incident_priority_id integer NOT NULL,
    workflow_id integer NOT NULL
);


ALTER TABLE dispatch_organization_default.workflow_incident_priority OWNER TO postgres;

--
-- Name: workflow_incident_type; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.workflow_incident_type (
    incident_type_id integer NOT NULL,
    workflow_id integer NOT NULL
);


ALTER TABLE dispatch_organization_default.workflow_incident_type OWNER TO postgres;

--
-- Name: workflow_instance; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.workflow_instance (
    resource_type character varying,
    resource_id character varying,
    weblink character varying,
    id integer NOT NULL,
    workflow_id integer,
    parameters json,
    run_reason character varying,
    creator_id integer,
    incident_id integer,
    status character varying,
    created_at timestamp without time zone,
    updated_at timestamp without time zone,
    case_id integer,
    signal_id integer
);


ALTER TABLE dispatch_organization_default.workflow_instance OWNER TO postgres;

--
-- Name: workflow_instance_artifact; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.workflow_instance_artifact (
    document_id integer NOT NULL,
    workflow_instance_id integer NOT NULL
);


ALTER TABLE dispatch_organization_default.workflow_instance_artifact OWNER TO postgres;

--
-- Name: workflow_instance_id_seq; Type: SEQUENCE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE SEQUENCE dispatch_organization_default.workflow_instance_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE dispatch_organization_default.workflow_instance_id_seq OWNER TO postgres;

--
-- Name: workflow_instance_id_seq; Type: SEQUENCE OWNED BY; Schema: dispatch_organization_default; Owner: postgres
--

ALTER SEQUENCE dispatch_organization_default.workflow_instance_id_seq OWNED BY dispatch_organization_default.workflow_instance.id;


--
-- Name: workflow_term; Type: TABLE; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TABLE dispatch_organization_default.workflow_term (
    term_id integer NOT NULL,
    workflow_id integer NOT NULL
);


ALTER TABLE dispatch_organization_default.workflow_term OWNER TO postgres;

--
-- Name: alembic_version; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.alembic_version (
    version_num character varying(32) NOT NULL
);


ALTER TABLE public.alembic_version OWNER TO postgres;

--
-- Name: assoc_incident_tags; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.assoc_incident_tags (
    incident_id integer NOT NULL,
    tag_id integer NOT NULL
);


ALTER TABLE public.assoc_incident_tags OWNER TO postgres;

--
-- Name: assoc_incident_terms; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.assoc_incident_terms (
    incident_id integer NOT NULL,
    term_id integer NOT NULL
);


ALTER TABLE public.assoc_incident_terms OWNER TO postgres;

--
-- Name: assoc_individual_contact_incident_priority; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.assoc_individual_contact_incident_priority (
    incident_priority_id integer NOT NULL,
    individual_contact_id integer NOT NULL
);


ALTER TABLE public.assoc_individual_contact_incident_priority OWNER TO postgres;

--
-- Name: assoc_individual_contact_incident_type; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.assoc_individual_contact_incident_type (
    incident_type_id integer NOT NULL,
    individual_contact_id integer NOT NULL
);


ALTER TABLE public.assoc_individual_contact_incident_type OWNER TO postgres;

--
-- Name: assoc_individual_contact_terms; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.assoc_individual_contact_terms (
    term_id integer NOT NULL,
    individual_contact_id integer NOT NULL
);


ALTER TABLE public.assoc_individual_contact_terms OWNER TO postgres;

--
-- Name: assoc_notification_filters; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.assoc_notification_filters (
    notification_id integer NOT NULL,
    search_filter_id integer NOT NULL
);


ALTER TABLE public.assoc_notification_filters OWNER TO postgres;

--
-- Name: conference; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.conference (
    resource_type character varying,
    resource_id character varying,
    weblink character varying,
    id integer NOT NULL,
    conference_id character varying,
    conference_challenge character varying DEFAULT 'N/A'::character varying NOT NULL,
    incident_id integer,
    updated_at timestamp without time zone,
    created_at timestamp without time zone
);


ALTER TABLE public.conference OWNER TO postgres;

--
-- Name: conference_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.conference_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.conference_id_seq OWNER TO postgres;

--
-- Name: conference_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.conference_id_seq OWNED BY public.conference.id;


--
-- Name: conversation; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.conversation (
    resource_type character varying,
    resource_id character varying,
    weblink character varying,
    id integer NOT NULL,
    channel_id character varying,
    incident_id integer,
    created_at timestamp without time zone,
    updated_at timestamp without time zone
);


ALTER TABLE public.conversation OWNER TO postgres;

--
-- Name: conversation_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.conversation_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.conversation_id_seq OWNER TO postgres;

--
-- Name: conversation_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.conversation_id_seq OWNED BY public.conversation.id;


--
-- Name: definition; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.definition (
    id integer NOT NULL,
    text character varying,
    source character varying,
    search_vector tsvector
);


ALTER TABLE public.definition OWNER TO postgres;

--
-- Name: definition_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.definition_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.definition_id_seq OWNER TO postgres;

--
-- Name: definition_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.definition_id_seq OWNED BY public.definition.id;


--
-- Name: definition_teams; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.definition_teams (
    definition_id integer NOT NULL,
    team_contact_id integer NOT NULL
);


ALTER TABLE public.definition_teams OWNER TO postgres;

--
-- Name: definition_terms; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.definition_terms (
    definition_id integer NOT NULL,
    term_id integer NOT NULL
);


ALTER TABLE public.definition_terms OWNER TO postgres;

--
-- Name: dispatch_user; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.dispatch_user (
    id integer NOT NULL,
    email character varying,
    password bytea NOT NULL,
    role character varying NOT NULL,
    search_vector tsvector,
    updated_at timestamp without time zone,
    created_at timestamp without time zone
);


ALTER TABLE public.dispatch_user OWNER TO postgres;

--
-- Name: dispatch_user_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.dispatch_user_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.dispatch_user_id_seq OWNER TO postgres;

--
-- Name: dispatch_user_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.dispatch_user_id_seq OWNED BY public.dispatch_user.id;


--
-- Name: document; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.document (
    resource_type character varying,
    resource_id character varying,
    weblink character varying,
    id integer NOT NULL,
    name character varying,
    description character varying,
    report_id integer,
    search_vector tsvector,
    incident_id integer,
    created_at timestamp without time zone,
    updated_at timestamp without time zone,
    evergreen boolean,
    evergreen_last_reminder_at timestamp without time zone,
    evergreen_owner character varying,
    evergreen_reminder_interval integer
);


ALTER TABLE public.document OWNER TO postgres;

--
-- Name: document_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.document_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.document_id_seq OWNER TO postgres;

--
-- Name: document_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.document_id_seq OWNED BY public.document.id;


--
-- Name: document_incident_priority; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.document_incident_priority (
    incident_priority_id integer NOT NULL,
    document_id integer NOT NULL
);


ALTER TABLE public.document_incident_priority OWNER TO postgres;

--
-- Name: document_incident_type; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.document_incident_type (
    incident_type_id integer NOT NULL,
    document_id integer NOT NULL
);


ALTER TABLE public.document_incident_type OWNER TO postgres;

--
-- Name: document_terms; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.document_terms (
    term_id integer NOT NULL,
    document_id integer NOT NULL
);


ALTER TABLE public.document_terms OWNER TO postgres;

--
-- Name: event; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.event (
    id integer NOT NULL,
    uuid uuid NOT NULL,
    started_at timestamp without time zone NOT NULL,
    ended_at timestamp without time zone NOT NULL,
    source character varying NOT NULL,
    description character varying NOT NULL,
    details json,
    individual_id integer,
    incident_id integer,
    search_vector tsvector,
    created_at timestamp without time zone,
    updated_at timestamp without time zone
);


ALTER TABLE public.event OWNER TO postgres;

--
-- Name: event_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.event_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.event_id_seq OWNER TO postgres;

--
-- Name: event_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.event_id_seq OWNED BY public.event.id;


--
-- Name: feedback; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.feedback (
    id integer NOT NULL,
    rating character varying,
    feedback character varying,
    incident_id integer,
    participant_id integer,
    updated_at timestamp without time zone,
    created_at timestamp without time zone
);


ALTER TABLE public.feedback OWNER TO postgres;

--
-- Name: feedback_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.feedback_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.feedback_id_seq OWNER TO postgres;

--
-- Name: feedback_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.feedback_id_seq OWNED BY public.feedback.id;


--
-- Name: group; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."group" (
    resource_type character varying,
    resource_id character varying,
    weblink character varying,
    id integer NOT NULL,
    name character varying,
    email character varying,
    incident_id integer,
    updated_at timestamp without time zone,
    created_at timestamp without time zone
);


ALTER TABLE public."group" OWNER TO postgres;

--
-- Name: group_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.group_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.group_id_seq OWNER TO postgres;

--
-- Name: group_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.group_id_seq OWNED BY public."group".id;


--
-- Name: incident; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.incident (
    id integer NOT NULL,
    name character varying,
    title character varying NOT NULL,
    description character varying NOT NULL,
    status character varying,
    cost double precision,
    visibility character varying,
    reported_at timestamp without time zone,
    stable_at timestamp without time zone,
    closed_at timestamp without time zone,
    search_vector tsvector,
    incident_priority_id integer,
    incident_type_id integer,
    duplicate_id integer,
    updated_at timestamp without time zone,
    created_at timestamp without time zone
);


ALTER TABLE public.incident OWNER TO postgres;

--
-- Name: incident_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.incident_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.incident_id_seq OWNER TO postgres;

--
-- Name: incident_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.incident_id_seq OWNED BY public.incident.id;


--
-- Name: incident_priority; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.incident_priority (
    id integer NOT NULL,
    name character varying,
    description character varying,
    page_commander boolean,
    tactical_report_reminder integer DEFAULT 24,
    executive_report_reminder integer DEFAULT 24,
    "default" boolean,
    view_order integer,
    search_vector tsvector
);


ALTER TABLE public.incident_priority OWNER TO postgres;

--
-- Name: incident_priority_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.incident_priority_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.incident_priority_id_seq OWNER TO postgres;

--
-- Name: incident_priority_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.incident_priority_id_seq OWNED BY public.incident_priority.id;


--
-- Name: incident_type; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.incident_type (
    id integer NOT NULL,
    name character varying,
    slug character varying,
    description character varying,
    exclude_from_metrics boolean,
    "default" boolean,
    visibility character varying,
    plugin_metadata json,
    template_document_id integer,
    commander_service_id integer,
    search_vector tsvector,
    liaison_service_id integer
);


ALTER TABLE public.incident_type OWNER TO postgres;

--
-- Name: incident_type_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.incident_type_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.incident_type_id_seq OWNER TO postgres;

--
-- Name: incident_type_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.incident_type_id_seq OWNED BY public.incident_type.id;


--
-- Name: individual_contact; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.individual_contact (
    is_active boolean,
    is_external boolean,
    contact_type character varying,
    email character varying,
    company character varying,
    notes character varying,
    owner character varying,
    id integer NOT NULL,
    name character varying,
    mobile_phone character varying,
    office_phone character varying,
    title character varying,
    weblink character varying,
    team_contact_id integer,
    search_vector tsvector,
    created_at timestamp without time zone,
    updated_at timestamp without time zone
);


ALTER TABLE public.individual_contact OWNER TO postgres;

--
-- Name: individual_contact_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.individual_contact_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.individual_contact_id_seq OWNER TO postgres;

--
-- Name: individual_contact_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.individual_contact_id_seq OWNED BY public.individual_contact.id;


--
-- Name: notification; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.notification (
    id integer NOT NULL,
    name character varying,
    description character varying,
    type character varying,
    target character varying,
    enabled boolean,
    search_vector tsvector,
    updated_at timestamp without time zone,
    created_at timestamp without time zone
);


ALTER TABLE public.notification OWNER TO postgres;

--
-- Name: notification_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.notification_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.notification_id_seq OWNER TO postgres;

--
-- Name: notification_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.notification_id_seq OWNED BY public.notification.id;


--
-- Name: participant; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.participant (
    id integer NOT NULL,
    is_active boolean,
    active_at timestamp without time zone,
    inactive_at timestamp without time zone,
    team character varying,
    department character varying,
    added_by_id integer,
    added_reason character varying,
    location character varying,
    after_hours_notification boolean,
    incident_id integer,
    individual_contact_id integer
);


ALTER TABLE public.participant OWNER TO postgres;

--
-- Name: participant_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.participant_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.participant_id_seq OWNER TO postgres;

--
-- Name: participant_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.participant_id_seq OWNED BY public.participant.id;


--
-- Name: participant_role; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.participant_role (
    id integer NOT NULL,
    assumed_at timestamp without time zone,
    renounced_at timestamp without time zone,
    role character varying,
    participant_id integer
);


ALTER TABLE public.participant_role OWNER TO postgres;

--
-- Name: participant_role_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.participant_role_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.participant_role_id_seq OWNER TO postgres;

--
-- Name: participant_role_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.participant_role_id_seq OWNED BY public.participant_role.id;


--
-- Name: plugin; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.plugin (
    id integer NOT NULL,
    title character varying,
    slug character varying,
    description character varying,
    version character varying,
    author character varying,
    author_url character varying,
    type character varying,
    enabled boolean,
    required boolean,
    multiple boolean,
    configuration json,
    search_vector tsvector
);


ALTER TABLE public.plugin OWNER TO postgres;

--
-- Name: plugin_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.plugin_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.plugin_id_seq OWNER TO postgres;

--
-- Name: plugin_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.plugin_id_seq OWNED BY public.plugin.id;


--
-- Name: recommendation; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.recommendation (
    id integer NOT NULL,
    text character varying
);


ALTER TABLE public.recommendation OWNER TO postgres;

--
-- Name: recommendation_accuracy; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.recommendation_accuracy (
    id integer NOT NULL,
    recommendation_id integer,
    correct boolean,
    resource_id integer,
    resource_type character varying
);


ALTER TABLE public.recommendation_accuracy OWNER TO postgres;

--
-- Name: recommendation_accuracy_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.recommendation_accuracy_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.recommendation_accuracy_id_seq OWNER TO postgres;

--
-- Name: recommendation_accuracy_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.recommendation_accuracy_id_seq OWNED BY public.recommendation_accuracy.id;


--
-- Name: recommendation_documents; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.recommendation_documents (
    document_id integer NOT NULL,
    recommendation_id integer NOT NULL
);


ALTER TABLE public.recommendation_documents OWNER TO postgres;

--
-- Name: recommendation_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.recommendation_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.recommendation_id_seq OWNER TO postgres;

--
-- Name: recommendation_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.recommendation_id_seq OWNED BY public.recommendation.id;


--
-- Name: recommendation_incident_priorities; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.recommendation_incident_priorities (
    incident_priority_id integer NOT NULL,
    recommendation_id integer NOT NULL
);


ALTER TABLE public.recommendation_incident_priorities OWNER TO postgres;

--
-- Name: recommendation_incident_types; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.recommendation_incident_types (
    incident_type_id integer NOT NULL,
    recommendation_id integer NOT NULL
);


ALTER TABLE public.recommendation_incident_types OWNER TO postgres;

--
-- Name: recommendation_individual_contacts; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.recommendation_individual_contacts (
    individual_contact_id integer NOT NULL,
    recommendation_id integer NOT NULL
);


ALTER TABLE public.recommendation_individual_contacts OWNER TO postgres;

--
-- Name: recommendation_services; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.recommendation_services (
    service_id integer NOT NULL,
    recommendation_id integer NOT NULL
);


ALTER TABLE public.recommendation_services OWNER TO postgres;

--
-- Name: recommendation_team_contacts; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.recommendation_team_contacts (
    team_contact_id integer NOT NULL,
    recommendation_id integer NOT NULL
);


ALTER TABLE public.recommendation_team_contacts OWNER TO postgres;

--
-- Name: recommendation_terms; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.recommendation_terms (
    term_id integer NOT NULL,
    recommendation_id integer NOT NULL
);


ALTER TABLE public.recommendation_terms OWNER TO postgres;

--
-- Name: report; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.report (
    id integer NOT NULL,
    created_at timestamp without time zone,
    details json,
    details_raw character varying,
    type character varying DEFAULT 'Tactical Report'::character varying NOT NULL,
    incident_id integer,
    participant_id integer,
    search_vector tsvector
);


ALTER TABLE public.report OWNER TO postgres;

--
-- Name: report_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.report_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.report_id_seq OWNER TO postgres;

--
-- Name: report_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.report_id_seq OWNED BY public.report.id;


--
-- Name: search_filter; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.search_filter (
    id integer NOT NULL,
    name character varying,
    description character varying,
    expression json,
    creator_id integer,
    type character varying,
    search_vector tsvector
);


ALTER TABLE public.search_filter OWNER TO postgres;

--
-- Name: search_filter_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.search_filter_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.search_filter_id_seq OWNER TO postgres;

--
-- Name: search_filter_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.search_filter_id_seq OWNED BY public.search_filter.id;


--
-- Name: service; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.service (
    id integer NOT NULL,
    is_active boolean,
    name character varying,
    type character varying,
    description character varying,
    external_id character varying,
    search_vector tsvector,
    updated_at timestamp without time zone,
    created_at timestamp without time zone
);


ALTER TABLE public.service OWNER TO postgres;

--
-- Name: service_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.service_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.service_id_seq OWNER TO postgres;

--
-- Name: service_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.service_id_seq OWNED BY public.service.id;


--
-- Name: service_incident; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.service_incident (
    incident_id integer NOT NULL,
    service_id integer NOT NULL
);


ALTER TABLE public.service_incident OWNER TO postgres;

--
-- Name: service_incident_priority; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.service_incident_priority (
    incident_priority_id integer NOT NULL,
    service_id integer NOT NULL
);


ALTER TABLE public.service_incident_priority OWNER TO postgres;

--
-- Name: service_incident_type; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.service_incident_type (
    incident_type_id integer NOT NULL,
    service_id integer NOT NULL
);


ALTER TABLE public.service_incident_type OWNER TO postgres;

--
-- Name: service_terms; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.service_terms (
    term_id integer NOT NULL,
    service_id integer NOT NULL
);


ALTER TABLE public.service_terms OWNER TO postgres;

--
-- Name: storage; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.storage (
    resource_type character varying,
    resource_id character varying,
    weblink character varying,
    id integer NOT NULL,
    incident_id integer,
    created_at timestamp without time zone,
    updated_at timestamp without time zone
);


ALTER TABLE public.storage OWNER TO postgres;

--
-- Name: storage_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.storage_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.storage_id_seq OWNER TO postgres;

--
-- Name: storage_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.storage_id_seq OWNED BY public.storage.id;


--
-- Name: tag; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.tag (
    id integer NOT NULL,
    name character varying,
    description character varying,
    uri character varying,
    source character varying,
    discoverable boolean,
    search_vector tsvector,
    updated_at timestamp without time zone,
    created_at timestamp without time zone,
    tag_type_id integer
);


ALTER TABLE public.tag OWNER TO postgres;

--
-- Name: tag_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.tag_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.tag_id_seq OWNER TO postgres;

--
-- Name: tag_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.tag_id_seq OWNED BY public.tag.id;


--
-- Name: tag_type; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.tag_type (
    id integer NOT NULL,
    name character varying,
    description character varying,
    search_vector tsvector,
    updated_at timestamp without time zone,
    created_at timestamp without time zone
);


ALTER TABLE public.tag_type OWNER TO postgres;

--
-- Name: tag_type_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.tag_type_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.tag_type_id_seq OWNER TO postgres;

--
-- Name: tag_type_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.tag_type_id_seq OWNED BY public.tag_type.id;


--
-- Name: task; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.task (
    resource_type character varying,
    resource_id character varying,
    weblink character varying,
    id integer NOT NULL,
    resolved_at timestamp without time zone,
    resolve_by timestamp without time zone,
    last_reminder_at timestamp without time zone,
    creator_id integer,
    description character varying,
    source character varying,
    priority character varying,
    status character varying,
    reminders boolean,
    incident_id integer,
    search_vector tsvector,
    created_at timestamp without time zone,
    updated_at timestamp without time zone,
    owner_id integer
);


ALTER TABLE public.task OWNER TO postgres;

--
-- Name: task_assignees; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.task_assignees (
    participant_id integer NOT NULL,
    task_id integer NOT NULL
);


ALTER TABLE public.task_assignees OWNER TO postgres;

--
-- Name: task_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.task_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.task_id_seq OWNER TO postgres;

--
-- Name: task_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.task_id_seq OWNED BY public.task.id;


--
-- Name: task_tickets; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.task_tickets (
    ticket_id integer NOT NULL,
    task_id integer NOT NULL
);


ALTER TABLE public.task_tickets OWNER TO postgres;

--
-- Name: team_contact; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.team_contact (
    is_active boolean,
    is_external boolean,
    contact_type character varying,
    email character varying,
    company character varying,
    owner character varying,
    id integer NOT NULL,
    name character varying,
    notes character varying,
    search_vector tsvector,
    created_at timestamp without time zone,
    updated_at timestamp without time zone
);


ALTER TABLE public.team_contact OWNER TO postgres;

--
-- Name: team_contact_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.team_contact_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.team_contact_id_seq OWNER TO postgres;

--
-- Name: team_contact_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.team_contact_id_seq OWNED BY public.team_contact.id;


--
-- Name: team_contact_incident; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.team_contact_incident (
    incident_id integer NOT NULL,
    team_contact_id integer NOT NULL
);


ALTER TABLE public.team_contact_incident OWNER TO postgres;

--
-- Name: team_contact_incident_priority; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.team_contact_incident_priority (
    incident_priority_id integer NOT NULL,
    team_contact_id integer NOT NULL
);


ALTER TABLE public.team_contact_incident_priority OWNER TO postgres;

--
-- Name: team_contact_incident_type; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.team_contact_incident_type (
    incident_type_id integer NOT NULL,
    team_contact_id integer NOT NULL
);


ALTER TABLE public.team_contact_incident_type OWNER TO postgres;

--
-- Name: team_contact_terms; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.team_contact_terms (
    term_id integer NOT NULL,
    team_contact_id integer NOT NULL
);


ALTER TABLE public.team_contact_terms OWNER TO postgres;

--
-- Name: term; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.term (
    id integer NOT NULL,
    text character varying,
    discoverable boolean,
    search_vector tsvector
);


ALTER TABLE public.term OWNER TO postgres;

--
-- Name: term_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.term_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.term_id_seq OWNER TO postgres;

--
-- Name: term_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.term_id_seq OWNED BY public.term.id;


--
-- Name: ticket; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.ticket (
    resource_type character varying,
    resource_id character varying,
    weblink character varying,
    id integer NOT NULL,
    incident_id integer,
    updated_at timestamp without time zone,
    created_at timestamp without time zone
);


ALTER TABLE public.ticket OWNER TO postgres;

--
-- Name: ticket_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.ticket_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ticket_id_seq OWNER TO postgres;

--
-- Name: ticket_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.ticket_id_seq OWNED BY public.ticket.id;


--
-- Name: workflow; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.workflow (
    id integer NOT NULL,
    name character varying,
    description character varying,
    parameters json,
    resource_id character varying,
    search_vector tsvector,
    created_at timestamp without time zone,
    updated_at timestamp without time zone,
    plugin_id integer,
    enabled boolean
);


ALTER TABLE public.workflow OWNER TO postgres;

--
-- Name: workflow_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.workflow_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.workflow_id_seq OWNER TO postgres;

--
-- Name: workflow_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.workflow_id_seq OWNED BY public.workflow.id;


--
-- Name: workflow_incident_priority; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.workflow_incident_priority (
    incident_priority_id integer NOT NULL,
    workflow_id integer NOT NULL
);


ALTER TABLE public.workflow_incident_priority OWNER TO postgres;

--
-- Name: workflow_incident_type; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.workflow_incident_type (
    incident_type_id integer NOT NULL,
    workflow_id integer NOT NULL
);


ALTER TABLE public.workflow_incident_type OWNER TO postgres;

--
-- Name: workflow_instance; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.workflow_instance (
    resource_type character varying,
    resource_id character varying,
    weblink character varying,
    id integer NOT NULL,
    workflow_id integer,
    creator_id integer,
    status character varying,
    incident_id integer,
    created_at timestamp without time zone,
    updated_at timestamp without time zone,
    parameters json,
    run_reason character varying
);


ALTER TABLE public.workflow_instance OWNER TO postgres;

--
-- Name: workflow_instance_artifact; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.workflow_instance_artifact (
    document_id integer NOT NULL,
    workflow_instance_id integer NOT NULL
);


ALTER TABLE public.workflow_instance_artifact OWNER TO postgres;

--
-- Name: workflow_instance_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.workflow_instance_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.workflow_instance_id_seq OWNER TO postgres;

--
-- Name: workflow_instance_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.workflow_instance_id_seq OWNED BY public.workflow_instance.id;


--
-- Name: workflow_term; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.workflow_term (
    term_id integer NOT NULL,
    workflow_id integer NOT NULL
);


ALTER TABLE public.workflow_term OWNER TO postgres;

--
-- Name: dispatch_user id; Type: DEFAULT; Schema: dispatch_core; Owner: postgres
--

ALTER TABLE ONLY dispatch_core.dispatch_user ALTER COLUMN id SET DEFAULT nextval('dispatch_core.dispatch_user_id_seq'::regclass);


--
-- Name: organization id; Type: DEFAULT; Schema: dispatch_core; Owner: postgres
--

ALTER TABLE ONLY dispatch_core.organization ALTER COLUMN id SET DEFAULT nextval('dispatch_core.organization_id_seq'::regclass);


--
-- Name: plugin id; Type: DEFAULT; Schema: dispatch_core; Owner: postgres
--

ALTER TABLE ONLY dispatch_core.plugin ALTER COLUMN id SET DEFAULT nextval('dispatch_core.plugin_id_seq'::regclass);


--
-- Name: plugin_event id; Type: DEFAULT; Schema: dispatch_core; Owner: postgres
--

ALTER TABLE ONLY dispatch_core.plugin_event ALTER COLUMN id SET DEFAULT nextval('dispatch_core.plugin_event_id_seq'::regclass);


--
-- Name: alert id; Type: DEFAULT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.alert ALTER COLUMN id SET DEFAULT nextval('dispatch_organization_default.alert_id_seq'::regclass);


--
-- Name: case id; Type: DEFAULT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default."case" ALTER COLUMN id SET DEFAULT nextval('dispatch_organization_default.case_id_seq'::regclass);


--
-- Name: case_priority id; Type: DEFAULT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.case_priority ALTER COLUMN id SET DEFAULT nextval('dispatch_organization_default.case_priority_id_seq'::regclass);


--
-- Name: case_severity id; Type: DEFAULT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.case_severity ALTER COLUMN id SET DEFAULT nextval('dispatch_organization_default.case_severity_id_seq'::regclass);


--
-- Name: case_type id; Type: DEFAULT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.case_type ALTER COLUMN id SET DEFAULT nextval('dispatch_organization_default.case_type_id_seq'::regclass);


--
-- Name: conference id; Type: DEFAULT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.conference ALTER COLUMN id SET DEFAULT nextval('dispatch_organization_default.conference_id_seq'::regclass);


--
-- Name: conversation id; Type: DEFAULT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.conversation ALTER COLUMN id SET DEFAULT nextval('dispatch_organization_default.conversation_id_seq'::regclass);


--
-- Name: cost_model id; Type: DEFAULT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.cost_model ALTER COLUMN id SET DEFAULT nextval('dispatch_organization_default.cost_model_id_seq'::regclass);


--
-- Name: cost_model_activity id; Type: DEFAULT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.cost_model_activity ALTER COLUMN id SET DEFAULT nextval('dispatch_organization_default.cost_model_activity_id_seq'::regclass);


--
-- Name: definition id; Type: DEFAULT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.definition ALTER COLUMN id SET DEFAULT nextval('dispatch_organization_default.definition_id_seq'::regclass);


--
-- Name: document id; Type: DEFAULT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.document ALTER COLUMN id SET DEFAULT nextval('dispatch_organization_default.document_id_seq'::regclass);


--
-- Name: entity id; Type: DEFAULT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.entity ALTER COLUMN id SET DEFAULT nextval('dispatch_organization_default.entity_id_seq'::regclass);


--
-- Name: entity_type id; Type: DEFAULT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.entity_type ALTER COLUMN id SET DEFAULT nextval('dispatch_organization_default.entity_type_id_seq'::regclass);


--
-- Name: event id; Type: DEFAULT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.event ALTER COLUMN id SET DEFAULT nextval('dispatch_organization_default.event_id_seq'::regclass);


--
-- Name: feedback id; Type: DEFAULT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.feedback ALTER COLUMN id SET DEFAULT nextval('dispatch_organization_default.feedback_id_seq'::regclass);


--
-- Name: forms id; Type: DEFAULT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.forms ALTER COLUMN id SET DEFAULT nextval('dispatch_organization_default.forms_id_seq'::regclass);


--
-- Name: forms_type id; Type: DEFAULT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.forms_type ALTER COLUMN id SET DEFAULT nextval('dispatch_organization_default.forms_type_id_seq'::regclass);


--
-- Name: group id; Type: DEFAULT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default."group" ALTER COLUMN id SET DEFAULT nextval('dispatch_organization_default.group_id_seq'::regclass);


--
-- Name: incident id; Type: DEFAULT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.incident ALTER COLUMN id SET DEFAULT nextval('dispatch_organization_default.incident_id_seq'::regclass);


--
-- Name: incident_cost id; Type: DEFAULT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.incident_cost ALTER COLUMN id SET DEFAULT nextval('dispatch_organization_default.incident_cost_id_seq'::regclass);


--
-- Name: incident_cost_type id; Type: DEFAULT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.incident_cost_type ALTER COLUMN id SET DEFAULT nextval('dispatch_organization_default.incident_cost_type_id_seq'::regclass);


--
-- Name: incident_priority id; Type: DEFAULT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.incident_priority ALTER COLUMN id SET DEFAULT nextval('dispatch_organization_default.incident_priority_id_seq'::regclass);


--
-- Name: incident_role id; Type: DEFAULT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.incident_role ALTER COLUMN id SET DEFAULT nextval('dispatch_organization_default.incident_role_id_seq'::regclass);


--
-- Name: incident_severity id; Type: DEFAULT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.incident_severity ALTER COLUMN id SET DEFAULT nextval('dispatch_organization_default.incident_severity_id_seq'::regclass);


--
-- Name: incident_type id; Type: DEFAULT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.incident_type ALTER COLUMN id SET DEFAULT nextval('dispatch_organization_default.incident_type_id_seq'::regclass);


--
-- Name: individual_contact id; Type: DEFAULT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.individual_contact ALTER COLUMN id SET DEFAULT nextval('dispatch_organization_default.individual_contact_id_seq'::regclass);


--
-- Name: monitor id; Type: DEFAULT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.monitor ALTER COLUMN id SET DEFAULT nextval('dispatch_organization_default.monitor_id_seq'::regclass);


--
-- Name: notification id; Type: DEFAULT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.notification ALTER COLUMN id SET DEFAULT nextval('dispatch_organization_default.notification_id_seq'::regclass);


--
-- Name: participant id; Type: DEFAULT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.participant ALTER COLUMN id SET DEFAULT nextval('dispatch_organization_default.participant_id_seq'::regclass);


--
-- Name: participant_activity id; Type: DEFAULT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.participant_activity ALTER COLUMN id SET DEFAULT nextval('dispatch_organization_default.participant_activity_id_seq'::regclass);


--
-- Name: participant_role id; Type: DEFAULT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.participant_role ALTER COLUMN id SET DEFAULT nextval('dispatch_organization_default.participant_role_id_seq'::regclass);


--
-- Name: plugin_instance id; Type: DEFAULT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.plugin_instance ALTER COLUMN id SET DEFAULT nextval('dispatch_organization_default.plugin_instance_id_seq'::regclass);


--
-- Name: project id; Type: DEFAULT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.project ALTER COLUMN id SET DEFAULT nextval('dispatch_organization_default.project_id_seq'::regclass);


--
-- Name: query id; Type: DEFAULT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.query ALTER COLUMN id SET DEFAULT nextval('dispatch_organization_default.query_id_seq'::regclass);


--
-- Name: recommendation id; Type: DEFAULT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.recommendation ALTER COLUMN id SET DEFAULT nextval('dispatch_organization_default.recommendation_id_seq'::regclass);


--
-- Name: recommendation_match id; Type: DEFAULT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.recommendation_match ALTER COLUMN id SET DEFAULT nextval('dispatch_organization_default.recommendation_match_id_seq'::regclass);


--
-- Name: report id; Type: DEFAULT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.report ALTER COLUMN id SET DEFAULT nextval('dispatch_organization_default.report_id_seq'::regclass);


--
-- Name: search_filter id; Type: DEFAULT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.search_filter ALTER COLUMN id SET DEFAULT nextval('dispatch_organization_default.search_filter_id_seq'::regclass);


--
-- Name: service id; Type: DEFAULT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.service ALTER COLUMN id SET DEFAULT nextval('dispatch_organization_default.service_id_seq'::regclass);


--
-- Name: service_feedback id; Type: DEFAULT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.service_feedback ALTER COLUMN id SET DEFAULT nextval('dispatch_organization_default.service_feedback_id_seq'::regclass);


--
-- Name: service_feedback_reminder id; Type: DEFAULT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.service_feedback_reminder ALTER COLUMN id SET DEFAULT nextval('dispatch_organization_default.service_feedback_reminder_id_seq'::regclass);


--
-- Name: signal id; Type: DEFAULT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.signal ALTER COLUMN id SET DEFAULT nextval('dispatch_organization_default.signal_id_seq'::regclass);


--
-- Name: signal_engagement id; Type: DEFAULT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.signal_engagement ALTER COLUMN id SET DEFAULT nextval('dispatch_organization_default.signal_engagement_id_seq'::regclass);


--
-- Name: signal_filter id; Type: DEFAULT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.signal_filter ALTER COLUMN id SET DEFAULT nextval('dispatch_organization_default.signal_filter_id_seq'::regclass);


--
-- Name: source id; Type: DEFAULT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.source ALTER COLUMN id SET DEFAULT nextval('dispatch_organization_default.source_id_seq'::regclass);


--
-- Name: source_data_format id; Type: DEFAULT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.source_data_format ALTER COLUMN id SET DEFAULT nextval('dispatch_organization_default.source_data_format_id_seq'::regclass);


--
-- Name: source_environment id; Type: DEFAULT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.source_environment ALTER COLUMN id SET DEFAULT nextval('dispatch_organization_default.source_environment_id_seq'::regclass);


--
-- Name: source_status id; Type: DEFAULT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.source_status ALTER COLUMN id SET DEFAULT nextval('dispatch_organization_default.source_status_id_seq'::regclass);


--
-- Name: source_transport id; Type: DEFAULT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.source_transport ALTER COLUMN id SET DEFAULT nextval('dispatch_organization_default.source_transport_id_seq'::regclass);


--
-- Name: source_type id; Type: DEFAULT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.source_type ALTER COLUMN id SET DEFAULT nextval('dispatch_organization_default.source_type_id_seq'::regclass);


--
-- Name: storage id; Type: DEFAULT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.storage ALTER COLUMN id SET DEFAULT nextval('dispatch_organization_default.storage_id_seq'::regclass);


--
-- Name: tag id; Type: DEFAULT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.tag ALTER COLUMN id SET DEFAULT nextval('dispatch_organization_default.tag_id_seq'::regclass);


--
-- Name: tag_type id; Type: DEFAULT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.tag_type ALTER COLUMN id SET DEFAULT nextval('dispatch_organization_default.tag_type_id_seq'::regclass);


--
-- Name: task id; Type: DEFAULT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.task ALTER COLUMN id SET DEFAULT nextval('dispatch_organization_default.task_id_seq'::regclass);


--
-- Name: team_contact id; Type: DEFAULT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.team_contact ALTER COLUMN id SET DEFAULT nextval('dispatch_organization_default.team_contact_id_seq'::regclass);


--
-- Name: term id; Type: DEFAULT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.term ALTER COLUMN id SET DEFAULT nextval('dispatch_organization_default.term_id_seq'::regclass);


--
-- Name: ticket id; Type: DEFAULT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.ticket ALTER COLUMN id SET DEFAULT nextval('dispatch_organization_default.ticket_id_seq'::regclass);


--
-- Name: workflow id; Type: DEFAULT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.workflow ALTER COLUMN id SET DEFAULT nextval('dispatch_organization_default.workflow_id_seq'::regclass);


--
-- Name: workflow_instance id; Type: DEFAULT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.workflow_instance ALTER COLUMN id SET DEFAULT nextval('dispatch_organization_default.workflow_instance_id_seq'::regclass);


--
-- Name: conference id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.conference ALTER COLUMN id SET DEFAULT nextval('public.conference_id_seq'::regclass);


--
-- Name: conversation id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.conversation ALTER COLUMN id SET DEFAULT nextval('public.conversation_id_seq'::regclass);


--
-- Name: definition id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.definition ALTER COLUMN id SET DEFAULT nextval('public.definition_id_seq'::regclass);


--
-- Name: dispatch_user id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.dispatch_user ALTER COLUMN id SET DEFAULT nextval('public.dispatch_user_id_seq'::regclass);


--
-- Name: document id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.document ALTER COLUMN id SET DEFAULT nextval('public.document_id_seq'::regclass);


--
-- Name: event id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.event ALTER COLUMN id SET DEFAULT nextval('public.event_id_seq'::regclass);


--
-- Name: feedback id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.feedback ALTER COLUMN id SET DEFAULT nextval('public.feedback_id_seq'::regclass);


--
-- Name: group id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."group" ALTER COLUMN id SET DEFAULT nextval('public.group_id_seq'::regclass);


--
-- Name: incident id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.incident ALTER COLUMN id SET DEFAULT nextval('public.incident_id_seq'::regclass);


--
-- Name: incident_priority id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.incident_priority ALTER COLUMN id SET DEFAULT nextval('public.incident_priority_id_seq'::regclass);


--
-- Name: incident_type id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.incident_type ALTER COLUMN id SET DEFAULT nextval('public.incident_type_id_seq'::regclass);


--
-- Name: individual_contact id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.individual_contact ALTER COLUMN id SET DEFAULT nextval('public.individual_contact_id_seq'::regclass);


--
-- Name: notification id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.notification ALTER COLUMN id SET DEFAULT nextval('public.notification_id_seq'::regclass);


--
-- Name: participant id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.participant ALTER COLUMN id SET DEFAULT nextval('public.participant_id_seq'::regclass);


--
-- Name: participant_role id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.participant_role ALTER COLUMN id SET DEFAULT nextval('public.participant_role_id_seq'::regclass);


--
-- Name: plugin id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.plugin ALTER COLUMN id SET DEFAULT nextval('public.plugin_id_seq'::regclass);


--
-- Name: recommendation id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.recommendation ALTER COLUMN id SET DEFAULT nextval('public.recommendation_id_seq'::regclass);


--
-- Name: recommendation_accuracy id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.recommendation_accuracy ALTER COLUMN id SET DEFAULT nextval('public.recommendation_accuracy_id_seq'::regclass);


--
-- Name: report id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.report ALTER COLUMN id SET DEFAULT nextval('public.report_id_seq'::regclass);


--
-- Name: search_filter id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.search_filter ALTER COLUMN id SET DEFAULT nextval('public.search_filter_id_seq'::regclass);


--
-- Name: service id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.service ALTER COLUMN id SET DEFAULT nextval('public.service_id_seq'::regclass);


--
-- Name: storage id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.storage ALTER COLUMN id SET DEFAULT nextval('public.storage_id_seq'::regclass);


--
-- Name: tag id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.tag ALTER COLUMN id SET DEFAULT nextval('public.tag_id_seq'::regclass);


--
-- Name: tag_type id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.tag_type ALTER COLUMN id SET DEFAULT nextval('public.tag_type_id_seq'::regclass);


--
-- Name: task id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.task ALTER COLUMN id SET DEFAULT nextval('public.task_id_seq'::regclass);


--
-- Name: team_contact id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.team_contact ALTER COLUMN id SET DEFAULT nextval('public.team_contact_id_seq'::regclass);


--
-- Name: term id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.term ALTER COLUMN id SET DEFAULT nextval('public.term_id_seq'::regclass);


--
-- Name: ticket id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ticket ALTER COLUMN id SET DEFAULT nextval('public.ticket_id_seq'::regclass);


--
-- Name: workflow id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.workflow ALTER COLUMN id SET DEFAULT nextval('public.workflow_id_seq'::regclass);


--
-- Name: workflow_instance id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.workflow_instance ALTER COLUMN id SET DEFAULT nextval('public.workflow_instance_id_seq'::regclass);


--
-- Data for Name: alembic_version; Type: TABLE DATA; Schema: dispatch_core; Owner: postgres
--

COPY dispatch_core.alembic_version (version_num) FROM stdin;
ed0b0388fa3f
\.


--
-- Data for Name: dispatch_user; Type: TABLE DATA; Schema: dispatch_core; Owner: postgres
--

COPY dispatch_core.dispatch_user (id, email, password, search_vector, updated_at, created_at, last_mfa_time, experimental_features) FROM stdin;
1	test@email.com	\\x24326224313224335178516e33684c3138414a6645764370787856427555364b3037586b4555615468345a6d5652697737722f6133506d4233314357	'test@email.com':1A	2021-07-27 18:03:54.011712	2021-07-27 18:03:53.987587	\N	\N
496	kglisson@example.com	\\x24326224313224475a57777a53673452745579676d37456b6b3658757547497a55414b3977566953572e526f7876554e56795848544f334b36583647	'kglisson@example.com':1A	2021-07-27 19:50:07.978675	2021-07-27 19:47:26.818131	\N	\N
129	dispatch@example.com	\\x24326224313224652f674233756651656365474b376b6a6d7a44473175367a6e563677663030437777575055694d657156566c6c4272346c746a6832	'dispatch@example.com':1A	2021-07-27 18:45:54.472619	2021-07-27 18:44:28.472455	\N	\N
4236	kglisson@acme.com	\\x2432622431322465334576387136706d757450674b446f6e465231337547766a4b436b5951325a48694e57754837546e4f696d74547255786d47344b	'kglisson@acme.com':1A	2022-03-04 18:11:31.450294	2021-08-04 21:14:27.722495	\N	\N
4259	pjvxm@example.com	\\x24326224313224533765652f4343326f634d596a2e7973704257715765464943647644717059612f57545371476b44584274727146786c4c37737557	'pjvxm@example.com':1A	2024-02-04 02:51:09.621875	2024-02-04 02:51:09.572056	\N	f
4258	oo65l@example.com	\\x243262243132244b54304547624477685137454f524e46436449656865535877464b6353654a44517458547270796a734650656e4b6e4b6541427675	'oo65l@example.com':1A	2024-02-04 02:51:09.623427	2024-02-04 02:51:09.569227	\N	f
4260	3p1t6@example.com	\\x243262243132246f4861584a436b366d686e4f624e584930336c666a65676d47534d35497046636a585231634e43472f727a514a4a6b5a307a516e53	'3p1t6@example.com':1A	2024-02-04 02:51:09.922722	2024-02-04 02:51:09.896716	\N	f
\.


--
-- Data for Name: dispatch_user_organization; Type: TABLE DATA; Schema: dispatch_core; Owner: postgres
--

COPY dispatch_core.dispatch_user_organization (dispatch_user_id, organization_id, role, updated_at, created_at) FROM stdin;
1	1	Member	2021-07-27 18:03:54.004041	2021-07-27 18:03:54.004048
129	1	Owner	2021-07-27 18:45:54.477286	2021-07-27 18:44:28.473467
496	1	Owner	2021-07-27 19:50:07.983374	2021-07-27 19:47:26.819394
4236	1	Member	2021-08-04 21:14:27.726854	2021-08-04 21:14:27.726861
4259	1	Member	2024-02-04 02:51:09.597753	2024-02-04 02:51:09.597759
4258	1	Member	2024-02-04 02:51:09.598371	2024-02-04 02:51:09.598376
4260	1	Member	2024-02-04 02:51:09.905611	2024-02-04 02:51:09.905615
\.


--
-- Data for Name: organization; Type: TABLE DATA; Schema: dispatch_core; Owner: postgres
--

COPY dispatch_core.organization (id, name, "default", description, banner_enabled, banner_color, banner_text, search_vector, slug) FROM stdin;
1	default	t	Default dispatch organization.	\N	\N	\N	'default':1A,2B 'dispatch':3B 'organ':4B	default
\.


--
-- Data for Name: plugin; Type: TABLE DATA; Schema: dispatch_core; Owner: postgres
--

COPY dispatch_core.plugin (id, title, slug, description, version, author, author_url, type, multiple, search_vector) FROM stdin;
2	Dispatch Plugin - Basic Authentication Provider	dispatch-auth-provider-basic	Generic basic authentication provider.	0.1.0	Netflix	https://github.com/netflix/dispatch.git	auth-provider	f	'auth':8B,12C 'auth-provid':11C 'authent':4A,16C 'basic':3A,10B,15C 'dispatch':1A,7B 'dispatch-auth-provider-bas':6B 'generic':14C 'plugin':2A 'provid':5A,9B,13C,17C
3	Dispatch Plugin - Contact plugin	dispatch-contact	Uses dispatch itself to resolve incident participants.	0.1.0	Netflix	https://github.com/netflix/dispatch.git	contact	f	'contact':3A,7B,8C 'dispatch':1A,6B,10C 'dispatch-contact':5B 'incid':14C 'particip':15C 'plugin':2A,4A 'resolv':13C 'use':9C
4	Dispatch Plugin - Document Resolver	dispatch-document-resolver	Uses dispatch itself to resolve incident documents.	0.1.0	Netflix	https://github.com/netflix/dispatch.git	document-resolver	f	'dispatch':1A,6B,13C 'dispatch-document-resolv':5B 'document':3A,7B,10C,18C 'document-resolv':9C 'incid':17C 'plugin':2A 'resolv':4A,8B,11C,16C 'use':12C
5	Dispatch Plugin - PKCE Authentication Provider	dispatch-auth-provider-pkce	Generic PCKE authentication provider.	0.1.0	Netflix	https://github.com/netflix/dispatch.git	auth-provider	f	'auth':8B,12C 'auth-provid':11C 'authent':4A,16C 'dispatch':1A,7B 'dispatch-auth-provider-pkc':6B 'generic':14C 'pcke':15C 'pkce':3A,10B 'plugin':2A 'provid':5A,9B,13C,17C
6	Dispatch Plugin - Participant Resolver	dispatch-participant-resolver	Uses dispatch itself to resolve incident participants.	0.1.0	Netflix	https://github.com/netflix/dispatch.git	participant	f	'dispatch':1A,6B,11C 'dispatch-participant-resolv':5B 'incid':15C 'particip':3A,7B,9C,16C 'plugin':2A 'resolv':4A,8B,14C 'use':10C
7	Dispatch Plugin - Ticket Management	dispatch-ticket	Uses dispatch itself to create a ticket.	0.1.0	Netflix	https://github.com/netflix/dispatch.git	ticket	f	'creat':13C 'dispatch':1A,6B,10C 'dispatch-ticket':5B 'manag':4A 'plugin':2A 'ticket':3A,7B,8C,15C 'use':9C
8	Google Calendar Plugin - Conference Management	google-calendar-conference	Uses Google calendar to manage conference rooms/meets.	0.1.0	Netflix	https://github.com/netflix/dispatch.git	conference	f	'calendar':2A,8B,13C 'confer':4A,9B,10C,16C 'googl':1A,7B,12C 'google-calendar-confer':6B 'manag':5A,15C 'plugin':3A 'rooms/meets':17C 'use':11C
9	Google Docs Plugin - Document Management	google-docs-document	Uses Google docs to manage document contents.	0.1.0	Netflix	https://github.com/netflix/dispatch.git	document	f	'content':17C 'doc':2A,8B,13C 'document':4A,9B,10C,16C 'googl':1A,7B,12C 'google-docs-docu':6B 'manag':5A,15C 'plugin':3A 'use':11C
10	Google Drive Plugin - Storage Management	google-drive-storage	Uses Google Drive to help manage incident storage.	0.1.0	Netflix	https://github.com/netflix/dispatch.git	storage	f	'drive':2A,8B,13C 'googl':1A,7B,12C 'google-drive-storag':6B 'help':15C 'incid':17C 'manag':5A,16C 'plugin':3A 'storag':4A,9B,10C,18C 'use':11C
11	Google Drive Plugin - Task Management	google-drive-task	Uses Google Drive to help manage incident tasks.	0.1.0	Netflix	https://github.com/netflix/dispatch.git	task	f	'drive':2A,8B,13C 'googl':1A,7B,12C 'google-drive-task':6B 'help':15C 'incid':17C 'manag':5A,16C 'plugin':3A 'task':4A,9B,10C,18C 'use':11C
12	Google Gmail Plugin - Email Management	google-gmail-email	Uses Gmail to facilitate emails.	0.1.0	Netflix	https://github.com/netflix/dispatch.git	email	f	'email':4A,9B,10C,15C 'facilit':14C 'gmail':2A,8B,12C 'googl':1A,7B 'google-gmail-email':6B 'manag':5A 'plugin':3A 'use':11C
13	Google Group Plugin - Participant Group Management	google-group-participant-group	Uses Google Groups to help manage participant membership.	0.1.0	Netflix	https://github.com/netflix/dispatch.git	participant-group	f	'googl':1A,8B,16C 'google-group-participant-group':7B 'group':2A,5A,9B,11B,14C,17C 'help':19C 'manag':6A,20C 'membership':22C 'particip':4A,10B,13C,21C 'participant-group':12C 'plugin':3A 'use':15C
16	PagerDuty Plugin - Oncall Management	pagerduty-oncall	Uses PagerDuty to resolve and page oncall teams.	0.1.0	Netflix	https://github.com/Netflix/dispatch.git	oncall	f	'manag':4A 'oncal':3A,7B,8C,15C 'page':14C 'pagerduti':1A,6B,10C 'pagerduty-oncal':5B 'plugin':2A 'resolv':12C 'team':16C 'use':9C
18	Slack Plugin - Contact Information Resolver	slack-contact	Uses Slack to resolve contact information details.	0.1.0	Netflix	https://github.com/netflix/dispatch.git	contact	f	'contact':3A,8B,9C,14C 'detail':16C 'inform':4A,15C 'plugin':2A 'resolv':5A,13C 'slack':1A,7B,11C 'slack-contact':6B 'use':10C
19	Slack Plugin - Conversation Management	slack-conversation	Uses Slack to facilitate conversations.	0.1.0	Netflix	https://github.com/netflix/dispatch.git	conversation	f	'convers':3A,7B,8C,13C 'facilit':12C 'manag':4A 'plugin':2A 'slack':1A,6B,10C 'slack-convers':5B 'use':9C
\.


--
-- Data for Name: plugin_event; Type: TABLE DATA; Schema: dispatch_core; Owner: postgres
--

COPY dispatch_core.plugin_event (id, name, slug, description, plugin_id, search_vector) FROM stdin;
\.


--
-- Data for Name: alembic_version; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.alembic_version (version_num) FROM stdin;
d4bbb234d0bc
\.


--
-- Data for Name: alert; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.alert (id, name, description, orginator, external_link, source_id, search_vector, updated_at, created_at) FROM stdin;
\.


--
-- Data for Name: assoc_case_incidents; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.assoc_case_incidents (case_id, incident_id) FROM stdin;
\.


--
-- Data for Name: assoc_case_tags; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.assoc_case_tags (case_id, tag_id) FROM stdin;
\.


--
-- Data for Name: assoc_cost_model_activities; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.assoc_cost_model_activities (cost_model_id, cost_model_activity_id) FROM stdin;
\.


--
-- Data for Name: assoc_document_filters; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.assoc_document_filters (document_id, search_filter_id) FROM stdin;
\.


--
-- Data for Name: assoc_incident_tags; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.assoc_incident_tags (incident_id, tag_id) FROM stdin;
2	1
7	1
\.


--
-- Data for Name: assoc_incident_terms; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.assoc_incident_terms (incident_id, term_id) FROM stdin;
\.


--
-- Data for Name: assoc_individual_contact_filters; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.assoc_individual_contact_filters (individual_contact_id, search_filter_id) FROM stdin;
\.


--
-- Data for Name: assoc_notification_filters; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.assoc_notification_filters (notification_id, search_filter_id) FROM stdin;
1	2
\.


--
-- Data for Name: assoc_query_incidents; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.assoc_query_incidents (query_id, incident_id) FROM stdin;
\.


--
-- Data for Name: assoc_query_tags; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.assoc_query_tags (query_id, tag_id) FROM stdin;
\.


--
-- Data for Name: assoc_service_filters; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.assoc_service_filters (service_id, search_filter_id) FROM stdin;
\.


--
-- Data for Name: assoc_signal_engagements; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.assoc_signal_engagements (signal_id, signal_engagement_id) FROM stdin;
\.


--
-- Data for Name: assoc_signal_entity_types; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.assoc_signal_entity_types (signal_id, entity_type_id) FROM stdin;
\.


--
-- Data for Name: assoc_signal_filters; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.assoc_signal_filters (signal_id, signal_filter_id) FROM stdin;
\.


--
-- Data for Name: assoc_signal_instance_entities; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.assoc_signal_instance_entities (signal_instance_id, entity_id) FROM stdin;
\.


--
-- Data for Name: assoc_signal_tags; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.assoc_signal_tags (signal_id, tag_id) FROM stdin;
\.


--
-- Data for Name: assoc_signal_workflows; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.assoc_signal_workflows (signal_id, workflow_id) FROM stdin;
\.


--
-- Data for Name: assoc_source_incidents; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.assoc_source_incidents (source_id, incident_id) FROM stdin;
\.


--
-- Data for Name: assoc_source_tags; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.assoc_source_tags (source_id, tag_id) FROM stdin;
\.


--
-- Data for Name: assoc_team_contact_filters; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.assoc_team_contact_filters (team_contact_id, search_filter_id) FROM stdin;
1	1
\.


--
-- Data for Name: case; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default."case" (id, name, title, description, resolution, status, visibility, reported_at, closed_at, search_vector, duplicate_id, project_id, updated_at, created_at, triage_at, escalated_at, tactical_group_id, case_document_id, related_id, case_type_id, case_severity_id, case_priority_id, participants_team, participants_location, assignee_id, resolution_reason, signal_thread_ts, reporter_id) FROM stdin;
\.


--
-- Data for Name: case_priority; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.case_priority (id, name, description, color, enabled, "default", view_order, search_vector, project_id, page_assignee) FROM stdin;
\.


--
-- Data for Name: case_severity; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.case_severity (id, name, description, color, enabled, "default", view_order, search_vector, project_id) FROM stdin;
\.


--
-- Data for Name: case_type; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.case_type (id, name, description, visibility, "default", enabled, exclude_from_metrics, search_vector, project_id, plugin_metadata, case_template_document_id, oncall_service_id, incident_type_id, conversation_target) FROM stdin;
\.


--
-- Data for Name: conference; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.conference (resource_type, resource_id, weblink, id, conference_id, conference_challenge, incident_id, created_at, updated_at) FROM stdin;
google-calendar-conference	mkdkv4pot5tn3fuotee7smt1qc	https://meet.google.com/aps-ctxi-hnn	1	mkdkv4pot5tn3fuotee7smt1qc		2	2021-07-27 19:48:11.633195	2021-07-27 19:48:11.64121
google-calendar-conference	1q43rktpn00mb0o6l9d0ha8sic	https://meet.google.com/mjk-ghrf-usz	2	1q43rktpn00mb0o6l9d0ha8sic		4	2021-07-27 19:53:12.744998	2021-07-27 19:53:12.761535
google-calendar-conference	avgqiuccat7ta9gn72n0gbi71o	https://meet.google.com/dty-cegs-qxg	3	avgqiuccat7ta9gn72n0gbi71o		5	2021-07-27 20:06:30.171385	2021-07-27 20:06:30.179169
google-calendar-conference	k40ekn5shna32svnd1486s7l6g	https://meet.google.com/gai-nifr-gxk	4	k40ekn5shna32svnd1486s7l6g		6	2021-07-27 20:11:47.201852	2021-07-27 20:11:47.209279
\.


--
-- Data for Name: conversation; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.conversation (resource_type, resource_id, weblink, id, channel_id, incident_id, created_at, updated_at, thread_id, case_id) FROM stdin;
slack-conversation	dispatch-default-default-2	https://slack.com/app_redirect?channel=C0299CGE1QD	1	C0299CGE1QD	2	2021-07-27 19:48:12.771133	2021-07-27 19:48:12.781334	\N	\N
slack-conversation	dispatch-default-default-4	https://slack.com/app_redirect?channel=C028XNA1MBR	2	C028XNA1MBR	4	2021-07-27 19:53:13.926936	2021-07-27 19:53:13.933721	\N	\N
slack-conversation	dispatch-default-default-5	https://slack.com/app_redirect?channel=C028XQ2SDF1	3	C028XQ2SDF1	5	2021-07-27 20:06:31.285417	2021-07-27 20:06:31.292407	\N	\N
slack-conversation	dispatch-default-default-6	https://slack.com/app_redirect?channel=C0295PTNX46	4	C0295PTNX46	6	2021-07-27 20:11:48.282613	2021-07-27 20:11:48.291284	\N	\N
\.


--
-- Data for Name: cost_model; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.cost_model (id, name, description, enabled, search_vector, project_id, created_at, updated_at) FROM stdin;
\.


--
-- Data for Name: cost_model_activity; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.cost_model_activity (id, plugin_event_id, response_time_seconds, enabled) FROM stdin;
\.


--
-- Data for Name: definition; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.definition (id, text, source, search_vector, project_id) FROM stdin;
1	problem exists between chair and keyboard	dispatch	'chair':4 'exist':2 'keyboard':6 'problem':1	1
\.


--
-- Data for Name: definition_teams; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.definition_teams (definition_id, team_contact_id) FROM stdin;
\.


--
-- Data for Name: definition_terms; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.definition_terms (definition_id, term_id) FROM stdin;
1	1
\.


--
-- Data for Name: dispatch_user_project; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.dispatch_user_project (dispatch_user_id, project_id, role, updated_at, created_at, "default") FROM stdin;
1	1	Member	2021-07-27 18:03:54.014291	2021-07-27 18:03:54.014284	\N
129	1	Member	2021-07-27 18:44:28.479945	2021-07-27 18:44:28.47995	\N
496	1	Member	2021-07-27 19:47:26.825534	2021-07-27 19:47:26.825539	\N
4236	1	Member	2021-08-04 21:14:27.744061	2021-08-04 21:14:27.744069	\N
4259	1	Member	2024-02-04 02:51:09.617693	2024-02-04 02:51:09.617687	t
4258	1	Member	2024-02-04 02:51:09.619586	2024-02-04 02:51:09.619583	t
4260	1	Member	2024-02-04 02:51:09.916668	2024-02-04 02:51:09.916659	t
\.


--
-- Data for Name: document; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.document (resource_type, resource_id, weblink, id, name, description, report_id, incident_id, evergreen, evergreen_owner, evergreen_reminder_interval, evergreen_last_reminder_at, search_vector, project_id, created_at, updated_at, case_id) FROM stdin;
dispatch-incident-document-template	1fv--CrGpWJJ4nyPR0N0hq4JchHJPuqsXN4azE9CGQiE	https://docs.google.com/document/d/1fv--CrGpWJJ4nyPR0N0hq4JchHJPuqsXN4azE9CGQiE/edit	1	Generic Incident Template	This is a generic incident template using Google Docs.	\N	\N	\N	\N	90	\N	'generic':1 'incid':2 'templat':3	1	2021-07-27 18:52:03.734208	2021-07-27 18:52:03.734212	\N
dispatch-executive-report-document-template	1dab6k14p5ageo5B_d1YlB_zS9hMGHDMXy9RUbIZous4	https://docs.google.com/document/d/1dab6k14p5ageo5B_d1YlB_zS9hMGHDMXy9RUbIZous4/edit	2	Generic Executive Report Template	This is a generic executive report template using Google Docs.	\N	\N	\N	\N	90	\N	'execut':2 'generic':1 'report':3 'templat':4	1	2021-07-27 18:52:50.147156	2021-07-27 18:52:50.147161	\N
dispatch-incident-review-document-template	1-VwcEpVVdymoojdUg9e5XP8QGam0-B5Djxh-guuPpEc	https://docs.google.com/document/d/1-VwcEpVVdymoojdUg9e5XP8QGam0-B5Djxh-guuPpEc/edit	3	Generic Post Incident Review Template	This is a generic incident review template using Google Docs.	\N	\N	\N	\N	90	\N	'generic':1 'incid':3 'post':2 'review':4 'templat':5	1	2021-07-27 18:53:36.491241	2021-07-27 18:53:36.491246	\N
dispatch-incident-runbook	ky275e8cqydFUJ2-4OXfad498e9lRfeQP9zBLd-qWJU	https://docs.google.com/document/d/1ky275e8cqydFUJ2-4OXfad498e9lRfeQP9zBLd-qWJU/edit	4	Business Data Exposure Runbook	Runbook to be used during a data exposure incident.	\N	\N	f	\N	90	\N	'busi':1 'data':2 'exposur':3 'runbook':4	1	2021-07-27 19:04:08.491801	2021-07-27 19:04:08.491806	\N
\N	\N	\N	5	000	\N	\N	\N	t	\N	90	2021-07-27 20:52:36.204092	'000':1	\N	2021-07-27 20:52:36.207079	2021-07-27 20:52:36.207083	\N
\.


--
-- Data for Name: entity; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.entity (id, name, description, value, source, entity_type_id, search_vector, project_id, updated_at, created_at) FROM stdin;
\.


--
-- Data for Name: entity_type; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.entity_type (id, name, description, jpath, regular_expression, enabled, search_vector, project_id, updated_at, created_at, scope) FROM stdin;
\.


--
-- Data for Name: event; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.event (id, uuid, started_at, ended_at, source, description, details, individual_id, incident_id, search_vector, updated_at, created_at, dispatch_user_id, case_id, type, owner, pinned) FROM stdin;
29	49557f6b-2628-4b14-88f0-68fce5ecd67f	2021-07-27 19:54:05.75815	2021-07-27 19:54:05.75815	Dispatch Core App	The incident status has been changed from Active to Stable	null	\N	4	'activ':11B 'app':3A 'chang':9B 'core':2A 'dispatch':1A 'incid':5B 'stabl':13B 'status':6B	2021-07-27 19:54:05.772009	2021-07-27 19:54:05.758732	\N	\N	\N	\N	\N
2	e08315a0-31d6-4437-97fa-8e0e301e9156	2021-07-27 19:47:56.293577	2021-07-27 19:47:56.293577	Dispatch Core App	Incident created	null	\N	2	'app':3A 'core':2A 'creat':5B 'dispatch':1A 'incid':4B	2021-07-27 19:47:56.305149	2021-07-27 19:47:56.294086	\N	\N	\N	\N	\N
3	bc36af33-865f-4d33-9691-789530899043	2021-07-27 19:47:58.180227	2021-07-27 19:47:58.180227	Dispatch Core App	Kevin Glisson added to incident with Reporter role	null	\N	2	'ad':6B 'app':3A 'core':2A 'dispatch':1A 'glisson':5B 'incid':8B 'kevin':4B 'report':10B 'role':11B	2021-07-27 19:47:58.193746	2021-07-27 19:47:58.180704	\N	\N	\N	\N	\N
4	34596f8e-a2ee-47a7-b07b-fd06b0dff034	2021-07-27 19:47:58.244569	2021-07-27 19:47:58.244569	Dispatch Core App	Kevin Glisson added to incident with Incident Commander role	null	\N	2	'ad':6B 'app':3A 'command':11B 'core':2A 'dispatch':1A 'glisson':5B 'incid':8B,10B 'kevin':4B 'role':12B	2021-07-27 19:47:58.25909	2021-07-27 19:47:58.245143	\N	\N	\N	\N	\N
5	e1c27b93-668f-4515-8211-e5565b7b9cde	2021-07-27 19:47:58.314789	2021-07-27 19:47:58.314789	Dispatch Core App	Kevin Glisson added to incident with Liaison role	null	\N	2	'ad':6B 'app':3A 'core':2A 'dispatch':1A 'glisson':5B 'incid':8B 'kevin':4B 'liaison':10B 'role':11B	2021-07-27 19:47:58.327942	2021-07-27 19:47:58.315231	\N	\N	\N	\N	\N
6	30c0fbee-6f25-4a13-b58e-d709a153e675	2021-07-27 19:47:58.416893	2021-07-27 19:47:58.416893	Dispatch Plugin - Ticket Management	Ticket created	null	\N	2	'creat':6B 'dispatch':1A 'manag':4A 'plugin':2A 'ticket':3A,5B	2021-07-27 19:47:58.435201	2021-07-27 19:47:58.417773	\N	\N	\N	\N	\N
7	113e46da-145f-48f9-8bd5-996e094662bd	2021-07-27 19:48:09.864668	2021-07-27 19:48:09.864668	Google Group Plugin - Participant Group Management	Tactical and notification groups created	null	\N	2	'creat':11B 'googl':1A 'group':2A,5A,10B 'manag':6A 'notif':9B 'particip':4A 'plugin':3A 'tactic':7B	2021-07-27 19:48:09.897076	2021-07-27 19:48:09.866061	\N	\N	\N	\N	\N
8	9e56cb0c-1717-4f98-994c-9b4f719d4be6	2021-07-27 19:48:09.922736	2021-07-27 19:48:09.922736	Dispatch Core App	Tactical and notification groups added to incident	null	\N	2	'ad':8B 'app':3A 'core':2A 'dispatch':1A 'group':7B 'incid':10B 'notif':6B 'tactic':4B	2021-07-27 19:48:09.938657	2021-07-27 19:48:09.924632	\N	\N	\N	\N	\N
9	c4e9010b-4816-4170-8132-230224247474	2021-07-27 19:48:11.60449	2021-07-27 19:48:11.60449	Google Calendar Plugin - Conference Management	Incident conference created	null	\N	2	'calendar':2A 'confer':4A,7B 'creat':8B 'googl':1A 'incid':6B 'manag':5A 'plugin':3A	2021-07-27 19:48:11.626794	2021-07-27 19:48:11.6052	\N	\N	\N	\N	\N
10	390cb9fd-6a65-4e20-bd08-fdabb29575cf	2021-07-27 19:48:11.638431	2021-07-27 19:48:11.638431	Dispatch Core App	Conference added to incident	null	\N	2	'ad':5B 'app':3A 'confer':4B 'core':2A 'dispatch':1A 'incid':7B	2021-07-27 19:48:11.653171	2021-07-27 19:48:11.640634	\N	\N	\N	\N	\N
11	2f72c7e9-dd0b-4012-8a45-f9a14fd2d292	2021-07-27 19:48:12.750551	2021-07-27 19:48:12.750551	Slack Plugin - Conversation Management	Incident conversation created	null	\N	2	'convers':3A,6B 'creat':7B 'incid':5B 'manag':4A 'plugin':2A 'slack':1A	2021-07-27 19:48:12.765715	2021-07-27 19:48:12.751284	\N	\N	\N	\N	\N
12	1a1688bf-6a9d-4dbf-85d8-7a7473ce6bd6	2021-07-27 19:48:12.778119	2021-07-27 19:48:12.778119	Dispatch Core App	Conversation added to incident	null	\N	2	'ad':5B 'app':3A 'convers':4B 'core':2A 'dispatch':1A 'incid':7B	2021-07-27 19:48:12.797313	2021-07-27 19:48:12.780851	\N	\N	\N	\N	\N
13	e466ae85-f69a-4205-88b9-02d38067ae42	2021-07-27 19:48:23.80163	2021-07-27 19:48:23.80163	Dispatch Core App	Incident participants added to incident	null	\N	2	'ad':6B 'app':3A 'core':2A 'dispatch':1A 'incid':4B,8B 'particip':5B	2021-07-27 19:48:23.821511	2021-07-27 19:48:23.802091	\N	\N	\N	\N	\N
14	98872d38-28d8-447b-8959-3e0f0d5ef967	2021-07-27 19:48:23.847811	2021-07-27 19:48:23.847811	Dispatch Core App	Incident notifications sent	null	\N	2	'app':3A 'core':2A 'dispatch':1A 'incid':4B 'notif':5B 'sent':6B	2021-07-27 19:48:23.868016	2021-07-27 19:48:23.848395	\N	\N	\N	\N	\N
28	9bdc350c-17dc-4620-a12f-a7caef66d5b9	2021-07-27 19:53:27.379661	2021-07-27 19:53:27.379661	Dispatch Core App	Incident notifications sent	null	\N	4	'app':3A 'core':2A 'dispatch':1A 'incid':4B 'notif':5B 'sent':6B	2021-07-27 19:53:27.404884	2021-07-27 19:53:27.38054	\N	\N	\N	\N	\N
16	4dbe489a-e720-4c8f-a085-e843d1bf8a44	2021-07-27 19:52:57.762162	2021-07-27 19:52:57.762162	Dispatch Core App	Incident created	null	\N	4	'app':3A 'core':2A 'creat':5B 'dispatch':1A 'incid':4B	2021-07-27 19:52:57.77186	2021-07-27 19:52:57.762571	\N	\N	\N	\N	\N
17	bf3f08c2-3d94-4783-8181-22952bc0323b	2021-07-27 19:52:59.37065	2021-07-27 19:52:59.37065	Dispatch Core App	Kevin Glisson added to incident with Reporter role	null	\N	4	'ad':6B 'app':3A 'core':2A 'dispatch':1A 'glisson':5B 'incid':8B 'kevin':4B 'report':10B 'role':11B	2021-07-27 19:52:59.381702	2021-07-27 19:52:59.371169	\N	\N	\N	\N	\N
18	e9c821c9-4688-459b-b5c3-01d954fb60e5	2021-07-27 19:52:59.426042	2021-07-27 19:52:59.426042	Dispatch Core App	Kevin Glisson added to incident with Incident Commander role	null	\N	4	'ad':6B 'app':3A 'command':11B 'core':2A 'dispatch':1A 'glisson':5B 'incid':8B,10B 'kevin':4B 'role':12B	2021-07-27 19:52:59.4361	2021-07-27 19:52:59.426481	\N	\N	\N	\N	\N
19	b22a5a27-7490-47e5-97df-cee2cdf704ec	2021-07-27 19:52:59.479856	2021-07-27 19:52:59.479856	Dispatch Core App	Kevin Glisson added to incident with Liaison role	null	\N	4	'ad':6B 'app':3A 'core':2A 'dispatch':1A 'glisson':5B 'incid':8B 'kevin':4B 'liaison':10B 'role':11B	2021-07-27 19:52:59.489004	2021-07-27 19:52:59.480284	\N	\N	\N	\N	\N
20	b3f9a89e-499d-4b13-9307-c0d3f268cd8f	2021-07-27 19:52:59.531497	2021-07-27 19:52:59.531497	Dispatch Plugin - Ticket Management	Ticket created	null	\N	4	'creat':6B 'dispatch':1A 'manag':4A 'plugin':2A 'ticket':3A,5B	2021-07-27 19:52:59.542519	2021-07-27 19:52:59.531965	\N	\N	\N	\N	\N
21	fdbb0a06-6103-41e0-8928-6717d4d6bdd7	2021-07-27 19:53:10.827467	2021-07-27 19:53:10.827467	Google Group Plugin - Participant Group Management	Tactical and notification groups created	null	\N	4	'creat':11B 'googl':1A 'group':2A,5A,10B 'manag':6A 'notif':9B 'particip':4A 'plugin':3A 'tactic':7B	2021-07-27 19:53:10.837657	2021-07-27 19:53:10.827908	\N	\N	\N	\N	\N
22	f7db3521-a173-4810-bb8d-906fae813385	2021-07-27 19:53:10.852037	2021-07-27 19:53:10.852037	Dispatch Core App	Tactical and notification groups added to incident	null	\N	4	'ad':8B 'app':3A 'core':2A 'dispatch':1A 'group':7B 'incid':10B 'notif':6B 'tactic':4B	2021-07-27 19:53:10.863075	2021-07-27 19:53:10.854458	\N	\N	\N	\N	\N
23	7ee29eb2-eb53-4568-8740-687715fe3244	2021-07-27 19:53:12.690793	2021-07-27 19:53:12.690793	Google Calendar Plugin - Conference Management	Incident conference created	null	\N	4	'calendar':2A 'confer':4A,7B 'creat':8B 'googl':1A 'incid':6B 'manag':5A 'plugin':3A	2021-07-27 19:53:12.735069	2021-07-27 19:53:12.692004	\N	\N	\N	\N	\N
24	5b5c5178-e215-4b03-9a0f-0eecef30764d	2021-07-27 19:53:12.757005	2021-07-27 19:53:12.757005	Dispatch Core App	Conference added to incident	null	\N	4	'ad':5B 'app':3A 'confer':4B 'core':2A 'dispatch':1A 'incid':7B	2021-07-27 19:53:12.789824	2021-07-27 19:53:12.766925	\N	\N	\N	\N	\N
25	4ce347ba-8bb3-43cd-aa89-6925a5abe635	2021-07-27 19:53:13.910679	2021-07-27 19:53:13.910679	Slack Plugin - Conversation Management	Incident conversation created	null	\N	4	'convers':3A,6B 'creat':7B 'incid':5B 'manag':4A 'plugin':2A 'slack':1A	2021-07-27 19:53:13.922948	2021-07-27 19:53:13.911156	\N	\N	\N	\N	\N
26	01f553ab-6076-4b26-885b-d5a663582f36	2021-07-27 19:53:13.931279	2021-07-27 19:53:13.931279	Dispatch Core App	Conversation added to incident	null	\N	4	'ad':5B 'app':3A 'convers':4B 'core':2A 'dispatch':1A 'incid':7B	2021-07-27 19:53:13.944528	2021-07-27 19:53:13.93326	\N	\N	\N	\N	\N
27	fa5a2de2-55d2-4367-bf45-5af76d66c037	2021-07-27 19:53:27.32766	2021-07-27 19:53:27.32766	Dispatch Core App	Incident participants added to incident	null	\N	4	'ad':6B 'app':3A 'core':2A 'dispatch':1A 'incid':4B,8B 'particip':5B	2021-07-27 19:53:27.349556	2021-07-27 19:53:27.328643	\N	\N	\N	\N	\N
31	f33e4fe2-2e34-48a5-b5ce-6381f2cef8be	2021-07-27 20:06:15.278243	2021-07-27 20:06:15.278243	Dispatch Core App	Incident created	null	\N	5	'app':3A 'core':2A 'creat':5B 'dispatch':1A 'incid':4B	2021-07-27 20:06:15.312985	2021-07-27 20:06:15.27966	\N	\N	\N	\N	\N
39	c9635f42-89a6-40a4-9d3f-21d973bbe30c	2021-07-27 20:06:30.176489	2021-07-27 20:06:30.176489	Dispatch Core App	Conference added to incident	null	\N	5	'ad':5B 'app':3A 'confer':4B 'core':2A 'dispatch':1A 'incid':7B	2021-07-27 20:06:30.194772	2021-07-27 20:06:30.178632	\N	\N	\N	\N	\N
30	99528494-bd9c-47e2-af62-e2a9fa8cfee2	2021-07-27 19:54:05.78089	2021-07-27 19:54:05.78089	Incident Participant	Kevin Glisson marked the incident as Stable	null	2	4	'glisson':4B 'incid':1A,7B 'kevin':3B 'mark':5B 'particip':2A 'stabl':9B	2021-07-27 19:54:05.799518	2021-07-27 19:54:05.781404	\N	\N	\N	\N	\N
32	d1fa6a89-2ba9-4d15-89c1-253abf63a3a2	2021-07-27 20:06:16.908774	2021-07-27 20:06:16.908774	Dispatch Core App	Kevin Glisson added to incident with Reporter role	null	\N	5	'ad':6B 'app':3A 'core':2A 'dispatch':1A 'glisson':5B 'incid':8B 'kevin':4B 'report':10B 'role':11B	2021-07-27 20:06:16.922622	2021-07-27 20:06:16.909275	\N	\N	\N	\N	\N
36	f624f934-1d41-474a-8f7b-bba918465582	2021-07-27 20:06:28.35038	2021-07-27 20:06:28.35038	Google Group Plugin - Participant Group Management	Tactical and notification groups created	null	\N	5	'creat':11B 'googl':1A 'group':2A,5A,10B 'manag':6A 'notif':9B 'particip':4A 'plugin':3A 'tactic':7B	2021-07-27 20:06:28.363617	2021-07-27 20:06:28.350863	\N	\N	\N	\N	\N
42	aff9ebed-f588-42c9-8cde-dcf3c2231561	2021-07-27 20:06:41.583368	2021-07-27 20:06:41.583368	Dispatch Core App	Incident participants added to incident	null	\N	5	'ad':6B 'app':3A 'core':2A 'dispatch':1A 'incid':4B,8B 'particip':5B	2021-07-27 20:06:41.595314	2021-07-27 20:06:41.58404	\N	\N	\N	\N	\N
49	ff5df909-ed07-47bb-9120-3127856f73ad	2021-07-27 20:11:43.928812	2021-07-27 20:11:43.928812	Google Group Plugin - Participant Group Management	Tactical and notification groups created	null	\N	6	'creat':11B 'googl':1A 'group':2A,5A,10B 'manag':6A 'notif':9B 'particip':4A 'plugin':3A 'tactic':7B	2021-07-27 20:11:43.942367	2021-07-27 20:11:43.929272	\N	\N	\N	\N	\N
50	52e93cc0-1d00-42c5-8e98-6ab7f9775578	2021-07-27 20:11:43.966374	2021-07-27 20:11:43.966374	Dispatch Core App	Tactical and notification groups added to incident	null	\N	6	'ad':8B 'app':3A 'core':2A 'dispatch':1A 'group':7B 'incid':10B 'notif':6B 'tactic':4B	2021-07-27 20:11:43.983846	2021-07-27 20:11:43.971549	\N	\N	\N	\N	\N
52	ebf60d7f-5740-4fb9-a55f-195b1f995eb6	2021-07-27 20:11:45.396347	2021-07-27 20:11:45.396347	Dispatch Core App	Documents added to incident	null	\N	6	'ad':5B 'app':3A 'core':2A 'dispatch':1A 'document':4B 'incid':7B	2021-07-27 20:11:45.410134	2021-07-27 20:11:45.396813	\N	\N	\N	\N	\N
54	da58b6e3-05bb-407e-8c4f-bead96ea7564	2021-07-27 20:11:47.206694	2021-07-27 20:11:47.206694	Dispatch Core App	Conference added to incident	null	\N	6	'ad':5B 'app':3A 'confer':4B 'core':2A 'dispatch':1A 'incid':7B	2021-07-27 20:11:47.221122	2021-07-27 20:11:47.208661	\N	\N	\N	\N	\N
57	2f5d5c41-13e7-4e6a-ab03-40b67b62faba	2021-07-27 20:11:58.989198	2021-07-27 20:11:58.989198	Dispatch Core App	Incident participants added to incident	null	\N	6	'ad':6B 'app':3A 'core':2A 'dispatch':1A 'incid':4B,8B 'particip':5B	2021-07-27 20:11:59.001975	2021-07-27 20:11:58.989674	\N	\N	\N	\N	\N
33	4dd9a5d8-4bad-4b1c-a3ac-27dafc162394	2021-07-27 20:06:16.987165	2021-07-27 20:06:16.987165	Dispatch Core App	Kevin Glisson added to incident with Incident Commander role	null	\N	5	'ad':6B 'app':3A 'command':11B 'core':2A 'dispatch':1A 'glisson':5B 'incid':8B,10B 'kevin':4B 'role':12B	2021-07-27 20:06:17.002968	2021-07-27 20:06:16.987704	\N	\N	\N	\N	\N
34	af3eff3c-0342-4aa7-a7ca-23a80dc0fff2	2021-07-27 20:06:17.051194	2021-07-27 20:06:17.051194	Dispatch Core App	Kevin Glisson added to incident with Liaison role	null	\N	5	'ad':6B 'app':3A 'core':2A 'dispatch':1A 'glisson':5B 'incid':8B 'kevin':4B 'liaison':10B 'role':11B	2021-07-27 20:06:17.062652	2021-07-27 20:06:17.051675	\N	\N	\N	\N	\N
35	6ee1463f-f308-4992-b479-b3b2b54b44e9	2021-07-27 20:06:17.115146	2021-07-27 20:06:17.115146	Dispatch Plugin - Ticket Management	Ticket created	null	\N	5	'creat':6B 'dispatch':1A 'manag':4A 'plugin':2A 'ticket':3A,5B	2021-07-27 20:06:17.131931	2021-07-27 20:06:17.11566	\N	\N	\N	\N	\N
37	5c846eae-e681-402d-9c7e-8dc0e359c7d3	2021-07-27 20:06:28.38158	2021-07-27 20:06:28.38158	Dispatch Core App	Tactical and notification groups added to incident	null	\N	5	'ad':8B 'app':3A 'core':2A 'dispatch':1A 'group':7B 'incid':10B 'notif':6B 'tactic':4B	2021-07-27 20:06:28.395437	2021-07-27 20:06:28.383165	\N	\N	\N	\N	\N
38	db45a35e-93ec-461d-a9b3-ebc4e075d081	2021-07-27 20:06:30.137656	2021-07-27 20:06:30.137656	Google Calendar Plugin - Conference Management	Incident conference created	null	\N	5	'calendar':2A 'confer':4A,7B 'creat':8B 'googl':1A 'incid':6B 'manag':5A 'plugin':3A	2021-07-27 20:06:30.166434	2021-07-27 20:06:30.139734	\N	\N	\N	\N	\N
40	9e1d954c-7668-4faf-a95a-e25ea4a82e09	2021-07-27 20:06:31.264981	2021-07-27 20:06:31.264981	Slack Plugin - Conversation Management	Incident conversation created	null	\N	5	'convers':3A,6B 'creat':7B 'incid':5B 'manag':4A 'plugin':2A 'slack':1A	2021-07-27 20:06:31.280714	2021-07-27 20:06:31.26551	\N	\N	\N	\N	\N
41	83288834-75cb-4e44-8be8-cc62347894de	2021-07-27 20:06:31.290579	2021-07-27 20:06:31.290579	Dispatch Core App	Conversation added to incident	null	\N	5	'ad':5B 'app':3A 'convers':4B 'core':2A 'dispatch':1A 'incid':7B	2021-07-27 20:06:31.304529	2021-07-27 20:06:31.29202	\N	\N	\N	\N	\N
43	0ba2f55e-ec9b-4f9e-95e4-68b0f50c8445	2021-07-27 20:06:41.611774	2021-07-27 20:06:41.611774	Dispatch Core App	Incident notifications sent	null	\N	5	'app':3A 'core':2A 'dispatch':1A 'incid':4B 'notif':5B 'sent':6B	2021-07-27 20:06:41.627956	2021-07-27 20:06:41.612213	\N	\N	\N	\N	\N
44	74fddbad-1c2e-4620-aab4-5bc341b19fd2	2021-07-27 20:11:30.531955	2021-07-27 20:11:30.531955	Dispatch Core App	Incident created	null	\N	6	'app':3A 'core':2A 'creat':5B 'dispatch':1A 'incid':4B	2021-07-27 20:11:30.543425	2021-07-27 20:11:30.532627	\N	\N	\N	\N	\N
45	f7ab4553-0c76-4f03-b0d9-fe6171e02cb8	2021-07-27 20:11:32.374781	2021-07-27 20:11:32.374781	Dispatch Core App	Kevin Glisson added to incident with Reporter role	null	\N	6	'ad':6B 'app':3A 'core':2A 'dispatch':1A 'glisson':5B 'incid':8B 'kevin':4B 'report':10B 'role':11B	2021-07-27 20:11:32.3914	2021-07-27 20:11:32.375392	\N	\N	\N	\N	\N
46	a5367169-cee2-4070-8acd-e25b586164b0	2021-07-27 20:11:32.452052	2021-07-27 20:11:32.452052	Dispatch Core App	Kevin Glisson added to incident with Incident Commander role	null	\N	6	'ad':6B 'app':3A 'command':11B 'core':2A 'dispatch':1A 'glisson':5B 'incid':8B,10B 'kevin':4B 'role':12B	2021-07-27 20:11:32.467419	2021-07-27 20:11:32.452485	\N	\N	\N	\N	\N
47	572417cc-ecbc-426a-a28c-48eda55cc560	2021-07-27 20:11:32.514367	2021-07-27 20:11:32.514367	Dispatch Core App	Kevin Glisson added to incident with Liaison role	null	\N	6	'ad':6B 'app':3A 'core':2A 'dispatch':1A 'glisson':5B 'incid':8B 'kevin':4B 'liaison':10B 'role':11B	2021-07-27 20:11:32.527335	2021-07-27 20:11:32.514892	\N	\N	\N	\N	\N
48	7ae8bd56-d996-4da2-9f0c-68f11c970661	2021-07-27 20:11:32.600598	2021-07-27 20:11:32.600598	Dispatch Plugin - Ticket Management	Ticket created	null	\N	6	'creat':6B 'dispatch':1A 'manag':4A 'plugin':2A 'ticket':3A,5B	2021-07-27 20:11:32.616295	2021-07-27 20:11:32.601402	\N	\N	\N	\N	\N
51	f2d13f13-2236-4408-a242-50ab2a714730	2021-07-27 20:11:45.348881	2021-07-27 20:11:45.348881	Dispatch Core App	Creation of incident storage failed. Reason: Request failed. Errors: {'error': {'errors': [{'domain': 'global', 'reason': 'notFound', 'message': 'File not found: 1rxGkxQFdKxtwEKN-p-k5Fe8JC6f5uNg8.', 'locationType': 'parameter', 'location': 'fileId'}], 'code': 404, 'message': 'File not found: 1rxGkxQFdKxtwEKN-p-k5Fe8JC6f5uNg8.'}}	null	\N	6	'1rxgkxqfdkxtwekn':24B,38B '1rxgkxqfdkxtwekn-p-k5fe8jc6f5ung8':23B,37B '404':32B 'app':3A 'code':31B 'core':2A 'creation':4B 'dispatch':1A 'domain':15B 'error':12B,13B,14B 'fail':8B,11B 'file':20B,34B 'fileid':30B 'found':22B,36B 'global':16B 'incid':6B 'k5fe8jc6f5ung8':26B,40B 'locat':29B 'locationtyp':27B 'messag':19B,33B 'notfound':18B 'p':25B,39B 'paramet':28B 'reason':9B,17B 'request':10B 'storag':7B	2021-07-27 20:11:45.382849	2021-07-27 20:11:45.350277	\N	\N	\N	\N	\N
53	0fad1b80-d626-4c97-b535-dfdf0098485e	2021-07-27 20:11:47.168067	2021-07-27 20:11:47.168067	Google Calendar Plugin - Conference Management	Incident conference created	null	\N	6	'calendar':2A 'confer':4A,7B 'creat':8B 'googl':1A 'incid':6B 'manag':5A 'plugin':3A	2021-07-27 20:11:47.1984	2021-07-27 20:11:47.168696	\N	\N	\N	\N	\N
55	6c0b289e-5dff-470a-aed7-0caf9405c082	2021-07-27 20:11:48.26168	2021-07-27 20:11:48.26168	Slack Plugin - Conversation Management	Incident conversation created	null	\N	6	'convers':3A,6B 'creat':7B 'incid':5B 'manag':4A 'plugin':2A 'slack':1A	2021-07-27 20:11:48.278603	2021-07-27 20:11:48.26263	\N	\N	\N	\N	\N
56	6fe13da1-de96-41dd-ba9a-29a752060b46	2021-07-27 20:11:48.28756	2021-07-27 20:11:48.28756	Dispatch Core App	Conversation added to incident	null	\N	6	'ad':5B 'app':3A 'convers':4B 'core':2A 'dispatch':1A 'incid':7B	2021-07-27 20:11:48.307412	2021-07-27 20:11:48.290557	\N	\N	\N	\N	\N
58	d66ec104-af72-46df-80a8-2b32a6fa8944	2021-07-27 20:11:59.021607	2021-07-27 20:11:59.021607	Dispatch Core App	Incident notifications sent	null	\N	6	'app':3A 'core':2A 'dispatch':1A 'incid':4B 'notif':5B 'sent':6B	2021-07-27 20:11:59.04991	2021-07-27 20:11:59.022365	\N	\N	\N	\N	\N
59	7e011a9d-9bb9-4770-b5e3-1a21197e60c2	2021-07-28 17:13:49.192243	2021-07-28 17:13:49.192243	Dispatch Core App	New incident task created by Kevin Glisson	{"weblink": null}	\N	4	'app':3A 'core':2A 'creat':7B 'dispatch':1A 'glisson':10B 'incid':5B 'kevin':9B 'new':4B 'task':6B	2021-07-28 17:13:49.218153	2021-07-28 17:13:49.199624	\N	\N	\N	\N	\N
60	2627886d-5466-47d8-a702-6596a17561a8	2024-02-04 02:51:26.185354	2024-02-04 02:51:26.185354	Dispatch Core App	Incident created	{"title": "Incident Test Created by Playwright", "description": "Test description created by Playwright", "type": "Denial of Service", "severity": "Undetermined", "priority": "Low", "status": "Active", "visibility": "Open"}	\N	7	'app':3A 'core':2A 'creat':5B 'dispatch':1A 'incid':4B	2024-02-04 02:51:26.366892	2024-02-04 02:51:26.190379	\N	\N	Other	\N	t
61	5501e170-a4a6-4c29-a582-9d8e6367c35b	2024-02-04 02:51:26.752647	2024-02-04 02:51:26.752647	Dispatch Core App	3p1t6@example.com added to incident with Reporter role	null	\N	7	'3p1t6@example.com':4B 'ad':5B 'app':3A 'core':2A 'dispatch':1A 'incid':7B 'report':9B 'role':10B	2024-02-04 02:51:26.940241	2024-02-04 02:51:26.753164	\N	\N	Participant updated		f
62	c1baff75-d46a-4cae-a793-9dab11d749e1	2024-02-04 02:51:27.112502	2024-02-04 02:51:27.112502	Dispatch Core App	3p1t6@example.com added to incident with Incident Commander role	null	\N	7	'3p1t6@example.com':4B 'ad':5B 'app':3A 'command':10B 'core':2A 'dispatch':1A 'incid':7B,9B 'role':11B	2024-02-04 02:51:27.222527	2024-02-04 02:51:27.113162	\N	\N	Participant updated		f
\.


--
-- Data for Name: feedback; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.feedback (id, rating, feedback, incident_id, participant_id, updated_at, created_at, search_vector) FROM stdin;
\.


--
-- Data for Name: forms; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.forms (id, form_data, created_at, updated_at, status, attorney_status, attorney_questions, attorney_analysis, creator_id, incident_id, form_type_id, project_id) FROM stdin;
\.


--
-- Data for Name: forms_type; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.forms_type (id, name, description, enabled, created_at, updated_at, form_schema, creator_id, project_id, service_id) FROM stdin;
\.


--
-- Data for Name: group; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default."group" (resource_type, resource_id, weblink, id, name, email, incident_id, created_at, updated_at, case_id) FROM stdin;
google-group-participant-tactical-group	0111kx3o0n6znh5	https://groups.google.com/a/example.com/forum/#!forum/dispatch-default-default-2	1	dispatch-default-default-2	dispatch-default-default-2@example.com	2	2021-07-27 19:48:09.907744	2021-07-27 19:48:09.916194	\N
google-group-participant-notifications-group	04i7ojhp1ydcj8x	https://groups.google.com/a/example.com/forum/#!forum/dispatch-default-default-2-notifications	2	dispatch-default-default-2-notifications	dispatch-default-default-2-notifications@example.com	2	2021-07-27 19:48:09.919293	2021-07-27 19:48:09.925189	\N
google-group-participant-tactical-group	00upglbi47ox6z2	https://groups.google.com/a/example.com/forum/#!forum/dispatch-default-default-4	3	dispatch-default-default-4	dispatch-default-default-4@example.com	4	2021-07-27 19:53:10.84312	2021-07-27 19:53:10.847155	\N
google-group-participant-notifications-group	01hmsyys2y5b5yj	https://groups.google.com/a/example.com/forum/#!forum/dispatch-default-default-4-notifications	4	dispatch-default-default-4-notifications	dispatch-default-default-4-notifications@example.com	4	2021-07-27 19:53:10.849202	2021-07-27 19:53:10.853237	\N
google-group-participant-tactical-group	01y810tw26t63a7	https://groups.google.com/a/example.com/forum/#!forum/dispatch-default-default-5	5	dispatch-default-default-5	dispatch-default-default-5@example.com	5	2021-07-27 20:06:28.369641	2021-07-27 20:06:28.375495	\N
google-group-participant-notifications-group	03ep43zb2vu3nwi	https://groups.google.com/a/example.com/forum/#!forum/dispatch-default-default-5-notifications	6	dispatch-default-default-5-notifications	dispatch-default-default-5-notifications@example.com	5	2021-07-27 20:06:28.378263	2021-07-27 20:06:28.383669	\N
google-group-participant-tactical-group	0184mhaj24q9vjf	https://groups.google.com/a/example.com/forum/#!forum/dispatch-default-default-6	7	dispatch-default-default-6	dispatch-default-default-6@example.com	6	2021-07-27 20:11:43.951947	2021-07-27 20:11:43.958212	\N
google-group-participant-notifications-group	04k668n30umn23k	https://groups.google.com/a/example.com/forum/#!forum/dispatch-default-default-6-notifications	8	dispatch-default-default-6-notifications	dispatch-default-default-6-notifications@example.com	6	2021-07-27 20:11:43.962011	2021-07-27 20:11:43.968823	\N
\.


--
-- Data for Name: incident; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.incident (id, name, title, description, status, visibility, reported_at, stable_at, closed_at, search_vector, incident_priority_id, incident_type_id, duplicate_id, project_id, created_at, updated_at, resolution, participants_team, participants_location, commanders_location, reporters_location, commander_id, reporter_id, liaison_id, scribe_id, incident_document_id, incident_review_document_id, tactical_group_id, notifications_group_id, incident_severity_id, delay_executive_report_reminder, delay_tactical_report_reminder, cost_model_id) FROM stdin;
2	dispatch-default-default-2	This is just a test	A very bad situation	Active	Open	2021-07-27 19:47:56.28659	\N	\N	'2':14A 'bad':8C 'default':12A,13A 'dispatch':11A 'dispatch-default-default':10A 'situat':9C 'test':5B	3	3	\N	1	2021-07-27 19:47:56.286601	2021-07-27 19:48:23.867097	Description of the actions taken to resolve the incident.	Unknown	America/Los_Angeles	America/Los_Angeles	America/Los_Angeles	1	1	1	\N	\N	\N	1	2	1	\N	\N	\N
4	dispatch-default-default-4	Heartbleed	Sad PKI noises	Stable	Open	2021-07-27 19:52:57.757214	2021-07-27 19:54:03.96021	\N	'4':9A 'default':7A,8A 'dispatch':6A 'dispatch-default-default':5A 'heartble':1B 'nois':4C 'pki':3C 'sad':2C	1	1	\N	1	2021-07-27 19:52:57.757221	2021-07-28 17:13:49.216785	Description of the actions taken to resolve the incident.	Unknown	America/Los_Angeles	America/Los_Angeles	America/Los_Angeles	2	2	2	\N	\N	\N	3	4	1	\N	\N	\N
5	dispatch-default-default-5	Solarwinds	More like a solar tornado.	Active	Open	2021-07-27 20:06:15.252697	\N	\N	'5':11A 'default':9A,10A 'dispatch':8A 'dispatch-default-default':7A 'like':3C 'solar':5C 'solarwind':1B 'tornado':6C	2	1	\N	1	2021-07-27 20:06:15.252705	2021-07-27 20:06:41.627061	Description of the actions taken to resolve the incident.	Unknown	America/Los_Angeles	America/Los_Angeles	America/Los_Angeles	3	3	3	\N	\N	\N	5	6	1	\N	\N	\N
6	dispatch-default-default-6	Kaseya	Those backups are good right?	Active	Open	2021-07-27 20:11:30.525883	\N	\N	'6':11A 'backup':3C 'default':9A,10A 'dispatch':8A 'dispatch-default-default':7A 'good':5C 'kaseya':1B 'right':6C	3	1	\N	1	2021-07-27 20:11:30.525893	2021-07-27 20:11:59.048666	Description of the actions taken to resolve the incident.	Unknown	America/Los_Angeles	America/Los_Angeles	America/Los_Angeles	4	4	4	\N	\N	\N	7	8	1	\N	\N	\N
7	\N	Incident Test Created by Playwright	Test description created by Playwright	Active	Open	2024-02-04 02:51:26.109901	\N	\N	'creat':3B,8C 'descript':7C 'incid':1B 'playwright':5B,10C 'test':2B,6C	3	5	\N	1	2024-02-04 02:51:26.109912	2024-02-04 02:51:27.220352	Description of the actions taken to resolve the incident.	example.com	Unknown	Unknown	Unknown	5	5	\N	\N	\N	\N	\N	\N	1	\N	\N	\N
\.


--
-- Data for Name: incident_cost; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.incident_cost (id, amount, incident_cost_type_id, incident_id, project_id, updated_at, created_at) FROM stdin;
1	100000.00	2	4	1	2021-07-27 19:54:43.777322	2021-07-27 19:54:43.763605
\.


--
-- Data for Name: incident_cost_type; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.incident_cost_type (id, name, description, category, details, "default", editable, search_vector, project_id, updated_at, created_at) FROM stdin;
1	Response Cost	Cost of responding to an incident. Also known as opportunity cost.	Primary	{}	t	f	'also':9B 'cost':2A,3B,13B 'incid':8B 'known':10B 'opportun':12B 'respond':5B 'respons':1A	1	2021-07-27 18:55:42.24452	2021-07-27 18:55:42.244515
3	Litigation Cost	Cost of hiring a third-party legal firm.	Secondary	{}	f	t	'cost':2A,3B 'firm':11B 'hire':5B 'legal':10B 'litig':1A 'parti':9B 'third':8B 'third-parti':7B	1	2021-07-27 18:56:17.401929	2021-07-27 18:56:17.401924
4	Forensics Cost	Cost of hiring a third-party forensics firm.	Secondary	{}	f	t	'cost':2A,3B 'firm':11B 'forens':1A,10B 'hire':5B 'parti':9B 'third':8B 'third-parti':7B	1	2021-07-27 18:56:29.482272	2021-07-27 18:56:29.482268
5	Bug Bounty Payout	Bug Bounty Payout	Secondary	{}	f	t	'bounti':2A,5B 'bug':1A,4B 'payout':3A,6B	1	2021-07-27 18:56:43.117728	2021-07-27 18:56:43.117723
2	Reputational Cost	Cost to the reputation of the company/ brand.	Secondary	{}	f	t	'brand':10B 'compani':9B 'cost':2A,3B 'reput':1A,6B	1	2021-07-27 19:54:43.761785	2021-07-27 18:56:02.427905
\.


--
-- Data for Name: incident_priority; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.incident_priority (id, name, description, page_commander, tactical_report_reminder, executive_report_reminder, enabled, "default", view_order, search_vector, project_id, color) FROM stdin;
1	High	This incident may require your team's full attention 24x7, and should be prioritized over all other work, until the incident is stable. The incident commander will get paged.	f	2	6	t	f	1	'24x7':11 'attent':10 'command':27 'full':9 'get':29 'high':1 'incid':3,22,26 'may':4 'page':30 'priorit':15 'requir':5 'stabl':24 'team':7 'work':19	1	\N
2	Medium	This incident may require your team's full attention during waking hours (Pacific Time), including weekends, until the incident is stable.	f	6	12	t	f	2	'attent':10 'full':9 'hour':13 'incid':3,20 'includ':16 'may':4 'medium':1 'pacif':14 'requir':5 'stabl':22 'team':7 'time':15 'wake':12 'weekend':17	1	\N
3	Low	This incident may require your team's attention during working hours (Pacific Time), until the incident is stable.	f	12	999999	t	t	3	'attent':9 'hour':12 'incid':3,17 'low':1 'may':4 'pacif':13 'requir':5 'stabl':19 'team':7 'time':14 'work':11	1	\N
\.


--
-- Data for Name: incident_role; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.incident_role (id, role, enabled, "order", service_id, individual_id, project_id, updated_at, created_at, engage_next_oncall) FROM stdin;
\.


--
-- Data for Name: incident_role_incident_priority; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.incident_role_incident_priority (incident_role_id, incident_priority_id) FROM stdin;
\.


--
-- Data for Name: incident_role_incident_type; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.incident_role_incident_type (incident_role_id, incident_type_id) FROM stdin;
\.


--
-- Data for Name: incident_role_tag; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.incident_role_tag (incident_role_id, tag_id) FROM stdin;
\.


--
-- Data for Name: incident_severity; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.incident_severity (id, name, description, color, enabled, "default", view_order, search_vector, project_id) FROM stdin;
1	Undetermined	The severity of the incident has not yet been determined.	#9e9e9e	t	t	1	\N	1
\.


--
-- Data for Name: incident_type; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.incident_type (id, name, slug, description, exclude_from_metrics, enabled, "default", visibility, plugin_metadata, incident_template_document_id, executive_template_document_id, review_template_document_id, tracking_template_document_id, commander_service_id, liaison_service_id, search_vector, project_id) FROM stdin;
6	Other	\N	This is a miscellaneous incident.	f	t	f	Open	[]	1	2	3	\N	\N	\N	'incid':6 'involv':7 'misc':2,9 'oth':1,8	1
5	Denial of Service	\N	This is an incident involving a Denial of Service attack on a compute resource or service.	f	t	f	Open	[]	1	2	3	\N	\N	\N	'ddos':1,8 'den':2,9 'incid':6 'involv':7	1
4	Malware	\N	This is an incident involving malware on a host.	f	t	f	Open	[]	1	2	3	\N	\N	\N	'incid':6 'involv':7 'mal':1,8	1
3	Customer Data	\N	This is an incident involving customer data.	f	t	f	Open	[]	1	2	3	\N	\N	\N	'custom':1,8 'data':2,9 'incid':6 'involv':7	1
2	Employee Investigation	\N	This is an employee investigation.	f	t	f	Restricted	[]	1	2	3	\N	\N	\N	'employe':1,6 'investig':2,7	1
1	Vulnerability	\N	This is an incident involving a misconfiguration or vulnerability.	f	t	t	Open	[]	1	2	3	\N	\N	\N	'incid':5 'involv':6 'misconfigur':8 'vulner':1,10	1
\.


--
-- Data for Name: individual_contact; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.individual_contact (is_active, is_external, contact_type, email, company, notes, owner, id, name, mobile_phone, office_phone, title, weblink, external_id, team_contact_id, search_vector, project_id, created_at, updated_at) FROM stdin;
t	f	\N	klibby@hackers.com	NA	\N	\N	1	Kate Libby	\N	\N	\N	\N	\N	\N	'kate':1 'klibby@hackers.com':3 'libbi':2 'na':4	1	2021-07-27 19:20:56.65442	2021-07-27 19:20:56.654425
t	f	\N	kglisson@example.com	\N	\N	\N	2	Kevin Glisson	\N	\N	\N	\N	\N	\N	'glisson':2 'kevin':1 'kglisson@example.com':3	1	2021-07-27 19:47:58.101502	2021-07-27 20:11:32.504414
t	f	\N	3p1t6@example.com	\N	\N	\N	3	3p1t6@example.com	\N	\N	\N		\N	\N	'3p1t6@example.com':1,2	1	2024-02-04 02:51:26.417963	2024-02-04 02:51:27.068243
\.


--
-- Data for Name: monitor; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.monitor (resource_type, resource_id, weblink, id, plugin_instance_id, creator_id, incident_id, enabled, status, created_at, updated_at) FROM stdin;
\.


--
-- Data for Name: notification; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.notification (id, name, description, type, target, enabled, search_vector, project_id, updated_at, created_at, evergreen, evergreen_owner, evergreen_reminder_interval, evergreen_last_reminder_at) FROM stdin;
1	Management	Send incident notifications to management but don't involve them directly.	email	c-suite@example.com	t	'direct':12 'incid':3 'involv':10 'manag':1,6 'notif':4 'send':2	1	2021-07-28 17:18:18.486176	2021-07-28 17:18:18.486182	\N	\N	\N	\N
\.


--
-- Data for Name: participant; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.participant (id, team, department, location, added_by_id, added_reason, after_hours_notification, service_id, incident_id, individual_contact_id, user_conversation_id, case_id) FROM stdin;
1	Unknown	Unknown	America/Los_Angeles	\N	\N	f	\N	2	2	\N	\N
2	Unknown	Unknown	America/Los_Angeles	\N	\N	f	\N	4	2	\N	\N
3	Unknown	Unknown	America/Los_Angeles	\N	\N	f	\N	5	2	\N	\N
4	Unknown	Unknown	America/Los_Angeles	\N	\N	f	\N	6	2	\N	\N
5	example.com	Unknown	Unknown	\N	\N	f	\N	7	3	\N	\N
\.


--
-- Data for Name: participant_activity; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.participant_activity (id, plugin_event_id, started_at, ended_at, participant_id, incident_id) FROM stdin;
\.


--
-- Data for Name: participant_role; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.participant_role (id, assumed_at, renounced_at, role, participant_id, activity) FROM stdin;
1	2021-07-27 19:47:58.14504	\N	Reporter	1	1
2	2021-07-27 19:47:58.220483	\N	Incident Commander	1	1
3	2021-07-27 19:47:58.289651	\N	Liaison	1	1
4	2021-07-27 19:52:59.350907	\N	Reporter	2	1
5	2021-07-27 19:52:59.409156	\N	Incident Commander	2	1
6	2021-07-27 19:52:59.458909	\N	Liaison	2	1
7	2021-07-27 20:06:16.879349	\N	Reporter	3	1
8	2021-07-27 20:06:16.962784	\N	Incident Commander	3	1
9	2021-07-27 20:06:17.032505	\N	Liaison	3	1
10	2021-07-27 20:11:32.314039	\N	Reporter	4	1
11	2021-07-27 20:11:32.427753	\N	Incident Commander	4	1
12	2021-07-27 20:11:32.491482	\N	Liaison	4	1
13	2024-02-04 02:51:26.570736	\N	Reporter	5	0
14	2024-02-04 02:51:27.008425	\N	Incident Commander	5	0
\.


--
-- Data for Name: plugin_instance; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.plugin_instance (id, enabled, configuration, plugin_id, project_id, _configuration) FROM stdin;
1	t	{}	2	1	\N
3	t	{}	4	1	\N
4	t	{}	7	1	\N
9	\N	{}	16	1	\N
11	f	{}	19	1	\N
8	f	{}	18	1	\N
7	f	{}	13	1	\N
6	f	{}	12	1	\N
14	f	{}	10	1	\N
13	f	{}	9	1	\N
12	f	{}	8	1	\N
5	t	{}	6	1	\N
2	t	{}	3	1	\N
\.


--
-- Data for Name: project; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.project (id, name, description, "default", color, organization_id, search_vector, annual_employee_cost, business_year_hours, owner_email, owner_conversation, send_daily_reports, stable_priority_id) FROM stdin;
1	default	Default dispatch project.	t	\N	1	'default':1A,2B 'dispatch':3B 'project':4B	650000	2080	team@acme.com	\N	\N	\N
\.


--
-- Data for Name: query; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.query (id, name, description, text, language, source_id, search_vector, project_id, created_at, updated_at) FROM stdin;
1	User Logins Last 30days	This query queries the login data source for logins in the last 30days.	select * from logins where date > current_date - interval '10' day	sql	1	'30days':4 'last':3 'login':2 'user':1	1	2022-03-04 18:28:08.843309	2022-03-04 18:28:08.843312
\.


--
-- Data for Name: recommendation; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.recommendation (id, incident_id, created_at) FROM stdin;
1	\N	2021-07-27 19:48:23.79265
2	\N	2021-07-27 19:53:27.31726
3	\N	2021-07-27 20:06:41.560026
4	\N	2021-07-27 20:11:58.983752
\.


--
-- Data for Name: recommendation_match; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.recommendation_match (id, recommendation_id, correct, resource_type, resource_state) FROM stdin;
\.


--
-- Data for Name: report; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.report (id, created_at, details, details_raw, type, incident_id, participant_id, search_vector) FROM stdin;
\.


--
-- Data for Name: search_filter; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.search_filter (id, name, description, expression, creator_id, search_vector, project_id, subject, enabled, updated_at, created_at) FROM stdin;
1	Ops Incidents	Any incident Ops wants to know about.	[{"or": [{"model": "IncidentType", "field": "id", "op": "==", "value": 3}, {"model": "IncidentType", "field": "id", "op": "==", "value": 1}, {"model": "IncidentType", "field": "id", "op": "==", "value": 2}]}]	1	'incid':2A,4B 'know':8B 'op':1A,5B 'want':6B	1	incident	\N	\N	\N
2	High Priority	Only matches on high-priority incidents.	[{"or": [{"model": "IncidentPriority", "field": "id", "op": "==", "value": 1}]}]	1	'high':1A,7B 'high-prior':6B 'incid':9B 'match':4B 'prioriti':2A,8B	1	incident	\N	\N	\N
\.


--
-- Data for Name: service; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.service (id, is_active, name, type, description, external_id, search_vector, project_id, updated_at, created_at, evergreen, evergreen_owner, evergreen_reminder_interval, evergreen_last_reminder_at, health_metrics) FROM stdin;
\.


--
-- Data for Name: service_feedback; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.service_feedback (rating, feedback, id, hours, shift_start_at, shift_end_at, schedule, individual_contact_id, search_vector, updated_at, created_at, project_id) FROM stdin;
\.


--
-- Data for Name: service_feedback_reminder; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.service_feedback_reminder (id, reminder_at, schedule_id, schedule_name, shift_end_at, individual_contact_id, project_id, created_at, updated_at) FROM stdin;
\.


--
-- Data for Name: signal; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.signal (id, name, owner, description, external_url, external_id, source_id, variant, case_type_id, case_priority_id, search_vector, project_id, created_at, updated_at, loopin_signal_identity, enabled, create_case, conversation_target, oncall_service_id) FROM stdin;
\.


--
-- Data for Name: signal_engagement; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.signal_engagement (id, name, description, message, require_mfa, entity_type_id, creator_id, search_vector, project_id, created_at, updated_at) FROM stdin;
\.


--
-- Data for Name: signal_filter; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.signal_filter (evergreen, evergreen_owner, evergreen_reminder_interval, evergreen_last_reminder_at, id, name, description, expression, mode, action, expiration, "window", creator_id, search_vector, project_id, created_at, updated_at) FROM stdin;
\.


--
-- Data for Name: signal_instance; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.signal_instance (id, case_id, signal_id, raw, project_id, updated_at, created_at, filter_action, engagement_thread_ts, case_type_id, case_priority_id, canary) FROM stdin;
\.


--
-- Data for Name: source; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.source (id, name, description, cost, data_last_loaded_at, daily_volume, aggregated, retention, size, delay, environment, external_id, documentation, sampling_rate, source_schema, links, source_type_id, source_status_id, source_environment_id, source_data_format_id, source_transport_id, owner_id, search_vector, project_id, created_at, updated_at) FROM stdin;
1	Login Data	This source contains login data.	\N	\N	\N	f	365	\N	\N	\N	\N		95	\N	[]	2	1	1	1	1	\N	'data':2 'login':1	1	2022-03-04 18:26:00.627753	2022-03-04 18:28:08.840527
\.


--
-- Data for Name: source_data_format; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.source_data_format (id, name, description, search_vector, project_id) FROM stdin;
1	JSON	The data for this source is in a JSON format.	'json':1	1
2	CSV	The data from this source is in a CSV format.	'csv':1	1
3	Syslog	The data from this source is in the Syslog format.	'syslog':1	1
\.


--
-- Data for Name: source_environment; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.source_environment (id, name, description, search_vector, project_id) FROM stdin;
1	Production	This data source contains data from the production environment.	'product':1	1
2	Staging	This data source contains information from the staging environment.	'stage':1	1
\.


--
-- Data for Name: source_status; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.source_status (id, name, description, search_vector, project_id) FROM stdin;
1	Production	This data source is fully supported and can be used for investigations.	'product':1	1
2	Testing	This data source is not yet production ready.	'test':1	1
3	Deprecated	This data source is no longer in active use and is being phased out.	'deprec':1	1
\.


--
-- Data for Name: source_transport; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.source_transport (id, name, description, search_vector, project_id) FROM stdin;
1	REST API	We obtain the data for this source via REST API.	'api':2 'rest':1	1
2	Syslog	We obtain data for this source via a Syslog collector.	'syslog':1	1
3	S3	We obtain the data for this source via an S3 bucket.	's3':1	1
\.


--
-- Data for Name: source_type; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.source_type (id, name, description, search_vector, project_id) FROM stdin;
1	Hive	This data source stores data in Hive.	'hive':1	1
2	ElasticSearch	This data source is stored in ElasticSearch	'elasticsearch':1	1
\.


--
-- Data for Name: storage; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.storage (resource_type, resource_id, weblink, id, incident_id, created_at, updated_at, case_id) FROM stdin;
\.


--
-- Data for Name: tag; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.tag (id, name, description, uri, source, discoverable, tag_type_id, search_vector, project_id, created_at, updated_at, external_id) FROM stdin;
1	ExampleTag	Generic tag	https://example.com	dispatch	t	1	'exampletag':1 'generic':2 'tag':3	1	2021-07-27 19:00:23.285171	2024-02-04 02:51:26.063006	\N
\.


--
-- Data for Name: tag_type; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.tag_type (id, name, description, search_vector, project_id, created_at, updated_at, exclusive, discoverable_case, discoverable_incident, discoverable_query, discoverable_signal, discoverable_source, color, icon) FROM stdin;
2	email	Represents an email address.	'email':1	1	2021-07-27 18:59:15.242081	2021-07-27 18:59:15.242077	\N	t	t	t	t	t	\N	\N
3	domain-name	Represents a domain name.	'domain':2 'domain-nam':1 'name':3	1	2021-07-27 18:59:27.697621	2021-07-27 18:59:27.697617	\N	t	t	t	t	t	\N	\N
4	handle	Represents an internet handle.	'handl':1	1	2021-07-27 18:59:49.885602	2021-07-27 18:59:49.885596	\N	t	t	t	t	t	\N	\N
1	default	Default dispatch tag type.	'default':1	1	2021-07-27 18:59:02.975601	2021-07-27 19:00:23.284092	\N	t	t	t	t	t	\N	\N
\.


--
-- Data for Name: task; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.task (resource_type, resource_id, weblink, id, resolved_at, resolve_by, last_reminder_at, creator_id, owner_id, incident_id, description, source, priority, status, reminders, search_vector, created_at, updated_at) FROM stdin;
google-docs-incident-task	\N	\N	1	\N	2021-07-30 17:13:17	\N	2	2	4	This is a task related to the resolution of the incident.	Incident	Low	Open	t	'incid':11 'relat':5 'resolut':8 'task':4	2021-07-28 17:13:49.20327	2021-07-28 17:13:49.203262
\.


--
-- Data for Name: task_assignees; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.task_assignees (participant_id, task_id) FROM stdin;
2	1
\.


--
-- Data for Name: team_contact; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.team_contact (is_active, is_external, contact_type, email, company, owner, id, name, notes, search_vector, project_id, created_at, updated_at, evergreen, evergreen_owner, evergreen_reminder_interval, evergreen_last_reminder_at) FROM stdin;
t	f	\N	ops@example.com	ACME	\N	1	Ops	\N	'op':1A	1	2021-07-28 17:17:02.022641	2021-07-28 17:17:02.022636	\N	\N	\N	\N
\.


--
-- Data for Name: team_contact_incident; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.team_contact_incident (incident_id, team_contact_id) FROM stdin;
\.


--
-- Data for Name: term; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.term (id, text, discoverable, search_vector, project_id) FROM stdin;
1	PEBKAC	t	'pebkac':1	1
\.


--
-- Data for Name: ticket; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.ticket (resource_type, resource_id, weblink, id, incident_id, created_at, updated_at, case_id) FROM stdin;
dispatch-ticket	dispatch-default-default-2	http://localhost:8080/default/incidents/dispatch-default-default-2?project=default	1	2	2021-07-27 19:47:58.439443	2021-07-27 19:47:58.44679	\N
dispatch-ticket	dispatch-default-default-4	http://localhost:8080/default/incidents/dispatch-default-default-4?project=default	2	4	2021-07-27 19:52:59.547408	2021-07-27 19:52:59.552802	\N
dispatch-ticket	dispatch-default-default-5	http://localhost:8080/default/incidents/dispatch-default-default-5?project=default	3	5	2021-07-27 20:06:17.136792	2021-07-27 20:06:17.145622	\N
dispatch-ticket	dispatch-default-default-6	http://localhost:8080/default/incidents/dispatch-default-default-6?project=default	4	6	2021-07-27 20:11:32.621112	2021-07-27 20:11:32.629367	\N
\.


--
-- Data for Name: workflow; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.workflow (id, name, description, enabled, parameters, resource_id, plugin_instance_id, search_vector, project_id, updated_at, created_at) FROM stdin;
1	000	\N	t	[]		\N	'000':1	\N	2021-07-27 22:01:04.821315	2021-07-27 22:01:04.82132
2	000	\N	t	[]		\N	'000':1	\N	2021-07-27 22:06:48.180389	2021-07-27 22:06:48.180394
\.


--
-- Data for Name: workflow_incident_priority; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.workflow_incident_priority (incident_priority_id, workflow_id) FROM stdin;
\.


--
-- Data for Name: workflow_incident_type; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.workflow_incident_type (incident_type_id, workflow_id) FROM stdin;
\.


--
-- Data for Name: workflow_instance; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.workflow_instance (resource_type, resource_id, weblink, id, workflow_id, parameters, run_reason, creator_id, incident_id, status, created_at, updated_at, case_id, signal_id) FROM stdin;
\.


--
-- Data for Name: workflow_instance_artifact; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.workflow_instance_artifact (document_id, workflow_instance_id) FROM stdin;
\.


--
-- Data for Name: workflow_term; Type: TABLE DATA; Schema: dispatch_organization_default; Owner: postgres
--

COPY dispatch_organization_default.workflow_term (term_id, workflow_id) FROM stdin;
\.


--
-- Data for Name: alembic_version; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.alembic_version (version_num) FROM stdin;
03f742366750
\.


--
-- Data for Name: assoc_incident_tags; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.assoc_incident_tags (incident_id, tag_id) FROM stdin;
\.


--
-- Data for Name: assoc_incident_terms; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.assoc_incident_terms (incident_id, term_id) FROM stdin;
\.


--
-- Data for Name: assoc_individual_contact_incident_priority; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.assoc_individual_contact_incident_priority (incident_priority_id, individual_contact_id) FROM stdin;
\.


--
-- Data for Name: assoc_individual_contact_incident_type; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.assoc_individual_contact_incident_type (incident_type_id, individual_contact_id) FROM stdin;
\.


--
-- Data for Name: assoc_individual_contact_terms; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.assoc_individual_contact_terms (term_id, individual_contact_id) FROM stdin;
\.


--
-- Data for Name: assoc_notification_filters; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.assoc_notification_filters (notification_id, search_filter_id) FROM stdin;
\.


--
-- Data for Name: conference; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.conference (resource_type, resource_id, weblink, id, conference_id, conference_challenge, incident_id, updated_at, created_at) FROM stdin;
google-calendar-conference	9ak1c5r6jqnsjg838bitpnmcpc	https://meet.google.com/kdt-mqyq-vio	1	9ak1c5r6jqnsjg838bitpnmcpc		1	2020-07-24 18:03:14.384785	2020-07-24 18:03:14.364559
\.


--
-- Data for Name: conversation; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.conversation (resource_type, resource_id, weblink, id, channel_id, incident_id, created_at, updated_at) FROM stdin;
slack-conversation	dispatch-1	https://slack.com/app_redirect?channel=G017915SK2T	1	G017915SK2T	1	2020-07-24 18:03:15.668378	2020-07-24 18:03:15.686849
\.


--
-- Data for Name: definition; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.definition (id, text, source, search_vector) FROM stdin;
\.


--
-- Data for Name: definition_teams; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.definition_teams (definition_id, team_contact_id) FROM stdin;
\.


--
-- Data for Name: definition_terms; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.definition_terms (definition_id, term_id) FROM stdin;
\.


--
-- Data for Name: dispatch_user; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.dispatch_user (id, email, password, role, search_vector, updated_at, created_at) FROM stdin;
1	dispatch@example.com	\\x24326224313224497544303865553955444153726d47417763663834654771354b7a58396170577774447a5754635a586454473753396d333564774b	User	'dispatch@example.com':1	2020-07-24 17:20:08.75133	2020-07-24 17:20:08.751345
\.


--
-- Data for Name: document; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.document (resource_type, resource_id, weblink, id, name, description, report_id, search_vector, incident_id, created_at, updated_at, evergreen, evergreen_last_reminder_at, evergreen_owner, evergreen_reminder_interval) FROM stdin;
\.


--
-- Data for Name: document_incident_priority; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.document_incident_priority (incident_priority_id, document_id) FROM stdin;
\.


--
-- Data for Name: document_incident_type; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.document_incident_type (incident_type_id, document_id) FROM stdin;
\.


--
-- Data for Name: document_terms; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.document_terms (term_id, document_id) FROM stdin;
\.


--
-- Data for Name: event; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.event (id, uuid, started_at, ended_at, source, description, details, individual_id, incident_id, search_vector, created_at, updated_at) FROM stdin;
1	651b295a-991d-4a67-991b-c6de0e4b7611	2020-07-24 18:02:38.251956	2020-07-24 18:02:38.251956	Dispatch Core App	Incident created	null	\N	1	\N	2020-07-24 18:02:38.254379	2020-07-24 18:02:38.338948
4	128f3466-9521-4c89-a3c1-db638328eb57	2020-07-24 18:02:41.168375	2020-07-24 18:02:41.168375	Dispatch Plugin - Participant Resolver	Incident participants resolved	null	\N	1	\N	2020-07-24 18:02:41.168882	2020-07-24 18:02:41.203844
5	c52ea18f-d198-43ab-8533-15dc2d1dddcf	2020-07-24 18:02:41.220688	2020-07-24 18:02:41.220688	Dispatch Core App	Incident participants added to incident	null	\N	1	\N	2020-07-24 18:02:41.221122	2020-07-24 18:02:41.247507
6	8cd9ecd5-a564-41fa-a8eb-cd80706307f1	2020-07-24 18:02:41.294686	2020-07-24 18:02:41.294686	Dispatch Plugin - Ticket Management	External ticket created	null	\N	1	\N	2020-07-24 18:02:41.2951	2020-07-24 18:02:41.319984
7	db9874ef-d192-42db-a549-4534cacc17c2	2020-07-24 18:02:41.350764	2020-07-24 18:02:41.350764	Dispatch Core App	External ticket added to incident	null	\N	1	\N	2020-07-24 18:02:41.3629	2020-07-24 18:02:41.388231
8	7a57ab3f-a4aa-43c2-8c87-7692e16fd9fc	2020-07-24 18:02:52.450317	2020-07-24 18:02:52.450317	Google Group Plugin - Participant Group Management	Tactical and notification groups created	null	\N	1	\N	2020-07-24 18:02:52.451042	2020-07-24 18:02:52.481715
9	86f47430-cb16-42df-8e3b-370e28b1c821	2020-07-24 18:02:52.569473	2020-07-24 18:02:52.569473	Dispatch Core App	Tactical and notification groups added to incident	null	\N	1	\N	2020-07-24 18:02:52.58889	2020-07-24 18:02:52.631047
10	b07f2642-9ff0-4485-b1ae-afad0929630e	2020-07-24 18:02:57.334859	2020-07-24 18:02:57.334859	Dispatch Core App	Storage added to incident	null	\N	1	\N	2020-07-24 18:02:57.343367	2020-07-24 18:02:57.381868
11	bd92b20d-687b-46ea-b60b-bef59beb02fe	2020-07-24 18:03:12.512639	2020-07-24 18:03:12.512639	Google Drive Plugin - Storage Management	Incident investigation document and sheet created	null	\N	1	\N	2020-07-24 18:03:12.513311	2020-07-24 18:03:12.542486
12	2e07c681-7717-4e30-82ca-86256e58d757	2020-07-24 18:03:12.603263	2020-07-24 18:03:12.603263	Dispatch Core App	Documents added to incident	null	\N	1	\N	2020-07-24 18:03:12.612236	2020-07-24 18:03:12.636687
13	4f573dec-e656-4f71-9a06-ac051fff4534	2020-07-24 18:03:14.329539	2020-07-24 18:03:14.329539	Google Calendar Plugin - Conference Management	Incident conference created	null	\N	1	\N	2020-07-24 18:03:14.330012	2020-07-24 18:03:14.355007
14	410d4b98-212a-4e6c-b96a-6f19e52ab154	2020-07-24 18:03:14.37857	2020-07-24 18:03:14.37857	Dispatch Core App	Conference added to incident	null	\N	1	\N	2020-07-24 18:03:14.382644	2020-07-24 18:03:14.417888
15	42c79c7f-6ccc-43e1-b126-b91f08040512	2020-07-24 18:03:15.599083	2020-07-24 18:03:15.599083	Slack Plugin - Conversation Management	Incident conversation created	null	\N	1	\N	2020-07-24 18:03:15.600071	2020-07-24 18:03:15.65274
16	e4056bb2-5adc-48a5-a35a-eb597ed7f7a8	2020-07-24 18:03:15.683537	2020-07-24 18:03:15.683537	Dispatch Core App	Conversation added to incident	null	\N	1	\N	2020-07-24 18:03:15.695182	2020-07-24 18:03:15.731365
17	5e769ad5-d162-42a9-918f-437317ed6a18	2020-07-24 18:03:20.294338	2020-07-24 18:03:20.294338	Dispatch Core App	Incident notifications sent	null	\N	1	\N	2020-07-24 18:03:20.295182	2020-07-24 18:03:20.322527
18	6cc06d03-9749-4143-971d-ce11eb1827db	2020-07-24 18:03:20.5327	2020-07-24 18:03:20.5327	Dispatch Core App	Participants announced and welcome messages sent	null	\N	1	\N	2020-07-24 18:03:20.534064	2020-07-24 18:03:20.565531
2	1c916947-a9cc-4e63-b423-d63e09401653	2020-07-24 18:02:38.78052	2020-07-24 18:02:38.78052	Dispatch Core App	dispatch@example.com added to incident with Reporter role	null	\N	1	\N	2020-07-24 18:02:38.781971	2020-07-24 18:02:39.193046
3	ea043ea7-9f6e-4adb-8305-f2cbd2b7a3a6	2020-07-24 18:02:40.716362	2020-07-24 18:02:40.716362	Dispatch Core App	dispatch@example.com added to incident with Incident Commander role	null	\N	1	\N	2020-07-24 18:02:40.716998	2020-07-24 18:02:40.745702
19	89612d6e-e8c7-43dc-a7c9-7d35170c9ff9	2020-07-24 18:09:16.74069	2020-07-24 18:09:16.74069	Dispatch Core App	dispatch@example.com added to incident with Participant role	null	\N	1	\N	2020-07-24 18:09:16.741116	2020-07-24 18:09:16.766514
21	54cbc6db-e433-4406-8b61-574173995a2a	2020-07-24 18:14:00	2020-07-24 18:14:00	Slack Plugin - Conversation Management	"This is a test event from Slack," said dispatch@example.com	null	1	1	\N	2020-07-24 18:14:24.892976	2020-07-24 18:14:24.93177
20	13c86150-c8d6-4953-aa2e-24889af517b0	2020-07-24 18:11:55.29751	2020-07-24 18:11:55.29751	Incident Participant	dispatch@example.com created a new tactical report	{"conditions": "List of conditions", "actions": "List of actions", "needs": "List of needs"}	1	1	\N	2020-07-24 18:11:55.29797	2020-07-24 18:11:55.345595
\.


--
-- Data for Name: feedback; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.feedback (id, rating, feedback, incident_id, participant_id, updated_at, created_at) FROM stdin;
\.


--
-- Data for Name: group; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."group" (resource_type, resource_id, weblink, id, name, email, incident_id, updated_at, created_at) FROM stdin;
google-group-participant-tactical-group	01y810tw0m3fgry	https://groups.google.com/a/example.com/forum/#!forum/dispatch-1	1	dispatch-1	dispatch-1@example.com	1	2020-07-24 18:02:52.532217	2020-07-24 18:02:52.506384
google-group-participant-notifications-group	02250f4o1gns9xu	https://groups.google.com/a/example.com/forum/#!forum/dispatch-1-notifications	2	dispatch-1-notifications	dispatch-1-notifications@example.com	1	2020-07-24 18:02:52.575776	2020-07-24 18:02:52.542604
\.


--
-- Data for Name: incident; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.incident (id, name, title, description, status, cost, visibility, reported_at, stable_at, closed_at, search_vector, incident_priority_id, incident_type_id, duplicate_id, updated_at, created_at) FROM stdin;
1	dispatch-1	Test incident	This is a test incident	Active	0	Open	2020-07-24 18:02:38.193482	\N	\N	'-1':2 'dispatch':1 'incid':4,9 'test':3,8	2	1	\N	2020-07-24 18:14:24.914404	2020-07-24 18:02:38.193491
\.


--
-- Data for Name: incident_priority; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.incident_priority (id, name, description, page_commander, tactical_report_reminder, executive_report_reminder, "default", view_order, search_vector) FROM stdin;
1	Low	Low priority incident.	f	12	9999	f	3	\N
2	Medium	Medium priority incident.	f	6	12	f	2	\N
3	High	High priority incident.	t	2	6	f	1	\N
\.


--
-- Data for Name: incident_type; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.incident_type (id, name, slug, description, exclude_from_metrics, "default", visibility, plugin_metadata, template_document_id, commander_service_id, search_vector, liaison_service_id) FROM stdin;
1	Vulnerability	\N	This is an incident involving a misconfiguration or vulnerability.	f	f	Open	[]	1	1	'incid':5 'involv':6 'misconfigur':8 'vulner':1,10	\N
\.


--
-- Data for Name: individual_contact; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.individual_contact (is_active, is_external, contact_type, email, company, notes, owner, id, name, mobile_phone, office_phone, title, weblink, team_contact_id, search_vector, created_at, updated_at) FROM stdin;
t	f	\N	dispatch@example.com	\N	\N	\N	1	dispatch@example.com	\N	\N	\N	Unknown	\N	'dispatch@example.com':1	2020-07-24 18:02:38.463871	2020-07-24 18:02:38.667258
\.


--
-- Data for Name: notification; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.notification (id, name, description, type, target, enabled, search_vector, updated_at, created_at) FROM stdin;
\.


--
-- Data for Name: participant; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.participant (id, is_active, active_at, inactive_at, team, department, added_by_id, added_reason, location, after_hours_notification, incident_id, individual_contact_id) FROM stdin;
1	t	2020-07-24 18:02:38.614157	\N	Unknown	Unknown	\N	\N	Unknown	f	1	1
\.


--
-- Data for Name: participant_role; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.participant_role (id, assumed_at, renounced_at, role, participant_id) FROM stdin;
2	2020-07-24 18:02:38.590034	\N	Reporter	1
4	2020-07-24 18:02:40.638236	\N	Incident Commander	1
\.


--
-- Data for Name: plugin; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.plugin (id, title, slug, description, version, author, author_url, type, enabled, required, multiple, configuration, search_vector) FROM stdin;
1	Dispatch Plugin - Basic Authentication Provider	dispatch-auth-provider-basic	Generic basic authentication provider.	0.1.0	Netflix	https://github.com/netflix/dispatch.git	auth-provider	t	f	f	null	'authent':4 'basic':3 'dispatch':1 'plugin':2 'provid':5
3	Dispatch Plugin - Document Resolver	dispatch-document-resolver	Uses dispatch itself to resolve incident documents.	0.1.0	Netflix	https://github.com/netflix/dispatch.git	document-resolver	t	f	f	null	'dispatch':1 'document':3 'plugin':2 'resolv':4
4	Dispatch Plugin - PKCE Authentication Provider	dispatch-auth-provider-pkce	Generic PCKE authentication provider.	0.1.0	Netflix	https://github.com/netflix/dispatch.git	auth-provider	f	f	f	null	'authent':4 'dispatch':1 'pkce':3 'plugin':2 'provid':5
5	Dispatch Plugin - Participant Resolver	dispatch-participant-resolver	Uses dispatch itself to resolve incident participants.	0.1.0	Netflix	https://github.com/netflix/dispatch.git	participant	t	f	f	null	'dispatch':1 'particip':3 'plugin':2 'resolv':4
7	Google Calendar Plugin - Conference Management	google-calendar-conference	Uses Google calendar to manage conference rooms/meets.	0.1.0	Netflix	https://github.com/netflix/dispatch.git	conference	t	f	f	null	'calendar':2 'confer':4 'googl':1 'manag':5 'plugin':3
8	Google Docs Plugin - Document Management	google-docs-document	Uses Google docs to manage document contents.	0.1.0	Netflix	https://github.com/netflix/dispatch.git	document	t	f	f	null	'doc':2 'document':4 'googl':1 'manag':5 'plugin':3
9	Google Drive Plugin - Storage Management	google-drive-storage	Uses Google Drive to help manage incident storage.	0.1.0	Netflix	https://github.com/netflix/dispatch.git	storage	t	f	f	null	'drive':2 'googl':1 'manag':5 'plugin':3 'storag':4
10	Google Drive Plugin - Task Management	google-drive-task	Uses Google Drive to help manage incident tasks.	0.1.0	Netflix	https://github.com/netflix/dispatch.git	task	t	f	f	null	'drive':2 'googl':1 'manag':5 'plugin':3 'task':4
12	Google Group Plugin - Participant Group Management	google-group-participant-group	Uses Google Groups to help manage participant membership.	0.1.0	Netflix	https://github.com/netflix/dispatch.git	participant-group	t	f	f	null	'googl':1 'group':2,5 'manag':6 'particip':4 'plugin':3
14	PagerDuty Plugin - Oncall Management	pagerduty-oncall	Uses PagerDuty to resolve and page oncall teams.	0.1.0	Netflix	https://github.com/Netflix/dispatch	oncall	t	f	f	null	'manag':4 'oncal':3 'pagerduti':1 'plugin':2
16	Slack Plugin - Conversation Management	slack-conversation	Uses Slack to facilitate conversations.	0.1.0	Netflix	https://github.com/netflix/dispatch.git	conversation	t	f	f	null	'convers':3 'manag':4 'plugin':2 'slack':1
2	Dispatch Plugin - Contact plugin	dispatch-contact	Uses dispatch itself to resolve incident participants.	0.1.0	Netflix	https://github.com/netflix/dispatch.git	contact	t	f	f	null	'contact':3 'dispatch':1 'plugin':2,4
6	Dispatch Plugin - Ticket Management	dispatch-ticket	Uses dispatch itself to create a ticket.	0.1.0	Netflix	https://github.com/netflix/dispatch.git	ticket	t	f	f	null	'dispatch':1 'manag':4 'plugin':2 'ticket':3
11	Google Gmail Plugin - Email Management	google-gmail-email	Uses gmail to facilitate emails.	0.1.0	Netflix	https://github.com/netflix/dispatch.git	email	t	f	f	null	'email':4 'gmail':2 'googl':1 'manag':5 'plugin':3
13	Jira Plugin - Ticket Management	jira-ticket	Uses Jira to help manage external tickets.	0.1.0	Netflix	https://github.com/netflix/dispatch.git	ticket	f	f	f	null	'jira':1 'manag':4 'plugin':2 'ticket':3
15	Slack Plugin - Contact Information Resolver	slack-contact	Uses Slack to resolve contact information details.	0.1.0	Netflix	https://github.com/netflix/dispatch.git	contact	f	f	f	null	'contact':3 'inform':4 'plugin':2 'resolv':5 'slack':1
\.


--
-- Data for Name: recommendation; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.recommendation (id, text) FROM stdin;
1	This is a test incident
2	This is a test incident
\.


--
-- Data for Name: recommendation_accuracy; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.recommendation_accuracy (id, recommendation_id, correct, resource_id, resource_type) FROM stdin;
\.


--
-- Data for Name: recommendation_documents; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.recommendation_documents (document_id, recommendation_id) FROM stdin;
\.


--
-- Data for Name: recommendation_incident_priorities; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.recommendation_incident_priorities (incident_priority_id, recommendation_id) FROM stdin;
2	1
2	2
\.


--
-- Data for Name: recommendation_incident_types; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.recommendation_incident_types (incident_type_id, recommendation_id) FROM stdin;
1	1
1	2
\.


--
-- Data for Name: recommendation_individual_contacts; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.recommendation_individual_contacts (individual_contact_id, recommendation_id) FROM stdin;
\.


--
-- Data for Name: recommendation_services; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.recommendation_services (service_id, recommendation_id) FROM stdin;
\.


--
-- Data for Name: recommendation_team_contacts; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.recommendation_team_contacts (team_contact_id, recommendation_id) FROM stdin;
\.


--
-- Data for Name: recommendation_terms; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.recommendation_terms (term_id, recommendation_id) FROM stdin;
\.


--
-- Data for Name: report; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.report (id, created_at, details, details_raw, type, incident_id, participant_id, search_vector) FROM stdin;
1	2020-07-24 18:11:55.229674	{"conditions": "List of conditions", "actions": "List of actions", "needs": "List of needs"}	List of conditions List of actions List of needs	Tactical Report	1	1	'action':6 'condit':3 'list':1,4,7 'need':9
\.


--
-- Data for Name: search_filter; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.search_filter (id, name, description, expression, creator_id, type, search_vector) FROM stdin;
\.


--
-- Data for Name: service; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.service (id, is_active, name, type, description, external_id, search_vector, updated_at, created_at) FROM stdin;
1	t	PagerDuty Oncall Service	pagerduty-oncall	Oncall service for handling incidents.	P8H4RFG	'oncal':2 'pagerduti':1 'servic':3	2020-07-24 17:25:36.696743	2020-07-24 17:25:36.696737
\.


--
-- Data for Name: service_incident; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.service_incident (incident_id, service_id) FROM stdin;
\.


--
-- Data for Name: service_incident_priority; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.service_incident_priority (incident_priority_id, service_id) FROM stdin;
\.


--
-- Data for Name: service_incident_type; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.service_incident_type (incident_type_id, service_id) FROM stdin;
\.


--
-- Data for Name: service_terms; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.service_terms (term_id, service_id) FROM stdin;
\.


--
-- Data for Name: storage; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.storage (resource_type, resource_id, weblink, id, incident_id, created_at, updated_at) FROM stdin;
google-drive-storage	1MAj7cmmpVsKS6M4DQ64x8uJv0p703VTg	https://drive.google.com/drive/folders/1MAj7cmmpVsKS6M4DQ64x8uJv0p703VTg	1	1	2020-07-24 18:02:57.32136	2020-07-24 18:02:57.337322
\.


--
-- Data for Name: tag; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.tag (id, name, description, uri, source, discoverable, search_vector, updated_at, created_at, tag_type_id) FROM stdin;
\.


--
-- Data for Name: tag_type; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.tag_type (id, name, description, search_vector, updated_at, created_at) FROM stdin;
\.


--
-- Data for Name: task; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.task (resource_type, resource_id, weblink, id, resolved_at, resolve_by, last_reminder_at, creator_id, description, source, priority, status, reminders, incident_id, search_vector, created_at, updated_at, owner_id) FROM stdin;
\.


--
-- Data for Name: task_assignees; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.task_assignees (participant_id, task_id) FROM stdin;
\.


--
-- Data for Name: task_tickets; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.task_tickets (ticket_id, task_id) FROM stdin;
\.


--
-- Data for Name: team_contact; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.team_contact (is_active, is_external, contact_type, email, company, owner, id, name, notes, search_vector, created_at, updated_at) FROM stdin;
\.


--
-- Data for Name: team_contact_incident; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.team_contact_incident (incident_id, team_contact_id) FROM stdin;
\.


--
-- Data for Name: team_contact_incident_priority; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.team_contact_incident_priority (incident_priority_id, team_contact_id) FROM stdin;
\.


--
-- Data for Name: team_contact_incident_type; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.team_contact_incident_type (incident_type_id, team_contact_id) FROM stdin;
\.


--
-- Data for Name: team_contact_terms; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.team_contact_terms (term_id, team_contact_id) FROM stdin;
\.


--
-- Data for Name: term; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.term (id, text, discoverable, search_vector) FROM stdin;
\.


--
-- Data for Name: ticket; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.ticket (resource_type, resource_id, weblink, id, incident_id, updated_at, created_at) FROM stdin;
dispatch-ticket	dispatch-1	http://localhost:8080/incidents/dispatch-1	1	1	2020-07-24 18:02:41.355332	2020-07-24 18:02:41.334229
\.


--
-- Data for Name: workflow; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.workflow (id, name, description, parameters, resource_id, search_vector, created_at, updated_at, plugin_id, enabled) FROM stdin;
\.


--
-- Data for Name: workflow_incident_priority; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.workflow_incident_priority (incident_priority_id, workflow_id) FROM stdin;
\.


--
-- Data for Name: workflow_incident_type; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.workflow_incident_type (incident_type_id, workflow_id) FROM stdin;
\.


--
-- Data for Name: workflow_instance; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.workflow_instance (resource_type, resource_id, weblink, id, workflow_id, creator_id, status, incident_id, created_at, updated_at, parameters, run_reason) FROM stdin;
\.


--
-- Data for Name: workflow_instance_artifact; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.workflow_instance_artifact (document_id, workflow_instance_id) FROM stdin;
\.


--
-- Data for Name: workflow_term; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.workflow_term (term_id, workflow_id) FROM stdin;
\.


--
-- Name: dispatch_user_id_seq; Type: SEQUENCE SET; Schema: dispatch_core; Owner: postgres
--

SELECT pg_catalog.setval('dispatch_core.dispatch_user_id_seq', 4260, true);


--
-- Name: organization_id_seq; Type: SEQUENCE SET; Schema: dispatch_core; Owner: postgres
--

SELECT pg_catalog.setval('dispatch_core.organization_id_seq', 1, true);


--
-- Name: plugin_event_id_seq; Type: SEQUENCE SET; Schema: dispatch_core; Owner: postgres
--

SELECT pg_catalog.setval('dispatch_core.plugin_event_id_seq', 1, false);


--
-- Name: plugin_id_seq; Type: SEQUENCE SET; Schema: dispatch_core; Owner: postgres
--

SELECT pg_catalog.setval('dispatch_core.plugin_id_seq', 22, true);


--
-- Name: alert_id_seq; Type: SEQUENCE SET; Schema: dispatch_organization_default; Owner: postgres
--

SELECT pg_catalog.setval('dispatch_organization_default.alert_id_seq', 1, false);


--
-- Name: case_id_seq; Type: SEQUENCE SET; Schema: dispatch_organization_default; Owner: postgres
--

SELECT pg_catalog.setval('dispatch_organization_default.case_id_seq', 1, false);


--
-- Name: case_priority_id_seq; Type: SEQUENCE SET; Schema: dispatch_organization_default; Owner: postgres
--

SELECT pg_catalog.setval('dispatch_organization_default.case_priority_id_seq', 1, false);


--
-- Name: case_severity_id_seq; Type: SEQUENCE SET; Schema: dispatch_organization_default; Owner: postgres
--

SELECT pg_catalog.setval('dispatch_organization_default.case_severity_id_seq', 1, false);


--
-- Name: case_type_id_seq; Type: SEQUENCE SET; Schema: dispatch_organization_default; Owner: postgres
--

SELECT pg_catalog.setval('dispatch_organization_default.case_type_id_seq', 1, false);


--
-- Name: conference_id_seq; Type: SEQUENCE SET; Schema: dispatch_organization_default; Owner: postgres
--

SELECT pg_catalog.setval('dispatch_organization_default.conference_id_seq', 4, true);


--
-- Name: conversation_id_seq; Type: SEQUENCE SET; Schema: dispatch_organization_default; Owner: postgres
--

SELECT pg_catalog.setval('dispatch_organization_default.conversation_id_seq', 4, true);


--
-- Name: cost_model_activity_id_seq; Type: SEQUENCE SET; Schema: dispatch_organization_default; Owner: postgres
--

SELECT pg_catalog.setval('dispatch_organization_default.cost_model_activity_id_seq', 1, false);


--
-- Name: cost_model_id_seq; Type: SEQUENCE SET; Schema: dispatch_organization_default; Owner: postgres
--

SELECT pg_catalog.setval('dispatch_organization_default.cost_model_id_seq', 1, false);


--
-- Name: definition_id_seq; Type: SEQUENCE SET; Schema: dispatch_organization_default; Owner: postgres
--

SELECT pg_catalog.setval('dispatch_organization_default.definition_id_seq', 1, true);


--
-- Name: document_id_seq; Type: SEQUENCE SET; Schema: dispatch_organization_default; Owner: postgres
--

SELECT pg_catalog.setval('dispatch_organization_default.document_id_seq', 5, true);


--
-- Name: entity_id_seq; Type: SEQUENCE SET; Schema: dispatch_organization_default; Owner: postgres
--

SELECT pg_catalog.setval('dispatch_organization_default.entity_id_seq', 1, false);


--
-- Name: entity_type_id_seq; Type: SEQUENCE SET; Schema: dispatch_organization_default; Owner: postgres
--

SELECT pg_catalog.setval('dispatch_organization_default.entity_type_id_seq', 1, false);


--
-- Name: event_id_seq; Type: SEQUENCE SET; Schema: dispatch_organization_default; Owner: postgres
--

SELECT pg_catalog.setval('dispatch_organization_default.event_id_seq', 62, true);


--
-- Name: feedback_id_seq; Type: SEQUENCE SET; Schema: dispatch_organization_default; Owner: postgres
--

SELECT pg_catalog.setval('dispatch_organization_default.feedback_id_seq', 1, false);


--
-- Name: forms_id_seq; Type: SEQUENCE SET; Schema: dispatch_organization_default; Owner: postgres
--

SELECT pg_catalog.setval('dispatch_organization_default.forms_id_seq', 1, false);


--
-- Name: forms_type_id_seq; Type: SEQUENCE SET; Schema: dispatch_organization_default; Owner: postgres
--

SELECT pg_catalog.setval('dispatch_organization_default.forms_type_id_seq', 1, false);


--
-- Name: group_id_seq; Type: SEQUENCE SET; Schema: dispatch_organization_default; Owner: postgres
--

SELECT pg_catalog.setval('dispatch_organization_default.group_id_seq', 8, true);


--
-- Name: incident_cost_id_seq; Type: SEQUENCE SET; Schema: dispatch_organization_default; Owner: postgres
--

SELECT pg_catalog.setval('dispatch_organization_default.incident_cost_id_seq', 1, true);


--
-- Name: incident_cost_type_id_seq; Type: SEQUENCE SET; Schema: dispatch_organization_default; Owner: postgres
--

SELECT pg_catalog.setval('dispatch_organization_default.incident_cost_type_id_seq', 5, true);


--
-- Name: incident_id_seq; Type: SEQUENCE SET; Schema: dispatch_organization_default; Owner: postgres
--

SELECT pg_catalog.setval('dispatch_organization_default.incident_id_seq', 7, true);


--
-- Name: incident_priority_id_seq; Type: SEQUENCE SET; Schema: dispatch_organization_default; Owner: postgres
--

SELECT pg_catalog.setval('dispatch_organization_default.incident_priority_id_seq', 3, true);


--
-- Name: incident_role_id_seq; Type: SEQUENCE SET; Schema: dispatch_organization_default; Owner: postgres
--

SELECT pg_catalog.setval('dispatch_organization_default.incident_role_id_seq', 1, false);


--
-- Name: incident_severity_id_seq; Type: SEQUENCE SET; Schema: dispatch_organization_default; Owner: postgres
--

SELECT pg_catalog.setval('dispatch_organization_default.incident_severity_id_seq', 1, true);


--
-- Name: incident_type_id_seq; Type: SEQUENCE SET; Schema: dispatch_organization_default; Owner: postgres
--

SELECT pg_catalog.setval('dispatch_organization_default.incident_type_id_seq', 3, true);


--
-- Name: individual_contact_id_seq; Type: SEQUENCE SET; Schema: dispatch_organization_default; Owner: postgres
--

SELECT pg_catalog.setval('dispatch_organization_default.individual_contact_id_seq', 3, true);


--
-- Name: monitor_id_seq; Type: SEQUENCE SET; Schema: dispatch_organization_default; Owner: postgres
--

SELECT pg_catalog.setval('dispatch_organization_default.monitor_id_seq', 1, false);


--
-- Name: notification_id_seq; Type: SEQUENCE SET; Schema: dispatch_organization_default; Owner: postgres
--

SELECT pg_catalog.setval('dispatch_organization_default.notification_id_seq', 1, true);


--
-- Name: participant_activity_id_seq; Type: SEQUENCE SET; Schema: dispatch_organization_default; Owner: postgres
--

SELECT pg_catalog.setval('dispatch_organization_default.participant_activity_id_seq', 1, false);


--
-- Name: participant_id_seq; Type: SEQUENCE SET; Schema: dispatch_organization_default; Owner: postgres
--

SELECT pg_catalog.setval('dispatch_organization_default.participant_id_seq', 5, true);


--
-- Name: participant_role_id_seq; Type: SEQUENCE SET; Schema: dispatch_organization_default; Owner: postgres
--

SELECT pg_catalog.setval('dispatch_organization_default.participant_role_id_seq', 14, true);


--
-- Name: plugin_instance_id_seq; Type: SEQUENCE SET; Schema: dispatch_organization_default; Owner: postgres
--

SELECT pg_catalog.setval('dispatch_organization_default.plugin_instance_id_seq', 14, true);


--
-- Name: project_id_seq; Type: SEQUENCE SET; Schema: dispatch_organization_default; Owner: postgres
--

SELECT pg_catalog.setval('dispatch_organization_default.project_id_seq', 1, true);


--
-- Name: query_id_seq; Type: SEQUENCE SET; Schema: dispatch_organization_default; Owner: postgres
--

SELECT pg_catalog.setval('dispatch_organization_default.query_id_seq', 1, true);


--
-- Name: recommendation_id_seq; Type: SEQUENCE SET; Schema: dispatch_organization_default; Owner: postgres
--

SELECT pg_catalog.setval('dispatch_organization_default.recommendation_id_seq', 4, true);


--
-- Name: recommendation_match_id_seq; Type: SEQUENCE SET; Schema: dispatch_organization_default; Owner: postgres
--

SELECT pg_catalog.setval('dispatch_organization_default.recommendation_match_id_seq', 1, false);


--
-- Name: report_id_seq; Type: SEQUENCE SET; Schema: dispatch_organization_default; Owner: postgres
--

SELECT pg_catalog.setval('dispatch_organization_default.report_id_seq', 1, false);


--
-- Name: search_filter_id_seq; Type: SEQUENCE SET; Schema: dispatch_organization_default; Owner: postgres
--

SELECT pg_catalog.setval('dispatch_organization_default.search_filter_id_seq', 2, true);


--
-- Name: service_feedback_id_seq; Type: SEQUENCE SET; Schema: dispatch_organization_default; Owner: postgres
--

SELECT pg_catalog.setval('dispatch_organization_default.service_feedback_id_seq', 1, false);


--
-- Name: service_feedback_reminder_id_seq; Type: SEQUENCE SET; Schema: dispatch_organization_default; Owner: postgres
--

SELECT pg_catalog.setval('dispatch_organization_default.service_feedback_reminder_id_seq', 1, false);


--
-- Name: service_id_seq; Type: SEQUENCE SET; Schema: dispatch_organization_default; Owner: postgres
--

SELECT pg_catalog.setval('dispatch_organization_default.service_id_seq', 1, false);


--
-- Name: signal_engagement_id_seq; Type: SEQUENCE SET; Schema: dispatch_organization_default; Owner: postgres
--

SELECT pg_catalog.setval('dispatch_organization_default.signal_engagement_id_seq', 1, false);


--
-- Name: signal_filter_id_seq; Type: SEQUENCE SET; Schema: dispatch_organization_default; Owner: postgres
--

SELECT pg_catalog.setval('dispatch_organization_default.signal_filter_id_seq', 1, false);


--
-- Name: signal_id_seq; Type: SEQUENCE SET; Schema: dispatch_organization_default; Owner: postgres
--

SELECT pg_catalog.setval('dispatch_organization_default.signal_id_seq', 1, false);


--
-- Name: source_data_format_id_seq; Type: SEQUENCE SET; Schema: dispatch_organization_default; Owner: postgres
--

SELECT pg_catalog.setval('dispatch_organization_default.source_data_format_id_seq', 3, true);


--
-- Name: source_environment_id_seq; Type: SEQUENCE SET; Schema: dispatch_organization_default; Owner: postgres
--

SELECT pg_catalog.setval('dispatch_organization_default.source_environment_id_seq', 2, true);


--
-- Name: source_id_seq; Type: SEQUENCE SET; Schema: dispatch_organization_default; Owner: postgres
--

SELECT pg_catalog.setval('dispatch_organization_default.source_id_seq', 1, true);


--
-- Name: source_status_id_seq; Type: SEQUENCE SET; Schema: dispatch_organization_default; Owner: postgres
--

SELECT pg_catalog.setval('dispatch_organization_default.source_status_id_seq', 3, true);


--
-- Name: source_transport_id_seq; Type: SEQUENCE SET; Schema: dispatch_organization_default; Owner: postgres
--

SELECT pg_catalog.setval('dispatch_organization_default.source_transport_id_seq', 3, true);


--
-- Name: source_type_id_seq; Type: SEQUENCE SET; Schema: dispatch_organization_default; Owner: postgres
--

SELECT pg_catalog.setval('dispatch_organization_default.source_type_id_seq', 2, true);


--
-- Name: storage_id_seq; Type: SEQUENCE SET; Schema: dispatch_organization_default; Owner: postgres
--

SELECT pg_catalog.setval('dispatch_organization_default.storage_id_seq', 1, false);


--
-- Name: tag_id_seq; Type: SEQUENCE SET; Schema: dispatch_organization_default; Owner: postgres
--

SELECT pg_catalog.setval('dispatch_organization_default.tag_id_seq', 1, true);


--
-- Name: tag_type_id_seq; Type: SEQUENCE SET; Schema: dispatch_organization_default; Owner: postgres
--

SELECT pg_catalog.setval('dispatch_organization_default.tag_type_id_seq', 4, true);


--
-- Name: task_id_seq; Type: SEQUENCE SET; Schema: dispatch_organization_default; Owner: postgres
--

SELECT pg_catalog.setval('dispatch_organization_default.task_id_seq', 1, true);


--
-- Name: team_contact_id_seq; Type: SEQUENCE SET; Schema: dispatch_organization_default; Owner: postgres
--

SELECT pg_catalog.setval('dispatch_organization_default.team_contact_id_seq', 1, true);


--
-- Name: term_id_seq; Type: SEQUENCE SET; Schema: dispatch_organization_default; Owner: postgres
--

SELECT pg_catalog.setval('dispatch_organization_default.term_id_seq', 1, true);


--
-- Name: ticket_id_seq; Type: SEQUENCE SET; Schema: dispatch_organization_default; Owner: postgres
--

SELECT pg_catalog.setval('dispatch_organization_default.ticket_id_seq', 4, true);


--
-- Name: workflow_id_seq; Type: SEQUENCE SET; Schema: dispatch_organization_default; Owner: postgres
--

SELECT pg_catalog.setval('dispatch_organization_default.workflow_id_seq', 2, true);


--
-- Name: workflow_instance_id_seq; Type: SEQUENCE SET; Schema: dispatch_organization_default; Owner: postgres
--

SELECT pg_catalog.setval('dispatch_organization_default.workflow_instance_id_seq', 1, false);


--
-- Name: conference_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.conference_id_seq', 1, true);


--
-- Name: conversation_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.conversation_id_seq', 1, true);


--
-- Name: definition_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.definition_id_seq', 1, false);


--
-- Name: dispatch_user_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.dispatch_user_id_seq', 3, true);


--
-- Name: document_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.document_id_seq', 6, true);


--
-- Name: event_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.event_id_seq', 21, true);


--
-- Name: feedback_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.feedback_id_seq', 1, false);


--
-- Name: group_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.group_id_seq', 2, true);


--
-- Name: incident_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.incident_id_seq', 1, true);


--
-- Name: incident_priority_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.incident_priority_id_seq', 3, true);


--
-- Name: incident_type_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.incident_type_id_seq', 1, true);


--
-- Name: individual_contact_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.individual_contact_id_seq', 3, true);


--
-- Name: notification_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.notification_id_seq', 1, false);


--
-- Name: participant_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.participant_id_seq', 3, true);


--
-- Name: participant_role_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.participant_role_id_seq', 6, true);


--
-- Name: plugin_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.plugin_id_seq', 16, true);


--
-- Name: recommendation_accuracy_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.recommendation_accuracy_id_seq', 1, false);


--
-- Name: recommendation_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.recommendation_id_seq', 2, true);


--
-- Name: report_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.report_id_seq', 1, true);


--
-- Name: search_filter_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.search_filter_id_seq', 1, false);


--
-- Name: service_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.service_id_seq', 1, true);


--
-- Name: storage_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.storage_id_seq', 1, true);


--
-- Name: tag_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.tag_id_seq', 1, false);


--
-- Name: tag_type_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.tag_type_id_seq', 1, false);


--
-- Name: task_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.task_id_seq', 1, false);


--
-- Name: team_contact_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.team_contact_id_seq', 1, false);


--
-- Name: term_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.term_id_seq', 1, false);


--
-- Name: ticket_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.ticket_id_seq', 1, true);


--
-- Name: workflow_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.workflow_id_seq', 1, false);


--
-- Name: workflow_instance_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.workflow_instance_id_seq', 1, false);


--
-- Name: alembic_version alembic_version_pkc; Type: CONSTRAINT; Schema: dispatch_core; Owner: postgres
--

ALTER TABLE ONLY dispatch_core.alembic_version
    ADD CONSTRAINT alembic_version_pkc PRIMARY KEY (version_num);


--
-- Name: dispatch_user dispatch_user_email_key; Type: CONSTRAINT; Schema: dispatch_core; Owner: postgres
--

ALTER TABLE ONLY dispatch_core.dispatch_user
    ADD CONSTRAINT dispatch_user_email_key UNIQUE (email);


--
-- Name: dispatch_user_organization dispatch_user_organization_pkey; Type: CONSTRAINT; Schema: dispatch_core; Owner: postgres
--

ALTER TABLE ONLY dispatch_core.dispatch_user_organization
    ADD CONSTRAINT dispatch_user_organization_pkey PRIMARY KEY (dispatch_user_id, organization_id);


--
-- Name: dispatch_user dispatch_user_pkey; Type: CONSTRAINT; Schema: dispatch_core; Owner: postgres
--

ALTER TABLE ONLY dispatch_core.dispatch_user
    ADD CONSTRAINT dispatch_user_pkey PRIMARY KEY (id);


--
-- Name: organization organization_name_key; Type: CONSTRAINT; Schema: dispatch_core; Owner: postgres
--

ALTER TABLE ONLY dispatch_core.organization
    ADD CONSTRAINT organization_name_key UNIQUE (name);


--
-- Name: organization organization_pkey; Type: CONSTRAINT; Schema: dispatch_core; Owner: postgres
--

ALTER TABLE ONLY dispatch_core.organization
    ADD CONSTRAINT organization_pkey PRIMARY KEY (id);


--
-- Name: plugin_event plugin_event_pkey; Type: CONSTRAINT; Schema: dispatch_core; Owner: postgres
--

ALTER TABLE ONLY dispatch_core.plugin_event
    ADD CONSTRAINT plugin_event_pkey PRIMARY KEY (id);


--
-- Name: plugin_event plugin_event_slug_key; Type: CONSTRAINT; Schema: dispatch_core; Owner: postgres
--

ALTER TABLE ONLY dispatch_core.plugin_event
    ADD CONSTRAINT plugin_event_slug_key UNIQUE (slug);


--
-- Name: plugin plugin_pkey; Type: CONSTRAINT; Schema: dispatch_core; Owner: postgres
--

ALTER TABLE ONLY dispatch_core.plugin
    ADD CONSTRAINT plugin_pkey PRIMARY KEY (id);


--
-- Name: plugin plugin_slug_key; Type: CONSTRAINT; Schema: dispatch_core; Owner: postgres
--

ALTER TABLE ONLY dispatch_core.plugin
    ADD CONSTRAINT plugin_slug_key UNIQUE (slug);


--
-- Name: alembic_version alembic_version_pkc; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.alembic_version
    ADD CONSTRAINT alembic_version_pkc PRIMARY KEY (version_num);


--
-- Name: alert alert_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.alert
    ADD CONSTRAINT alert_pkey PRIMARY KEY (id);


--
-- Name: assoc_case_incidents assoc_case_incidents_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.assoc_case_incidents
    ADD CONSTRAINT assoc_case_incidents_pkey PRIMARY KEY (case_id, incident_id);


--
-- Name: assoc_case_tags assoc_case_tags_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.assoc_case_tags
    ADD CONSTRAINT assoc_case_tags_pkey PRIMARY KEY (case_id, tag_id);


--
-- Name: assoc_cost_model_activities assoc_cost_model_activities_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.assoc_cost_model_activities
    ADD CONSTRAINT assoc_cost_model_activities_pkey PRIMARY KEY (cost_model_id, cost_model_activity_id);


--
-- Name: assoc_document_filters assoc_document_filters_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.assoc_document_filters
    ADD CONSTRAINT assoc_document_filters_pkey PRIMARY KEY (document_id, search_filter_id);


--
-- Name: assoc_incident_tags assoc_incident_tags_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.assoc_incident_tags
    ADD CONSTRAINT assoc_incident_tags_pkey PRIMARY KEY (incident_id, tag_id);


--
-- Name: assoc_incident_terms assoc_incident_terms_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.assoc_incident_terms
    ADD CONSTRAINT assoc_incident_terms_pkey PRIMARY KEY (incident_id, term_id);


--
-- Name: assoc_individual_contact_filters assoc_individual_contact_filters_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.assoc_individual_contact_filters
    ADD CONSTRAINT assoc_individual_contact_filters_pkey PRIMARY KEY (individual_contact_id, search_filter_id);


--
-- Name: assoc_notification_filters assoc_notification_filters_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.assoc_notification_filters
    ADD CONSTRAINT assoc_notification_filters_pkey PRIMARY KEY (notification_id, search_filter_id);


--
-- Name: assoc_query_incidents assoc_query_incidents_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.assoc_query_incidents
    ADD CONSTRAINT assoc_query_incidents_pkey PRIMARY KEY (query_id, incident_id);


--
-- Name: assoc_query_tags assoc_query_tags_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.assoc_query_tags
    ADD CONSTRAINT assoc_query_tags_pkey PRIMARY KEY (query_id, tag_id);


--
-- Name: assoc_service_filters assoc_service_filters_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.assoc_service_filters
    ADD CONSTRAINT assoc_service_filters_pkey PRIMARY KEY (service_id, search_filter_id);


--
-- Name: assoc_signal_engagements assoc_signal_engagements_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.assoc_signal_engagements
    ADD CONSTRAINT assoc_signal_engagements_pkey PRIMARY KEY (signal_id, signal_engagement_id);


--
-- Name: assoc_signal_entity_types assoc_signal_entity_types_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.assoc_signal_entity_types
    ADD CONSTRAINT assoc_signal_entity_types_pkey PRIMARY KEY (signal_id, entity_type_id);


--
-- Name: assoc_signal_filters assoc_signal_filters_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.assoc_signal_filters
    ADD CONSTRAINT assoc_signal_filters_pkey PRIMARY KEY (signal_id, signal_filter_id);


--
-- Name: assoc_signal_instance_entities assoc_signal_instance_entities_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.assoc_signal_instance_entities
    ADD CONSTRAINT assoc_signal_instance_entities_pkey PRIMARY KEY (signal_instance_id, entity_id);


--
-- Name: assoc_signal_tags assoc_signal_tags_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.assoc_signal_tags
    ADD CONSTRAINT assoc_signal_tags_pkey PRIMARY KEY (signal_id, tag_id);


--
-- Name: assoc_signal_workflows assoc_signal_workflows_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.assoc_signal_workflows
    ADD CONSTRAINT assoc_signal_workflows_pkey PRIMARY KEY (signal_id, workflow_id);


--
-- Name: assoc_source_incidents assoc_source_incidents_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.assoc_source_incidents
    ADD CONSTRAINT assoc_source_incidents_pkey PRIMARY KEY (source_id, incident_id);


--
-- Name: assoc_source_tags assoc_source_tags_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.assoc_source_tags
    ADD CONSTRAINT assoc_source_tags_pkey PRIMARY KEY (source_id, tag_id);


--
-- Name: assoc_team_contact_filters assoc_team_contact_filters_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.assoc_team_contact_filters
    ADD CONSTRAINT assoc_team_contact_filters_pkey PRIMARY KEY (team_contact_id, search_filter_id);


--
-- Name: case case_name_project_id_key; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default."case"
    ADD CONSTRAINT case_name_project_id_key UNIQUE (name, project_id);


--
-- Name: case case_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default."case"
    ADD CONSTRAINT case_pkey PRIMARY KEY (id);


--
-- Name: case_priority case_priority_name_project_id_key; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.case_priority
    ADD CONSTRAINT case_priority_name_project_id_key UNIQUE (name, project_id);


--
-- Name: case_priority case_priority_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.case_priority
    ADD CONSTRAINT case_priority_pkey PRIMARY KEY (id);


--
-- Name: case_severity case_severity_name_project_id_key; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.case_severity
    ADD CONSTRAINT case_severity_name_project_id_key UNIQUE (name, project_id);


--
-- Name: case_severity case_severity_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.case_severity
    ADD CONSTRAINT case_severity_pkey PRIMARY KEY (id);


--
-- Name: case_type case_type_name_project_id_key; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.case_type
    ADD CONSTRAINT case_type_name_project_id_key UNIQUE (name, project_id);


--
-- Name: case_type case_type_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.case_type
    ADD CONSTRAINT case_type_pkey PRIMARY KEY (id);


--
-- Name: conference conference_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.conference
    ADD CONSTRAINT conference_pkey PRIMARY KEY (id);


--
-- Name: conversation conversation_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.conversation
    ADD CONSTRAINT conversation_pkey PRIMARY KEY (id);


--
-- Name: cost_model_activity cost_model_activity_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.cost_model_activity
    ADD CONSTRAINT cost_model_activity_pkey PRIMARY KEY (id);


--
-- Name: cost_model cost_model_name_project_id_key; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.cost_model
    ADD CONSTRAINT cost_model_name_project_id_key UNIQUE (name, project_id);


--
-- Name: cost_model cost_model_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.cost_model
    ADD CONSTRAINT cost_model_pkey PRIMARY KEY (id);


--
-- Name: definition definition_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.definition
    ADD CONSTRAINT definition_pkey PRIMARY KEY (id);


--
-- Name: definition_teams definition_teams_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.definition_teams
    ADD CONSTRAINT definition_teams_pkey PRIMARY KEY (definition_id, team_contact_id);


--
-- Name: definition_terms definition_terms_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.definition_terms
    ADD CONSTRAINT definition_terms_pkey PRIMARY KEY (definition_id, term_id);


--
-- Name: definition definition_text_project_id_key; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.definition
    ADD CONSTRAINT definition_text_project_id_key UNIQUE (text, project_id);


--
-- Name: dispatch_user_project dispatch_user_project_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.dispatch_user_project
    ADD CONSTRAINT dispatch_user_project_pkey PRIMARY KEY (dispatch_user_id, project_id);


--
-- Name: document document_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.document
    ADD CONSTRAINT document_pkey PRIMARY KEY (id);


--
-- Name: entity entity_name_project_id_key; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.entity
    ADD CONSTRAINT entity_name_project_id_key UNIQUE (name, project_id);


--
-- Name: entity entity_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.entity
    ADD CONSTRAINT entity_pkey PRIMARY KEY (id);


--
-- Name: entity_type entity_type_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.entity_type
    ADD CONSTRAINT entity_type_pkey PRIMARY KEY (id);


--
-- Name: event event_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.event
    ADD CONSTRAINT event_pkey PRIMARY KEY (id);


--
-- Name: event event_uuid_key; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.event
    ADD CONSTRAINT event_uuid_key UNIQUE (uuid);


--
-- Name: feedback feedback_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.feedback
    ADD CONSTRAINT feedback_pkey PRIMARY KEY (id);


--
-- Name: forms forms_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.forms
    ADD CONSTRAINT forms_pkey PRIMARY KEY (id);


--
-- Name: forms_type forms_type_name_project_id_key; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.forms_type
    ADD CONSTRAINT forms_type_name_project_id_key UNIQUE (name, project_id);


--
-- Name: forms_type forms_type_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.forms_type
    ADD CONSTRAINT forms_type_pkey PRIMARY KEY (id);


--
-- Name: group group_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default."group"
    ADD CONSTRAINT group_pkey PRIMARY KEY (id);


--
-- Name: incident_cost incident_cost_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.incident_cost
    ADD CONSTRAINT incident_cost_pkey PRIMARY KEY (id);


--
-- Name: incident_cost_type incident_cost_type_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.incident_cost_type
    ADD CONSTRAINT incident_cost_type_pkey PRIMARY KEY (id);


--
-- Name: incident incident_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.incident
    ADD CONSTRAINT incident_pkey PRIMARY KEY (id);


--
-- Name: incident_priority incident_priority_name_project_id_key; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.incident_priority
    ADD CONSTRAINT incident_priority_name_project_id_key UNIQUE (name, project_id);


--
-- Name: incident_priority incident_priority_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.incident_priority
    ADD CONSTRAINT incident_priority_pkey PRIMARY KEY (id);


--
-- Name: incident_role_incident_priority incident_role_incident_priority_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.incident_role_incident_priority
    ADD CONSTRAINT incident_role_incident_priority_pkey PRIMARY KEY (incident_role_id, incident_priority_id);


--
-- Name: incident_role_incident_type incident_role_incident_type_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.incident_role_incident_type
    ADD CONSTRAINT incident_role_incident_type_pkey PRIMARY KEY (incident_role_id, incident_type_id);


--
-- Name: incident_role incident_role_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.incident_role
    ADD CONSTRAINT incident_role_pkey PRIMARY KEY (id);


--
-- Name: incident_role_tag incident_role_tag_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.incident_role_tag
    ADD CONSTRAINT incident_role_tag_pkey PRIMARY KEY (incident_role_id, tag_id);


--
-- Name: incident_severity incident_severity_name_project_id_key; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.incident_severity
    ADD CONSTRAINT incident_severity_name_project_id_key UNIQUE (name, project_id);


--
-- Name: incident_severity incident_severity_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.incident_severity
    ADD CONSTRAINT incident_severity_pkey PRIMARY KEY (id);


--
-- Name: incident_type incident_type_name_project_id_key; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.incident_type
    ADD CONSTRAINT incident_type_name_project_id_key UNIQUE (name, project_id);


--
-- Name: incident_type incident_type_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.incident_type
    ADD CONSTRAINT incident_type_pkey PRIMARY KEY (id);


--
-- Name: individual_contact individual_contact_email_project_id_key; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.individual_contact
    ADD CONSTRAINT individual_contact_email_project_id_key UNIQUE (email, project_id);


--
-- Name: individual_contact individual_contact_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.individual_contact
    ADD CONSTRAINT individual_contact_pkey PRIMARY KEY (id);


--
-- Name: monitor monitor_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.monitor
    ADD CONSTRAINT monitor_pkey PRIMARY KEY (id);


--
-- Name: notification notification_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.notification
    ADD CONSTRAINT notification_pkey PRIMARY KEY (id);


--
-- Name: participant_activity participant_activity_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.participant_activity
    ADD CONSTRAINT participant_activity_pkey PRIMARY KEY (id);


--
-- Name: participant participant_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.participant
    ADD CONSTRAINT participant_pkey PRIMARY KEY (id);


--
-- Name: participant_role participant_role_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.participant_role
    ADD CONSTRAINT participant_role_pkey PRIMARY KEY (id);


--
-- Name: plugin_instance plugin_instance_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.plugin_instance
    ADD CONSTRAINT plugin_instance_pkey PRIMARY KEY (id);


--
-- Name: project project_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.project
    ADD CONSTRAINT project_pkey PRIMARY KEY (id);


--
-- Name: query query_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.query
    ADD CONSTRAINT query_pkey PRIMARY KEY (id);


--
-- Name: recommendation_match recommendation_match_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.recommendation_match
    ADD CONSTRAINT recommendation_match_pkey PRIMARY KEY (id);


--
-- Name: recommendation recommendation_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.recommendation
    ADD CONSTRAINT recommendation_pkey PRIMARY KEY (id);


--
-- Name: report report_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.report
    ADD CONSTRAINT report_pkey PRIMARY KEY (id);


--
-- Name: search_filter search_filter_name_project_id_key; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.search_filter
    ADD CONSTRAINT search_filter_name_project_id_key UNIQUE (name, project_id);


--
-- Name: search_filter search_filter_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.search_filter
    ADD CONSTRAINT search_filter_pkey PRIMARY KEY (id);


--
-- Name: service service_external_id_project_id_key; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.service
    ADD CONSTRAINT service_external_id_project_id_key UNIQUE (external_id, project_id);


--
-- Name: service_feedback service_feedback_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.service_feedback
    ADD CONSTRAINT service_feedback_pkey PRIMARY KEY (id);


--
-- Name: service_feedback_reminder service_feedback_reminder_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.service_feedback_reminder
    ADD CONSTRAINT service_feedback_reminder_pkey PRIMARY KEY (id);


--
-- Name: service service_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.service
    ADD CONSTRAINT service_pkey PRIMARY KEY (id);


--
-- Name: signal_engagement signal_engagement_name_project_id_key; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.signal_engagement
    ADD CONSTRAINT signal_engagement_name_project_id_key UNIQUE (name, project_id);


--
-- Name: signal_engagement signal_engagement_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.signal_engagement
    ADD CONSTRAINT signal_engagement_pkey PRIMARY KEY (id);


--
-- Name: signal_filter signal_filter_name_project_id_key; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.signal_filter
    ADD CONSTRAINT signal_filter_name_project_id_key UNIQUE (name, project_id);


--
-- Name: signal_filter signal_filter_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.signal_filter
    ADD CONSTRAINT signal_filter_pkey PRIMARY KEY (id);


--
-- Name: signal_instance signal_instance_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.signal_instance
    ADD CONSTRAINT signal_instance_pkey PRIMARY KEY (id);


--
-- Name: signal signal_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.signal
    ADD CONSTRAINT signal_pkey PRIMARY KEY (id);


--
-- Name: source_data_format source_data_format_name_project_id_key; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.source_data_format
    ADD CONSTRAINT source_data_format_name_project_id_key UNIQUE (name, project_id);


--
-- Name: source_data_format source_data_format_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.source_data_format
    ADD CONSTRAINT source_data_format_pkey PRIMARY KEY (id);


--
-- Name: source_environment source_environment_name_project_id_key; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.source_environment
    ADD CONSTRAINT source_environment_name_project_id_key UNIQUE (name, project_id);


--
-- Name: source_environment source_environment_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.source_environment
    ADD CONSTRAINT source_environment_pkey PRIMARY KEY (id);


--
-- Name: source source_name_project_id_key; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.source
    ADD CONSTRAINT source_name_project_id_key UNIQUE (name, project_id);


--
-- Name: source source_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.source
    ADD CONSTRAINT source_pkey PRIMARY KEY (id);


--
-- Name: source_status source_status_name_project_id_key; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.source_status
    ADD CONSTRAINT source_status_name_project_id_key UNIQUE (name, project_id);


--
-- Name: source_status source_status_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.source_status
    ADD CONSTRAINT source_status_pkey PRIMARY KEY (id);


--
-- Name: source_transport source_transport_name_project_id_key; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.source_transport
    ADD CONSTRAINT source_transport_name_project_id_key UNIQUE (name, project_id);


--
-- Name: source_transport source_transport_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.source_transport
    ADD CONSTRAINT source_transport_pkey PRIMARY KEY (id);


--
-- Name: source_type source_type_name_project_id_key; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.source_type
    ADD CONSTRAINT source_type_name_project_id_key UNIQUE (name, project_id);


--
-- Name: source_type source_type_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.source_type
    ADD CONSTRAINT source_type_pkey PRIMARY KEY (id);


--
-- Name: storage storage_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.storage
    ADD CONSTRAINT storage_pkey PRIMARY KEY (id);


--
-- Name: tag tag_name_project_id_key; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.tag
    ADD CONSTRAINT tag_name_project_id_key UNIQUE (name, project_id);


--
-- Name: tag tag_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.tag
    ADD CONSTRAINT tag_pkey PRIMARY KEY (id);


--
-- Name: tag_type tag_type_name_project_id_key; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.tag_type
    ADD CONSTRAINT tag_type_name_project_id_key UNIQUE (name, project_id);


--
-- Name: tag_type tag_type_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.tag_type
    ADD CONSTRAINT tag_type_pkey PRIMARY KEY (id);


--
-- Name: task_assignees task_assignees_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.task_assignees
    ADD CONSTRAINT task_assignees_pkey PRIMARY KEY (participant_id, task_id);


--
-- Name: task task_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.task
    ADD CONSTRAINT task_pkey PRIMARY KEY (id);


--
-- Name: task task_resource_id_incident_id_key; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.task
    ADD CONSTRAINT task_resource_id_incident_id_key UNIQUE (resource_id, incident_id);


--
-- Name: team_contact team_contact_email_project_id_key; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.team_contact
    ADD CONSTRAINT team_contact_email_project_id_key UNIQUE (email, project_id);


--
-- Name: team_contact_incident team_contact_incident_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.team_contact_incident
    ADD CONSTRAINT team_contact_incident_pkey PRIMARY KEY (incident_id, team_contact_id);


--
-- Name: team_contact team_contact_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.team_contact
    ADD CONSTRAINT team_contact_pkey PRIMARY KEY (id);


--
-- Name: term term_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.term
    ADD CONSTRAINT term_pkey PRIMARY KEY (id);


--
-- Name: term term_text_project_id_key; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.term
    ADD CONSTRAINT term_text_project_id_key UNIQUE (text, project_id);


--
-- Name: ticket ticket_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.ticket
    ADD CONSTRAINT ticket_pkey PRIMARY KEY (id);


--
-- Name: workflow_incident_priority workflow_incident_priority_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.workflow_incident_priority
    ADD CONSTRAINT workflow_incident_priority_pkey PRIMARY KEY (incident_priority_id, workflow_id);


--
-- Name: workflow_incident_type workflow_incident_type_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.workflow_incident_type
    ADD CONSTRAINT workflow_incident_type_pkey PRIMARY KEY (incident_type_id, workflow_id);


--
-- Name: workflow_instance_artifact workflow_instance_artifact_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.workflow_instance_artifact
    ADD CONSTRAINT workflow_instance_artifact_pkey PRIMARY KEY (document_id, workflow_instance_id);


--
-- Name: workflow_instance workflow_instance_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.workflow_instance
    ADD CONSTRAINT workflow_instance_pkey PRIMARY KEY (id);


--
-- Name: workflow workflow_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.workflow
    ADD CONSTRAINT workflow_pkey PRIMARY KEY (id);


--
-- Name: workflow_term workflow_term_pkey; Type: CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.workflow_term
    ADD CONSTRAINT workflow_term_pkey PRIMARY KEY (term_id, workflow_id);


--
-- Name: alembic_version alembic_version_pkc; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.alembic_version
    ADD CONSTRAINT alembic_version_pkc PRIMARY KEY (version_num);


--
-- Name: assoc_incident_tags assoc_incident_tags_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.assoc_incident_tags
    ADD CONSTRAINT assoc_incident_tags_pkey PRIMARY KEY (incident_id, tag_id);


--
-- Name: assoc_incident_terms assoc_incident_terms_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.assoc_incident_terms
    ADD CONSTRAINT assoc_incident_terms_pkey PRIMARY KEY (incident_id, term_id);


--
-- Name: assoc_individual_contact_incident_priority assoc_individual_contact_incident_priority_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.assoc_individual_contact_incident_priority
    ADD CONSTRAINT assoc_individual_contact_incident_priority_pkey PRIMARY KEY (incident_priority_id, individual_contact_id);


--
-- Name: assoc_individual_contact_incident_type assoc_individual_contact_incident_type_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.assoc_individual_contact_incident_type
    ADD CONSTRAINT assoc_individual_contact_incident_type_pkey PRIMARY KEY (incident_type_id, individual_contact_id);


--
-- Name: assoc_individual_contact_terms assoc_individual_contact_terms_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.assoc_individual_contact_terms
    ADD CONSTRAINT assoc_individual_contact_terms_pkey PRIMARY KEY (term_id, individual_contact_id);


--
-- Name: assoc_notification_filters assoc_notification_filters_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.assoc_notification_filters
    ADD CONSTRAINT assoc_notification_filters_pkey PRIMARY KEY (notification_id, search_filter_id);


--
-- Name: conference conference_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.conference
    ADD CONSTRAINT conference_pkey PRIMARY KEY (id);


--
-- Name: conversation conversation_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.conversation
    ADD CONSTRAINT conversation_pkey PRIMARY KEY (id);


--
-- Name: definition definition_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.definition
    ADD CONSTRAINT definition_pkey PRIMARY KEY (id);


--
-- Name: definition_teams definition_teams_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.definition_teams
    ADD CONSTRAINT definition_teams_pkey PRIMARY KEY (definition_id, team_contact_id);


--
-- Name: definition_terms definition_terms_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.definition_terms
    ADD CONSTRAINT definition_terms_pkey PRIMARY KEY (definition_id, term_id);


--
-- Name: definition definition_text_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.definition
    ADD CONSTRAINT definition_text_key UNIQUE (text);


--
-- Name: dispatch_user dispatch_user_email_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.dispatch_user
    ADD CONSTRAINT dispatch_user_email_key UNIQUE (email);


--
-- Name: dispatch_user dispatch_user_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.dispatch_user
    ADD CONSTRAINT dispatch_user_pkey PRIMARY KEY (id);


--
-- Name: document_incident_priority document_incident_priority_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.document_incident_priority
    ADD CONSTRAINT document_incident_priority_pkey PRIMARY KEY (incident_priority_id, document_id);


--
-- Name: document_incident_type document_incident_type_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.document_incident_type
    ADD CONSTRAINT document_incident_type_pkey PRIMARY KEY (incident_type_id, document_id);


--
-- Name: document document_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.document
    ADD CONSTRAINT document_pkey PRIMARY KEY (id);


--
-- Name: document_terms document_terms_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.document_terms
    ADD CONSTRAINT document_terms_pkey PRIMARY KEY (term_id, document_id);


--
-- Name: event event_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.event
    ADD CONSTRAINT event_pkey PRIMARY KEY (id);


--
-- Name: event event_uuid_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.event
    ADD CONSTRAINT event_uuid_key UNIQUE (uuid);


--
-- Name: feedback feedback_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.feedback
    ADD CONSTRAINT feedback_pkey PRIMARY KEY (id);


--
-- Name: group group_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."group"
    ADD CONSTRAINT group_pkey PRIMARY KEY (id);


--
-- Name: incident incident_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.incident
    ADD CONSTRAINT incident_pkey PRIMARY KEY (id);


--
-- Name: incident_priority incident_priority_name_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.incident_priority
    ADD CONSTRAINT incident_priority_name_key UNIQUE (name);


--
-- Name: incident_priority incident_priority_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.incident_priority
    ADD CONSTRAINT incident_priority_pkey PRIMARY KEY (id);


--
-- Name: incident_type incident_type_name_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.incident_type
    ADD CONSTRAINT incident_type_name_key UNIQUE (name);


--
-- Name: incident_type incident_type_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.incident_type
    ADD CONSTRAINT incident_type_pkey PRIMARY KEY (id);


--
-- Name: individual_contact individual_contact_email_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.individual_contact
    ADD CONSTRAINT individual_contact_email_key UNIQUE (email);


--
-- Name: individual_contact individual_contact_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.individual_contact
    ADD CONSTRAINT individual_contact_pkey PRIMARY KEY (id);


--
-- Name: notification notification_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.notification
    ADD CONSTRAINT notification_pkey PRIMARY KEY (id);


--
-- Name: participant participant_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.participant
    ADD CONSTRAINT participant_pkey PRIMARY KEY (id);


--
-- Name: participant_role participant_role_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.participant_role
    ADD CONSTRAINT participant_role_pkey PRIMARY KEY (id);


--
-- Name: plugin plugin_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.plugin
    ADD CONSTRAINT plugin_pkey PRIMARY KEY (id);


--
-- Name: plugin plugin_slug_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.plugin
    ADD CONSTRAINT plugin_slug_key UNIQUE (slug);


--
-- Name: recommendation_accuracy recommendation_accuracy_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.recommendation_accuracy
    ADD CONSTRAINT recommendation_accuracy_pkey PRIMARY KEY (id);


--
-- Name: recommendation_documents recommendation_documents_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.recommendation_documents
    ADD CONSTRAINT recommendation_documents_pkey PRIMARY KEY (document_id, recommendation_id);


--
-- Name: recommendation_incident_priorities recommendation_incident_priorities_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.recommendation_incident_priorities
    ADD CONSTRAINT recommendation_incident_priorities_pkey PRIMARY KEY (incident_priority_id, recommendation_id);


--
-- Name: recommendation_incident_types recommendation_incident_types_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.recommendation_incident_types
    ADD CONSTRAINT recommendation_incident_types_pkey PRIMARY KEY (incident_type_id, recommendation_id);


--
-- Name: recommendation_individual_contacts recommendation_individual_contacts_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.recommendation_individual_contacts
    ADD CONSTRAINT recommendation_individual_contacts_pkey PRIMARY KEY (individual_contact_id, recommendation_id);


--
-- Name: recommendation recommendation_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.recommendation
    ADD CONSTRAINT recommendation_pkey PRIMARY KEY (id);


--
-- Name: recommendation_services recommendation_services_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.recommendation_services
    ADD CONSTRAINT recommendation_services_pkey PRIMARY KEY (service_id, recommendation_id);


--
-- Name: recommendation_team_contacts recommendation_team_contacts_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.recommendation_team_contacts
    ADD CONSTRAINT recommendation_team_contacts_pkey PRIMARY KEY (team_contact_id, recommendation_id);


--
-- Name: recommendation_terms recommendation_terms_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.recommendation_terms
    ADD CONSTRAINT recommendation_terms_pkey PRIMARY KEY (term_id, recommendation_id);


--
-- Name: report report_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.report
    ADD CONSTRAINT report_pkey PRIMARY KEY (id);


--
-- Name: search_filter search_filter_name_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.search_filter
    ADD CONSTRAINT search_filter_name_key UNIQUE (name);


--
-- Name: search_filter search_filter_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.search_filter
    ADD CONSTRAINT search_filter_pkey PRIMARY KEY (id);


--
-- Name: service_incident service_incident_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.service_incident
    ADD CONSTRAINT service_incident_pkey PRIMARY KEY (incident_id, service_id);


--
-- Name: service_incident_priority service_incident_priority_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.service_incident_priority
    ADD CONSTRAINT service_incident_priority_pkey PRIMARY KEY (incident_priority_id, service_id);


--
-- Name: service_incident_type service_incident_type_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.service_incident_type
    ADD CONSTRAINT service_incident_type_pkey PRIMARY KEY (incident_type_id, service_id);


--
-- Name: service service_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.service
    ADD CONSTRAINT service_pkey PRIMARY KEY (id);


--
-- Name: service_terms service_terms_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.service_terms
    ADD CONSTRAINT service_terms_pkey PRIMARY KEY (term_id, service_id);


--
-- Name: storage storage_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.storage
    ADD CONSTRAINT storage_pkey PRIMARY KEY (id);


--
-- Name: tag tag_name_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.tag
    ADD CONSTRAINT tag_name_key UNIQUE (name);


--
-- Name: tag tag_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.tag
    ADD CONSTRAINT tag_pkey PRIMARY KEY (id);


--
-- Name: tag_type tag_type_name_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.tag_type
    ADD CONSTRAINT tag_type_name_key UNIQUE (name);


--
-- Name: tag_type tag_type_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.tag_type
    ADD CONSTRAINT tag_type_pkey PRIMARY KEY (id);


--
-- Name: task_assignees task_assignees_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.task_assignees
    ADD CONSTRAINT task_assignees_pkey PRIMARY KEY (participant_id, task_id);


--
-- Name: task task_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.task
    ADD CONSTRAINT task_pkey PRIMARY KEY (id);


--
-- Name: task_tickets task_tickets_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.task_tickets
    ADD CONSTRAINT task_tickets_pkey PRIMARY KEY (ticket_id, task_id);


--
-- Name: team_contact team_contact_email_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.team_contact
    ADD CONSTRAINT team_contact_email_key UNIQUE (email);


--
-- Name: team_contact_incident team_contact_incident_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.team_contact_incident
    ADD CONSTRAINT team_contact_incident_pkey PRIMARY KEY (incident_id, team_contact_id);


--
-- Name: team_contact_incident_priority team_contact_incident_priority_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.team_contact_incident_priority
    ADD CONSTRAINT team_contact_incident_priority_pkey PRIMARY KEY (incident_priority_id, team_contact_id);


--
-- Name: team_contact_incident_type team_contact_incident_type_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.team_contact_incident_type
    ADD CONSTRAINT team_contact_incident_type_pkey PRIMARY KEY (incident_type_id, team_contact_id);


--
-- Name: team_contact team_contact_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.team_contact
    ADD CONSTRAINT team_contact_pkey PRIMARY KEY (id);


--
-- Name: team_contact_terms team_contact_terms_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.team_contact_terms
    ADD CONSTRAINT team_contact_terms_pkey PRIMARY KEY (term_id, team_contact_id);


--
-- Name: term term_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.term
    ADD CONSTRAINT term_pkey PRIMARY KEY (id);


--
-- Name: term term_text_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.term
    ADD CONSTRAINT term_text_key UNIQUE (text);


--
-- Name: ticket ticket_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ticket
    ADD CONSTRAINT ticket_pkey PRIMARY KEY (id);


--
-- Name: workflow_incident_priority workflow_incident_priority_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.workflow_incident_priority
    ADD CONSTRAINT workflow_incident_priority_pkey PRIMARY KEY (incident_priority_id, workflow_id);


--
-- Name: workflow_incident_type workflow_incident_type_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.workflow_incident_type
    ADD CONSTRAINT workflow_incident_type_pkey PRIMARY KEY (incident_type_id, workflow_id);


--
-- Name: workflow_instance_artifact workflow_instance_artifact_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.workflow_instance_artifact
    ADD CONSTRAINT workflow_instance_artifact_pkey PRIMARY KEY (document_id, workflow_instance_id);


--
-- Name: workflow_instance workflow_instance_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.workflow_instance
    ADD CONSTRAINT workflow_instance_pkey PRIMARY KEY (id);


--
-- Name: workflow workflow_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.workflow
    ADD CONSTRAINT workflow_pkey PRIMARY KEY (id);


--
-- Name: workflow_term workflow_term_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.workflow_term
    ADD CONSTRAINT workflow_term_pkey PRIMARY KEY (term_id, workflow_id);


--
-- Name: dispatch_user_search_vector_idx; Type: INDEX; Schema: dispatch_core; Owner: postgres
--

CREATE INDEX dispatch_user_search_vector_idx ON dispatch_core.dispatch_user USING gin (search_vector);


--
-- Name: organization_search_vector_idx; Type: INDEX; Schema: dispatch_core; Owner: postgres
--

CREATE INDEX organization_search_vector_idx ON dispatch_core.organization USING gin (search_vector);


--
-- Name: plugin_event_search_vector_idx; Type: INDEX; Schema: dispatch_core; Owner: postgres
--

CREATE INDEX plugin_event_search_vector_idx ON dispatch_core.plugin_event USING gin (search_vector);


--
-- Name: plugin_search_vector_idx; Type: INDEX; Schema: dispatch_core; Owner: postgres
--

CREATE INDEX plugin_search_vector_idx ON dispatch_core.plugin USING gin (search_vector);


--
-- Name: alert_search_vector_idx; Type: INDEX; Schema: dispatch_organization_default; Owner: postgres
--

CREATE INDEX alert_search_vector_idx ON dispatch_organization_default.alert USING gin (search_vector);


--
-- Name: case_priority_search_vector_idx; Type: INDEX; Schema: dispatch_organization_default; Owner: postgres
--

CREATE INDEX case_priority_search_vector_idx ON dispatch_organization_default.case_priority USING gin (search_vector);


--
-- Name: case_search_vector_idx; Type: INDEX; Schema: dispatch_organization_default; Owner: postgres
--

CREATE INDEX case_search_vector_idx ON dispatch_organization_default."case" USING gin (search_vector);


--
-- Name: case_severity_search_vector_idx; Type: INDEX; Schema: dispatch_organization_default; Owner: postgres
--

CREATE INDEX case_severity_search_vector_idx ON dispatch_organization_default.case_severity USING gin (search_vector);


--
-- Name: case_type_search_vector_idx; Type: INDEX; Schema: dispatch_organization_default; Owner: postgres
--

CREATE INDEX case_type_search_vector_idx ON dispatch_organization_default.case_type USING gin (search_vector);


--
-- Name: cost_model_search_vector_idx; Type: INDEX; Schema: dispatch_organization_default; Owner: postgres
--

CREATE INDEX cost_model_search_vector_idx ON dispatch_organization_default.cost_model USING gin (search_vector);


--
-- Name: definition_search_vector_idx; Type: INDEX; Schema: dispatch_organization_default; Owner: postgres
--

CREATE INDEX definition_search_vector_idx ON dispatch_organization_default.definition USING gin (search_vector);


--
-- Name: document_search_vector_idx; Type: INDEX; Schema: dispatch_organization_default; Owner: postgres
--

CREATE INDEX document_search_vector_idx ON dispatch_organization_default.document USING gin (search_vector);


--
-- Name: entity_type_search_vector_idx; Type: INDEX; Schema: dispatch_organization_default; Owner: postgres
--

CREATE INDEX entity_type_search_vector_idx ON dispatch_organization_default.entity_type USING gin (search_vector);


--
-- Name: event_search_vector_idx; Type: INDEX; Schema: dispatch_organization_default; Owner: postgres
--

CREATE INDEX event_search_vector_idx ON dispatch_organization_default.event USING gin (search_vector);


--
-- Name: feedback_search_vector_idx; Type: INDEX; Schema: dispatch_organization_default; Owner: postgres
--

CREATE INDEX feedback_search_vector_idx ON dispatch_organization_default.feedback USING gin (search_vector);


--
-- Name: incident_cost_type_search_vector_idx; Type: INDEX; Schema: dispatch_organization_default; Owner: postgres
--

CREATE INDEX incident_cost_type_search_vector_idx ON dispatch_organization_default.incident_cost_type USING gin (search_vector);


--
-- Name: incident_priority_search_vector_idx; Type: INDEX; Schema: dispatch_organization_default; Owner: postgres
--

CREATE INDEX incident_priority_search_vector_idx ON dispatch_organization_default.incident_priority USING gin (search_vector);


--
-- Name: incident_search_vector_idx; Type: INDEX; Schema: dispatch_organization_default; Owner: postgres
--

CREATE INDEX incident_search_vector_idx ON dispatch_organization_default.incident USING gin (search_vector);


--
-- Name: incident_severity_search_vector_idx; Type: INDEX; Schema: dispatch_organization_default; Owner: postgres
--

CREATE INDEX incident_severity_search_vector_idx ON dispatch_organization_default.incident_severity USING gin (search_vector);


--
-- Name: incident_type_search_vector_idx; Type: INDEX; Schema: dispatch_organization_default; Owner: postgres
--

CREATE INDEX incident_type_search_vector_idx ON dispatch_organization_default.incident_type USING gin (search_vector);


--
-- Name: individual_contact_search_vector_idx; Type: INDEX; Schema: dispatch_organization_default; Owner: postgres
--

CREATE INDEX individual_contact_search_vector_idx ON dispatch_organization_default.individual_contact USING gin (search_vector);


--
-- Name: ix_entity_search_vector; Type: INDEX; Schema: dispatch_organization_default; Owner: postgres
--

CREATE INDEX ix_entity_search_vector ON dispatch_organization_default.entity USING gin (search_vector);


--
-- Name: notification_search_vector_idx; Type: INDEX; Schema: dispatch_organization_default; Owner: postgres
--

CREATE INDEX notification_search_vector_idx ON dispatch_organization_default.notification USING gin (search_vector);


--
-- Name: project_search_vector_idx; Type: INDEX; Schema: dispatch_organization_default; Owner: postgres
--

CREATE INDEX project_search_vector_idx ON dispatch_organization_default.project USING gin (search_vector);


--
-- Name: query_search_vector_idx; Type: INDEX; Schema: dispatch_organization_default; Owner: postgres
--

CREATE INDEX query_search_vector_idx ON dispatch_organization_default.query USING gin (search_vector);


--
-- Name: report_search_vector_idx; Type: INDEX; Schema: dispatch_organization_default; Owner: postgres
--

CREATE INDEX report_search_vector_idx ON dispatch_organization_default.report USING gin (search_vector);


--
-- Name: search_filter_search_vector_idx; Type: INDEX; Schema: dispatch_organization_default; Owner: postgres
--

CREATE INDEX search_filter_search_vector_idx ON dispatch_organization_default.search_filter USING gin (search_vector);


--
-- Name: service_feedback_search_vector_idx; Type: INDEX; Schema: dispatch_organization_default; Owner: postgres
--

CREATE INDEX service_feedback_search_vector_idx ON dispatch_organization_default.service_feedback USING gin (search_vector);


--
-- Name: service_search_vector_idx; Type: INDEX; Schema: dispatch_organization_default; Owner: postgres
--

CREATE INDEX service_search_vector_idx ON dispatch_organization_default.service USING gin (search_vector);


--
-- Name: signal_engagement_search_vector_idx; Type: INDEX; Schema: dispatch_organization_default; Owner: postgres
--

CREATE INDEX signal_engagement_search_vector_idx ON dispatch_organization_default.signal_engagement USING gin (search_vector);


--
-- Name: signal_filter_search_vector_idx; Type: INDEX; Schema: dispatch_organization_default; Owner: postgres
--

CREATE INDEX signal_filter_search_vector_idx ON dispatch_organization_default.signal_filter USING gin (search_vector);


--
-- Name: signal_search_vector_idx; Type: INDEX; Schema: dispatch_organization_default; Owner: postgres
--

CREATE INDEX signal_search_vector_idx ON dispatch_organization_default.signal USING gin (search_vector);


--
-- Name: source_data_format_search_vector_idx; Type: INDEX; Schema: dispatch_organization_default; Owner: postgres
--

CREATE INDEX source_data_format_search_vector_idx ON dispatch_organization_default.source_data_format USING gin (search_vector);


--
-- Name: source_environment_search_vector_idx; Type: INDEX; Schema: dispatch_organization_default; Owner: postgres
--

CREATE INDEX source_environment_search_vector_idx ON dispatch_organization_default.source_environment USING gin (search_vector);


--
-- Name: source_search_vector_idx; Type: INDEX; Schema: dispatch_organization_default; Owner: postgres
--

CREATE INDEX source_search_vector_idx ON dispatch_organization_default.source USING gin (search_vector);


--
-- Name: source_status_search_vector_idx; Type: INDEX; Schema: dispatch_organization_default; Owner: postgres
--

CREATE INDEX source_status_search_vector_idx ON dispatch_organization_default.source_status USING gin (search_vector);


--
-- Name: source_transport_search_vector_idx; Type: INDEX; Schema: dispatch_organization_default; Owner: postgres
--

CREATE INDEX source_transport_search_vector_idx ON dispatch_organization_default.source_transport USING gin (search_vector);


--
-- Name: source_type_search_vector_idx; Type: INDEX; Schema: dispatch_organization_default; Owner: postgres
--

CREATE INDEX source_type_search_vector_idx ON dispatch_organization_default.source_type USING gin (search_vector);


--
-- Name: tag_search_vector_idx; Type: INDEX; Schema: dispatch_organization_default; Owner: postgres
--

CREATE INDEX tag_search_vector_idx ON dispatch_organization_default.tag USING gin (search_vector);


--
-- Name: tag_type_search_vector_idx; Type: INDEX; Schema: dispatch_organization_default; Owner: postgres
--

CREATE INDEX tag_type_search_vector_idx ON dispatch_organization_default.tag_type USING gin (search_vector);


--
-- Name: task_search_vector_idx; Type: INDEX; Schema: dispatch_organization_default; Owner: postgres
--

CREATE INDEX task_search_vector_idx ON dispatch_organization_default.task USING gin (search_vector);


--
-- Name: team_contact_search_vector_idx; Type: INDEX; Schema: dispatch_organization_default; Owner: postgres
--

CREATE INDEX team_contact_search_vector_idx ON dispatch_organization_default.team_contact USING gin (search_vector);


--
-- Name: term_search_vector_idx; Type: INDEX; Schema: dispatch_organization_default; Owner: postgres
--

CREATE INDEX term_search_vector_idx ON dispatch_organization_default.term USING gin (search_vector);


--
-- Name: workflow_search_vector_idx; Type: INDEX; Schema: dispatch_organization_default; Owner: postgres
--

CREATE INDEX workflow_search_vector_idx ON dispatch_organization_default.workflow USING gin (search_vector);


--
-- Name: ix_definition_search_vector; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ix_definition_search_vector ON public.definition USING gin (search_vector);


--
-- Name: ix_dispatch_user_search_vector; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ix_dispatch_user_search_vector ON public.dispatch_user USING gin (search_vector);


--
-- Name: ix_document_search_vector; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ix_document_search_vector ON public.document USING gin (search_vector);


--
-- Name: ix_event_search_vector; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ix_event_search_vector ON public.event USING gin (search_vector);


--
-- Name: ix_incident_priority_search_vector; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ix_incident_priority_search_vector ON public.incident_priority USING gin (search_vector);


--
-- Name: ix_incident_search_vector; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ix_incident_search_vector ON public.incident USING gin (search_vector);


--
-- Name: ix_incident_type_search_vector; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ix_incident_type_search_vector ON public.incident_type USING gin (search_vector);


--
-- Name: ix_individual_contact_search_vector; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ix_individual_contact_search_vector ON public.individual_contact USING gin (search_vector);


--
-- Name: ix_notification_search_vector; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ix_notification_search_vector ON public.notification USING gin (search_vector);


--
-- Name: ix_plugin_search_vector; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ix_plugin_search_vector ON public.plugin USING gin (search_vector);


--
-- Name: ix_report_search_vector; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ix_report_search_vector ON public.report USING gin (search_vector);


--
-- Name: ix_search_filter_search_vector; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ix_search_filter_search_vector ON public.search_filter USING gin (search_vector);


--
-- Name: ix_service_search_vector; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ix_service_search_vector ON public.service USING gin (search_vector);


--
-- Name: ix_tag_search_vector; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ix_tag_search_vector ON public.tag USING gin (search_vector);


--
-- Name: ix_tag_type_search_vector; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ix_tag_type_search_vector ON public.tag_type USING gin (search_vector);


--
-- Name: ix_task_search_vector; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ix_task_search_vector ON public.task USING gin (search_vector);


--
-- Name: ix_team_contact_search_vector; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ix_team_contact_search_vector ON public.team_contact USING gin (search_vector);


--
-- Name: ix_term_search_vector; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ix_term_search_vector ON public.term USING gin (search_vector);


--
-- Name: ix_workflow_search_vector; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ix_workflow_search_vector ON public.workflow USING gin (search_vector);


--
-- Name: dispatch_user dispatch_user_search_vector_trigger; Type: TRIGGER; Schema: dispatch_core; Owner: postgres
--

CREATE TRIGGER dispatch_user_search_vector_trigger BEFORE INSERT OR UPDATE ON dispatch_core.dispatch_user FOR EACH ROW EXECUTE FUNCTION dispatch_core.dispatch_user_search_vector_update();


--
-- Name: organization organization_search_vector_trigger; Type: TRIGGER; Schema: dispatch_core; Owner: postgres
--

CREATE TRIGGER organization_search_vector_trigger BEFORE INSERT OR UPDATE ON dispatch_core.organization FOR EACH ROW EXECUTE FUNCTION dispatch_core.organization_search_vector_update();


--
-- Name: plugin plugin_search_vector_trigger; Type: TRIGGER; Schema: dispatch_core; Owner: postgres
--

CREATE TRIGGER plugin_search_vector_trigger BEFORE INSERT OR UPDATE ON dispatch_core.plugin FOR EACH ROW EXECUTE FUNCTION dispatch_core.plugin_search_vector_update();


--
-- Name: alert alert_search_vector_trigger; Type: TRIGGER; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TRIGGER alert_search_vector_trigger BEFORE INSERT OR UPDATE ON dispatch_organization_default.alert FOR EACH ROW EXECUTE FUNCTION tsvector_update_trigger('search_vector', 'pg_catalog.english', 'name');


--
-- Name: definition definition_search_vector_trigger; Type: TRIGGER; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TRIGGER definition_search_vector_trigger BEFORE INSERT OR UPDATE ON dispatch_organization_default.definition FOR EACH ROW EXECUTE FUNCTION tsvector_update_trigger('search_vector', 'pg_catalog.english', 'text');


--
-- Name: document document_search_vector_trigger; Type: TRIGGER; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TRIGGER document_search_vector_trigger BEFORE INSERT OR UPDATE ON dispatch_organization_default.document FOR EACH ROW EXECUTE FUNCTION tsvector_update_trigger('search_vector', 'pg_catalog.english', 'name');


--
-- Name: entity_type entity_type_search_vector_trigger; Type: TRIGGER; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TRIGGER entity_type_search_vector_trigger BEFORE INSERT OR UPDATE ON dispatch_organization_default.entity_type FOR EACH ROW EXECUTE FUNCTION tsvector_update_trigger('search_vector', 'pg_catalog.english', 'name', 'description');


--
-- Name: event event_search_vector_trigger; Type: TRIGGER; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TRIGGER event_search_vector_trigger BEFORE INSERT OR UPDATE ON dispatch_organization_default.event FOR EACH ROW EXECUTE FUNCTION dispatch_organization_default.event_search_vector_update();


--
-- Name: feedback feedback_search_vector_trigger; Type: TRIGGER; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TRIGGER feedback_search_vector_trigger BEFORE INSERT OR UPDATE ON dispatch_organization_default.feedback FOR EACH ROW EXECUTE FUNCTION tsvector_update_trigger('search_vector', 'pg_catalog.english', 'feedback', 'rating');


--
-- Name: incident_cost_type incident_cost_type_search_vector_trigger; Type: TRIGGER; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TRIGGER incident_cost_type_search_vector_trigger BEFORE INSERT OR UPDATE ON dispatch_organization_default.incident_cost_type FOR EACH ROW EXECUTE FUNCTION dispatch_organization_default.incident_cost_type_search_vector_update();


--
-- Name: incident_priority incident_priority_search_vector_trigger; Type: TRIGGER; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TRIGGER incident_priority_search_vector_trigger BEFORE INSERT OR UPDATE ON dispatch_organization_default.incident_priority FOR EACH ROW EXECUTE FUNCTION tsvector_update_trigger('search_vector', 'pg_catalog.english', 'name', 'description');


--
-- Name: incident incident_search_vector_trigger; Type: TRIGGER; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TRIGGER incident_search_vector_trigger BEFORE INSERT OR UPDATE ON dispatch_organization_default.incident FOR EACH ROW EXECUTE FUNCTION dispatch_organization_default.incident_search_vector_update();


--
-- Name: incident_type incident_type_search_vector_trigger; Type: TRIGGER; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TRIGGER incident_type_search_vector_trigger BEFORE INSERT OR UPDATE ON dispatch_organization_default.incident_type FOR EACH ROW EXECUTE FUNCTION tsvector_update_trigger('search_vector', 'pg_catalog.english', 'name', 'description');


--
-- Name: individual_contact individual_contact_search_vector_trigger; Type: TRIGGER; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TRIGGER individual_contact_search_vector_trigger BEFORE INSERT OR UPDATE ON dispatch_organization_default.individual_contact FOR EACH ROW EXECUTE FUNCTION tsvector_update_trigger('search_vector', 'pg_catalog.english', 'name', 'title', 'email', 'company', 'notes');


--
-- Name: notification notification_search_vector_trigger; Type: TRIGGER; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TRIGGER notification_search_vector_trigger BEFORE INSERT OR UPDATE ON dispatch_organization_default.notification FOR EACH ROW EXECUTE FUNCTION tsvector_update_trigger('search_vector', 'pg_catalog.english', 'name', 'description');


--
-- Name: project project_search_vector_trigger; Type: TRIGGER; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TRIGGER project_search_vector_trigger BEFORE INSERT OR UPDATE ON dispatch_organization_default.project FOR EACH ROW EXECUTE FUNCTION dispatch_organization_default.project_search_vector_update();


--
-- Name: query query_search_vector_trigger; Type: TRIGGER; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TRIGGER query_search_vector_trigger BEFORE INSERT OR UPDATE ON dispatch_organization_default.query FOR EACH ROW EXECUTE FUNCTION tsvector_update_trigger('search_vector', 'pg_catalog.english', 'name');


--
-- Name: report report_search_vector_trigger; Type: TRIGGER; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TRIGGER report_search_vector_trigger BEFORE INSERT OR UPDATE ON dispatch_organization_default.report FOR EACH ROW EXECUTE FUNCTION tsvector_update_trigger('search_vector', 'pg_catalog.english', 'details_raw');


--
-- Name: search_filter search_filter_search_vector_trigger; Type: TRIGGER; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TRIGGER search_filter_search_vector_trigger BEFORE INSERT OR UPDATE ON dispatch_organization_default.search_filter FOR EACH ROW EXECUTE FUNCTION dispatch_organization_default.search_filter_search_vector_update();


--
-- Name: service service_search_vector_trigger; Type: TRIGGER; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TRIGGER service_search_vector_trigger BEFORE INSERT OR UPDATE ON dispatch_organization_default.service FOR EACH ROW EXECUTE FUNCTION tsvector_update_trigger('search_vector', 'pg_catalog.english', 'name');


--
-- Name: signal_filter signal_filter_search_vector_trigger; Type: TRIGGER; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TRIGGER signal_filter_search_vector_trigger BEFORE INSERT OR UPDATE ON dispatch_organization_default.signal_filter FOR EACH ROW EXECUTE FUNCTION tsvector_update_trigger('search_vector', 'pg_catalog.english', 'name', 'description');


--
-- Name: signal signal_search_vector_trigger; Type: TRIGGER; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TRIGGER signal_search_vector_trigger BEFORE INSERT OR UPDATE ON dispatch_organization_default.signal FOR EACH ROW EXECUTE FUNCTION tsvector_update_trigger('search_vector', 'pg_catalog.english', 'name', 'description', 'variant');


--
-- Name: source_data_format source_data_format_search_vector_trigger; Type: TRIGGER; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TRIGGER source_data_format_search_vector_trigger BEFORE INSERT OR UPDATE ON dispatch_organization_default.source_data_format FOR EACH ROW EXECUTE FUNCTION tsvector_update_trigger('search_vector', 'pg_catalog.english', 'name');


--
-- Name: source_environment source_environment_search_vector_trigger; Type: TRIGGER; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TRIGGER source_environment_search_vector_trigger BEFORE INSERT OR UPDATE ON dispatch_organization_default.source_environment FOR EACH ROW EXECUTE FUNCTION tsvector_update_trigger('search_vector', 'pg_catalog.english', 'name');


--
-- Name: source source_search_vector_trigger; Type: TRIGGER; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TRIGGER source_search_vector_trigger BEFORE INSERT OR UPDATE ON dispatch_organization_default.source FOR EACH ROW EXECUTE FUNCTION tsvector_update_trigger('search_vector', 'pg_catalog.english', 'name');


--
-- Name: source_status source_status_search_vector_trigger; Type: TRIGGER; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TRIGGER source_status_search_vector_trigger BEFORE INSERT OR UPDATE ON dispatch_organization_default.source_status FOR EACH ROW EXECUTE FUNCTION tsvector_update_trigger('search_vector', 'pg_catalog.english', 'name');


--
-- Name: source_transport source_transport_search_vector_trigger; Type: TRIGGER; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TRIGGER source_transport_search_vector_trigger BEFORE INSERT OR UPDATE ON dispatch_organization_default.source_transport FOR EACH ROW EXECUTE FUNCTION tsvector_update_trigger('search_vector', 'pg_catalog.english', 'name');


--
-- Name: source_type source_type_search_vector_trigger; Type: TRIGGER; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TRIGGER source_type_search_vector_trigger BEFORE INSERT OR UPDATE ON dispatch_organization_default.source_type FOR EACH ROW EXECUTE FUNCTION tsvector_update_trigger('search_vector', 'pg_catalog.english', 'name');


--
-- Name: tag tag_search_vector_trigger; Type: TRIGGER; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TRIGGER tag_search_vector_trigger BEFORE INSERT OR UPDATE ON dispatch_organization_default.tag FOR EACH ROW EXECUTE FUNCTION tsvector_update_trigger('search_vector', 'pg_catalog.english', 'name', 'description', 'external_id');


--
-- Name: tag_type tag_type_search_vector_trigger; Type: TRIGGER; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TRIGGER tag_type_search_vector_trigger BEFORE INSERT OR UPDATE ON dispatch_organization_default.tag_type FOR EACH ROW EXECUTE FUNCTION tsvector_update_trigger('search_vector', 'pg_catalog.english', 'name');


--
-- Name: task task_search_vector_trigger; Type: TRIGGER; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TRIGGER task_search_vector_trigger BEFORE INSERT OR UPDATE ON dispatch_organization_default.task FOR EACH ROW EXECUTE FUNCTION tsvector_update_trigger('search_vector', 'pg_catalog.english', 'description');


--
-- Name: team_contact team_contact_search_vector_trigger; Type: TRIGGER; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TRIGGER team_contact_search_vector_trigger BEFORE INSERT OR UPDATE ON dispatch_organization_default.team_contact FOR EACH ROW EXECUTE FUNCTION dispatch_organization_default.team_contact_search_vector_update();


--
-- Name: term term_search_vector_trigger; Type: TRIGGER; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TRIGGER term_search_vector_trigger BEFORE INSERT OR UPDATE ON dispatch_organization_default.term FOR EACH ROW EXECUTE FUNCTION tsvector_update_trigger('search_vector', 'pg_catalog.english', 'text');


--
-- Name: workflow workflow_search_vector_trigger; Type: TRIGGER; Schema: dispatch_organization_default; Owner: postgres
--

CREATE TRIGGER workflow_search_vector_trigger BEFORE INSERT OR UPDATE ON dispatch_organization_default.workflow FOR EACH ROW EXECUTE FUNCTION tsvector_update_trigger('search_vector', 'pg_catalog.english', 'name', 'description');


--
-- Name: definition definition_search_vector_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER definition_search_vector_trigger BEFORE INSERT OR UPDATE ON public.definition FOR EACH ROW EXECUTE FUNCTION tsvector_update_trigger('search_vector', 'pg_catalog.english', 'text');


--
-- Name: dispatch_user dispatch_user_search_vector_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER dispatch_user_search_vector_trigger BEFORE INSERT OR UPDATE ON public.dispatch_user FOR EACH ROW EXECUTE FUNCTION tsvector_update_trigger('search_vector', 'pg_catalog.english', 'email');


--
-- Name: document document_search_vector_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER document_search_vector_trigger BEFORE INSERT OR UPDATE ON public.document FOR EACH ROW EXECUTE FUNCTION tsvector_update_trigger('search_vector', 'pg_catalog.english', 'name');


--
-- Name: incident incident_search_vector_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER incident_search_vector_trigger BEFORE INSERT OR UPDATE ON public.incident FOR EACH ROW EXECUTE FUNCTION tsvector_update_trigger('search_vector', 'pg_catalog.english', 'name', 'title', 'description');


--
-- Name: incident_type incident_type_search_vector_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER incident_type_search_vector_trigger BEFORE INSERT OR UPDATE ON public.incident_type FOR EACH ROW EXECUTE FUNCTION tsvector_update_trigger('search_vector', 'pg_catalog.english', 'name', 'description');


--
-- Name: individual_contact individual_contact_search_vector_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER individual_contact_search_vector_trigger BEFORE INSERT OR UPDATE ON public.individual_contact FOR EACH ROW EXECUTE FUNCTION tsvector_update_trigger('search_vector', 'pg_catalog.english', 'name', 'title', 'company', 'notes');


--
-- Name: plugin plugin_search_vector_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER plugin_search_vector_trigger BEFORE INSERT OR UPDATE ON public.plugin FOR EACH ROW EXECUTE FUNCTION tsvector_update_trigger('search_vector', 'pg_catalog.english', 'title');


--
-- Name: report report_search_vector_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER report_search_vector_trigger BEFORE INSERT OR UPDATE ON public.report FOR EACH ROW EXECUTE FUNCTION tsvector_update_trigger('search_vector', 'pg_catalog.english', 'details_raw');


--
-- Name: search_filter search_filter_search_vector_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER search_filter_search_vector_trigger BEFORE INSERT OR UPDATE ON public.search_filter FOR EACH ROW EXECUTE FUNCTION tsvector_update_trigger('search_vector', 'pg_catalog.english', 'name', 'description');


--
-- Name: service service_search_vector_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER service_search_vector_trigger BEFORE INSERT OR UPDATE ON public.service FOR EACH ROW EXECUTE FUNCTION tsvector_update_trigger('search_vector', 'pg_catalog.english', 'name');


--
-- Name: tag tag_search_vector_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER tag_search_vector_trigger BEFORE INSERT OR UPDATE ON public.tag FOR EACH ROW EXECUTE FUNCTION tsvector_update_trigger('search_vector', 'pg_catalog.english', 'name');


--
-- Name: task task_search_vector_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER task_search_vector_trigger BEFORE INSERT OR UPDATE ON public.task FOR EACH ROW EXECUTE FUNCTION tsvector_update_trigger('search_vector', 'pg_catalog.english', 'description');


--
-- Name: team_contact team_contact_search_vector_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER team_contact_search_vector_trigger BEFORE INSERT OR UPDATE ON public.team_contact FOR EACH ROW EXECUTE FUNCTION tsvector_update_trigger('search_vector', 'pg_catalog.english', 'name', 'company', 'notes');


--
-- Name: term term_search_vector_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER term_search_vector_trigger BEFORE INSERT OR UPDATE ON public.term FOR EACH ROW EXECUTE FUNCTION tsvector_update_trigger('search_vector', 'pg_catalog.english', 'text');


--
-- Name: workflow workflow_search_vector_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER workflow_search_vector_trigger BEFORE INSERT OR UPDATE ON public.workflow FOR EACH ROW EXECUTE FUNCTION tsvector_update_trigger('search_vector', 'pg_catalog.english', 'name', 'description');


--
-- Name: dispatch_user_organization dispatch_user_organization_dispatch_user_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_core; Owner: postgres
--

ALTER TABLE ONLY dispatch_core.dispatch_user_organization
    ADD CONSTRAINT dispatch_user_organization_dispatch_user_id_fkey FOREIGN KEY (dispatch_user_id) REFERENCES dispatch_core.dispatch_user(id);


--
-- Name: dispatch_user_organization dispatch_user_organization_organization_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_core; Owner: postgres
--

ALTER TABLE ONLY dispatch_core.dispatch_user_organization
    ADD CONSTRAINT dispatch_user_organization_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES dispatch_core.organization(id);


--
-- Name: plugin_event plugin_event_plugin_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_core; Owner: postgres
--

ALTER TABLE ONLY dispatch_core.plugin_event
    ADD CONSTRAINT plugin_event_plugin_id_fkey FOREIGN KEY (plugin_id) REFERENCES dispatch_core.plugin(id);


--
-- Name: alert alert_source_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.alert
    ADD CONSTRAINT alert_source_id_fkey FOREIGN KEY (source_id) REFERENCES dispatch_organization_default.source(id);


--
-- Name: assoc_case_incidents assoc_case_incidents_case_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.assoc_case_incidents
    ADD CONSTRAINT assoc_case_incidents_case_id_fkey FOREIGN KEY (case_id) REFERENCES dispatch_organization_default."case"(id) ON DELETE CASCADE;


--
-- Name: assoc_case_incidents assoc_case_incidents_incident_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.assoc_case_incidents
    ADD CONSTRAINT assoc_case_incidents_incident_id_fkey FOREIGN KEY (incident_id) REFERENCES dispatch_organization_default.incident(id) ON DELETE CASCADE;


--
-- Name: assoc_case_tags assoc_case_tags_case_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.assoc_case_tags
    ADD CONSTRAINT assoc_case_tags_case_id_fkey FOREIGN KEY (case_id) REFERENCES dispatch_organization_default."case"(id) ON DELETE CASCADE;


--
-- Name: assoc_case_tags assoc_case_tags_tag_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.assoc_case_tags
    ADD CONSTRAINT assoc_case_tags_tag_id_fkey FOREIGN KEY (tag_id) REFERENCES dispatch_organization_default.tag(id) ON DELETE CASCADE;


--
-- Name: assoc_cost_model_activities assoc_cost_model_activities_cost_model_activity_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.assoc_cost_model_activities
    ADD CONSTRAINT assoc_cost_model_activities_cost_model_activity_id_fkey FOREIGN KEY (cost_model_activity_id) REFERENCES dispatch_organization_default.cost_model_activity(id) ON DELETE CASCADE;


--
-- Name: assoc_cost_model_activities assoc_cost_model_activities_cost_model_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.assoc_cost_model_activities
    ADD CONSTRAINT assoc_cost_model_activities_cost_model_id_fkey FOREIGN KEY (cost_model_id) REFERENCES dispatch_organization_default.cost_model(id) ON DELETE CASCADE;


--
-- Name: assoc_document_filters assoc_document_filters_document_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.assoc_document_filters
    ADD CONSTRAINT assoc_document_filters_document_id_fkey FOREIGN KEY (document_id) REFERENCES dispatch_organization_default.document(id) ON DELETE CASCADE;


--
-- Name: assoc_document_filters assoc_document_filters_search_filter_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.assoc_document_filters
    ADD CONSTRAINT assoc_document_filters_search_filter_id_fkey FOREIGN KEY (search_filter_id) REFERENCES dispatch_organization_default.search_filter(id) ON DELETE CASCADE;


--
-- Name: assoc_incident_tags assoc_incident_tags_incident_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.assoc_incident_tags
    ADD CONSTRAINT assoc_incident_tags_incident_id_fkey FOREIGN KEY (incident_id) REFERENCES dispatch_organization_default.incident(id) ON DELETE CASCADE;


--
-- Name: assoc_incident_tags assoc_incident_tags_tag_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.assoc_incident_tags
    ADD CONSTRAINT assoc_incident_tags_tag_id_fkey FOREIGN KEY (tag_id) REFERENCES dispatch_organization_default.tag(id) ON DELETE CASCADE;


--
-- Name: assoc_incident_terms assoc_incident_terms_incident_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.assoc_incident_terms
    ADD CONSTRAINT assoc_incident_terms_incident_id_fkey FOREIGN KEY (incident_id) REFERENCES dispatch_organization_default.incident(id) ON DELETE CASCADE;


--
-- Name: assoc_incident_terms assoc_incident_terms_term_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.assoc_incident_terms
    ADD CONSTRAINT assoc_incident_terms_term_id_fkey FOREIGN KEY (term_id) REFERENCES dispatch_organization_default.term(id) ON DELETE CASCADE;


--
-- Name: assoc_individual_contact_filters assoc_individual_contact_filters_individual_contact_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.assoc_individual_contact_filters
    ADD CONSTRAINT assoc_individual_contact_filters_individual_contact_id_fkey FOREIGN KEY (individual_contact_id) REFERENCES dispatch_organization_default.individual_contact(id) ON DELETE CASCADE;


--
-- Name: assoc_individual_contact_filters assoc_individual_contact_filters_search_filter_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.assoc_individual_contact_filters
    ADD CONSTRAINT assoc_individual_contact_filters_search_filter_id_fkey FOREIGN KEY (search_filter_id) REFERENCES dispatch_organization_default.search_filter(id) ON DELETE CASCADE;


--
-- Name: assoc_notification_filters assoc_notification_filters_notification_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.assoc_notification_filters
    ADD CONSTRAINT assoc_notification_filters_notification_id_fkey FOREIGN KEY (notification_id) REFERENCES dispatch_organization_default.notification(id) ON DELETE CASCADE;


--
-- Name: assoc_notification_filters assoc_notification_filters_search_filter_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.assoc_notification_filters
    ADD CONSTRAINT assoc_notification_filters_search_filter_id_fkey FOREIGN KEY (search_filter_id) REFERENCES dispatch_organization_default.search_filter(id) ON DELETE CASCADE;


--
-- Name: assoc_query_incidents assoc_query_incidents_incident_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.assoc_query_incidents
    ADD CONSTRAINT assoc_query_incidents_incident_id_fkey FOREIGN KEY (incident_id) REFERENCES dispatch_organization_default.incident(id) ON DELETE CASCADE;


--
-- Name: assoc_query_incidents assoc_query_incidents_query_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.assoc_query_incidents
    ADD CONSTRAINT assoc_query_incidents_query_id_fkey FOREIGN KEY (query_id) REFERENCES dispatch_organization_default.query(id) ON DELETE CASCADE;


--
-- Name: assoc_query_tags assoc_query_tags_query_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.assoc_query_tags
    ADD CONSTRAINT assoc_query_tags_query_id_fkey FOREIGN KEY (query_id) REFERENCES dispatch_organization_default.query(id) ON DELETE CASCADE;


--
-- Name: assoc_query_tags assoc_query_tags_tag_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.assoc_query_tags
    ADD CONSTRAINT assoc_query_tags_tag_id_fkey FOREIGN KEY (tag_id) REFERENCES dispatch_organization_default.tag(id) ON DELETE CASCADE;


--
-- Name: assoc_service_filters assoc_service_filters_search_filter_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.assoc_service_filters
    ADD CONSTRAINT assoc_service_filters_search_filter_id_fkey FOREIGN KEY (search_filter_id) REFERENCES dispatch_organization_default.search_filter(id) ON DELETE CASCADE;


--
-- Name: assoc_service_filters assoc_service_filters_service_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.assoc_service_filters
    ADD CONSTRAINT assoc_service_filters_service_id_fkey FOREIGN KEY (service_id) REFERENCES dispatch_organization_default.service(id) ON DELETE CASCADE;


--
-- Name: assoc_signal_engagements assoc_signal_engagements_signal_engagement_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.assoc_signal_engagements
    ADD CONSTRAINT assoc_signal_engagements_signal_engagement_id_fkey FOREIGN KEY (signal_engagement_id) REFERENCES dispatch_organization_default.signal_engagement(id) ON DELETE CASCADE;


--
-- Name: assoc_signal_engagements assoc_signal_engagements_signal_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.assoc_signal_engagements
    ADD CONSTRAINT assoc_signal_engagements_signal_id_fkey FOREIGN KEY (signal_id) REFERENCES dispatch_organization_default.signal(id) ON DELETE CASCADE;


--
-- Name: assoc_signal_entity_types assoc_signal_entity_types_entity_type_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.assoc_signal_entity_types
    ADD CONSTRAINT assoc_signal_entity_types_entity_type_id_fkey FOREIGN KEY (entity_type_id) REFERENCES dispatch_organization_default.entity_type(id) ON DELETE CASCADE;


--
-- Name: assoc_signal_entity_types assoc_signal_entity_types_signal_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.assoc_signal_entity_types
    ADD CONSTRAINT assoc_signal_entity_types_signal_id_fkey FOREIGN KEY (signal_id) REFERENCES dispatch_organization_default.signal(id) ON DELETE CASCADE;


--
-- Name: assoc_signal_filters assoc_signal_filters_signal_filter_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.assoc_signal_filters
    ADD CONSTRAINT assoc_signal_filters_signal_filter_id_fkey FOREIGN KEY (signal_filter_id) REFERENCES dispatch_organization_default.signal_filter(id) ON DELETE CASCADE;


--
-- Name: assoc_signal_filters assoc_signal_filters_signal_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.assoc_signal_filters
    ADD CONSTRAINT assoc_signal_filters_signal_id_fkey FOREIGN KEY (signal_id) REFERENCES dispatch_organization_default.signal(id) ON DELETE CASCADE;


--
-- Name: assoc_signal_instance_entities assoc_signal_instance_entities_entity_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.assoc_signal_instance_entities
    ADD CONSTRAINT assoc_signal_instance_entities_entity_id_fkey FOREIGN KEY (entity_id) REFERENCES dispatch_organization_default.entity(id) ON DELETE CASCADE;


--
-- Name: assoc_signal_instance_entities assoc_signal_instance_entities_signal_instance_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.assoc_signal_instance_entities
    ADD CONSTRAINT assoc_signal_instance_entities_signal_instance_id_fkey FOREIGN KEY (signal_instance_id) REFERENCES dispatch_organization_default.signal_instance(id) ON DELETE CASCADE;


--
-- Name: assoc_signal_tags assoc_signal_tags_signal_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.assoc_signal_tags
    ADD CONSTRAINT assoc_signal_tags_signal_id_fkey FOREIGN KEY (signal_id) REFERENCES dispatch_organization_default.signal(id) ON DELETE CASCADE;


--
-- Name: assoc_signal_tags assoc_signal_tags_tag_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.assoc_signal_tags
    ADD CONSTRAINT assoc_signal_tags_tag_id_fkey FOREIGN KEY (tag_id) REFERENCES dispatch_organization_default.tag(id) ON DELETE CASCADE;


--
-- Name: assoc_signal_workflows assoc_signal_workflows_signal_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.assoc_signal_workflows
    ADD CONSTRAINT assoc_signal_workflows_signal_id_fkey FOREIGN KEY (signal_id) REFERENCES dispatch_organization_default.signal(id) ON DELETE CASCADE;


--
-- Name: assoc_signal_workflows assoc_signal_workflows_workflow_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.assoc_signal_workflows
    ADD CONSTRAINT assoc_signal_workflows_workflow_id_fkey FOREIGN KEY (workflow_id) REFERENCES dispatch_organization_default.workflow(id) ON DELETE CASCADE;


--
-- Name: assoc_source_incidents assoc_source_incidents_incident_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.assoc_source_incidents
    ADD CONSTRAINT assoc_source_incidents_incident_id_fkey FOREIGN KEY (incident_id) REFERENCES dispatch_organization_default.incident(id) ON DELETE CASCADE;


--
-- Name: assoc_source_incidents assoc_source_incidents_source_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.assoc_source_incidents
    ADD CONSTRAINT assoc_source_incidents_source_id_fkey FOREIGN KEY (source_id) REFERENCES dispatch_organization_default.source(id) ON DELETE CASCADE;


--
-- Name: assoc_source_tags assoc_source_tags_source_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.assoc_source_tags
    ADD CONSTRAINT assoc_source_tags_source_id_fkey FOREIGN KEY (source_id) REFERENCES dispatch_organization_default.source(id) ON DELETE CASCADE;


--
-- Name: assoc_source_tags assoc_source_tags_tag_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.assoc_source_tags
    ADD CONSTRAINT assoc_source_tags_tag_id_fkey FOREIGN KEY (tag_id) REFERENCES dispatch_organization_default.tag(id) ON DELETE CASCADE;


--
-- Name: assoc_team_contact_filters assoc_team_contact_filters_search_filter_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.assoc_team_contact_filters
    ADD CONSTRAINT assoc_team_contact_filters_search_filter_id_fkey FOREIGN KEY (search_filter_id) REFERENCES dispatch_organization_default.search_filter(id) ON DELETE CASCADE;


--
-- Name: assoc_team_contact_filters assoc_team_contact_filters_team_contact_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.assoc_team_contact_filters
    ADD CONSTRAINT assoc_team_contact_filters_team_contact_id_fkey FOREIGN KEY (team_contact_id) REFERENCES dispatch_organization_default.team_contact(id) ON DELETE CASCADE;


--
-- Name: case case_assignee_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default."case"
    ADD CONSTRAINT case_assignee_id_fkey FOREIGN KEY (assignee_id) REFERENCES dispatch_organization_default.participant(id) ON DELETE CASCADE;


--
-- Name: case case_case_document_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default."case"
    ADD CONSTRAINT case_case_document_id_fkey FOREIGN KEY (case_document_id) REFERENCES dispatch_organization_default.document(id);


--
-- Name: case case_case_priority_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default."case"
    ADD CONSTRAINT case_case_priority_id_fkey FOREIGN KEY (case_priority_id) REFERENCES dispatch_organization_default.case_priority(id);


--
-- Name: case case_case_severity_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default."case"
    ADD CONSTRAINT case_case_severity_id_fkey FOREIGN KEY (case_severity_id) REFERENCES dispatch_organization_default.case_severity(id);


--
-- Name: case case_case_type_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default."case"
    ADD CONSTRAINT case_case_type_id_fkey FOREIGN KEY (case_type_id) REFERENCES dispatch_organization_default.case_type(id);


--
-- Name: case case_duplicate_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default."case"
    ADD CONSTRAINT case_duplicate_id_fkey FOREIGN KEY (duplicate_id) REFERENCES dispatch_organization_default."case"(id);


--
-- Name: case_priority case_priority_project_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.case_priority
    ADD CONSTRAINT case_priority_project_id_fkey FOREIGN KEY (project_id) REFERENCES dispatch_organization_default.project(id) ON DELETE CASCADE;


--
-- Name: case case_project_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default."case"
    ADD CONSTRAINT case_project_id_fkey FOREIGN KEY (project_id) REFERENCES dispatch_organization_default.project(id) ON DELETE CASCADE;


--
-- Name: case case_related_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default."case"
    ADD CONSTRAINT case_related_id_fkey FOREIGN KEY (related_id) REFERENCES dispatch_organization_default."case"(id);


--
-- Name: case case_reporter_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default."case"
    ADD CONSTRAINT case_reporter_id_fkey FOREIGN KEY (reporter_id) REFERENCES dispatch_organization_default.participant(id) ON DELETE CASCADE;


--
-- Name: case_severity case_severity_project_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.case_severity
    ADD CONSTRAINT case_severity_project_id_fkey FOREIGN KEY (project_id) REFERENCES dispatch_organization_default.project(id) ON DELETE CASCADE;


--
-- Name: case case_tactical_group_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default."case"
    ADD CONSTRAINT case_tactical_group_id_fkey FOREIGN KEY (tactical_group_id) REFERENCES dispatch_organization_default."group"(id);


--
-- Name: case_type case_type_case_template_document_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.case_type
    ADD CONSTRAINT case_type_case_template_document_id_fkey FOREIGN KEY (case_template_document_id) REFERENCES dispatch_organization_default.document(id);


--
-- Name: case_type case_type_incident_type_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.case_type
    ADD CONSTRAINT case_type_incident_type_id_fkey FOREIGN KEY (incident_type_id) REFERENCES dispatch_organization_default.incident_type(id);


--
-- Name: case_type case_type_oncall_service_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.case_type
    ADD CONSTRAINT case_type_oncall_service_id_fkey FOREIGN KEY (oncall_service_id) REFERENCES dispatch_organization_default.service(id);


--
-- Name: case_type case_type_project_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.case_type
    ADD CONSTRAINT case_type_project_id_fkey FOREIGN KEY (project_id) REFERENCES dispatch_organization_default.project(id) ON DELETE CASCADE;


--
-- Name: conference conference_incident_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.conference
    ADD CONSTRAINT conference_incident_id_fkey FOREIGN KEY (incident_id) REFERENCES dispatch_organization_default.incident(id) ON DELETE CASCADE;


--
-- Name: conversation conversation_case_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.conversation
    ADD CONSTRAINT conversation_case_id_fkey FOREIGN KEY (case_id) REFERENCES dispatch_organization_default."case"(id) ON DELETE CASCADE;


--
-- Name: conversation conversation_incident_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.conversation
    ADD CONSTRAINT conversation_incident_id_fkey FOREIGN KEY (incident_id) REFERENCES dispatch_organization_default.incident(id) ON DELETE CASCADE;


--
-- Name: cost_model_activity cost_model_activity_plugin_event_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.cost_model_activity
    ADD CONSTRAINT cost_model_activity_plugin_event_id_fkey FOREIGN KEY (plugin_event_id) REFERENCES dispatch_core.plugin_event(id) ON DELETE CASCADE;


--
-- Name: cost_model cost_model_project_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.cost_model
    ADD CONSTRAINT cost_model_project_id_fkey FOREIGN KEY (project_id) REFERENCES dispatch_organization_default.project(id) ON DELETE CASCADE;


--
-- Name: definition definition_project_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.definition
    ADD CONSTRAINT definition_project_id_fkey FOREIGN KEY (project_id) REFERENCES dispatch_organization_default.project(id) ON DELETE CASCADE;


--
-- Name: definition_teams definition_teams_definition_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.definition_teams
    ADD CONSTRAINT definition_teams_definition_id_fkey FOREIGN KEY (definition_id) REFERENCES dispatch_organization_default.definition(id);


--
-- Name: definition_teams definition_teams_team_contact_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.definition_teams
    ADD CONSTRAINT definition_teams_team_contact_id_fkey FOREIGN KEY (team_contact_id) REFERENCES dispatch_organization_default.team_contact(id);


--
-- Name: definition_terms definition_terms_definition_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.definition_terms
    ADD CONSTRAINT definition_terms_definition_id_fkey FOREIGN KEY (definition_id) REFERENCES dispatch_organization_default.definition(id);


--
-- Name: definition_terms definition_terms_term_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.definition_terms
    ADD CONSTRAINT definition_terms_term_id_fkey FOREIGN KEY (term_id) REFERENCES dispatch_organization_default.term(id);


--
-- Name: dispatch_user_project dispatch_user_project_dispatch_user_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.dispatch_user_project
    ADD CONSTRAINT dispatch_user_project_dispatch_user_id_fkey FOREIGN KEY (dispatch_user_id) REFERENCES dispatch_core.dispatch_user(id);


--
-- Name: dispatch_user_project dispatch_user_project_project_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.dispatch_user_project
    ADD CONSTRAINT dispatch_user_project_project_id_fkey FOREIGN KEY (project_id) REFERENCES dispatch_organization_default.project(id);


--
-- Name: document document_case_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.document
    ADD CONSTRAINT document_case_id_fkey FOREIGN KEY (case_id) REFERENCES dispatch_organization_default."case"(id) ON DELETE CASCADE;


--
-- Name: document document_incident_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.document
    ADD CONSTRAINT document_incident_id_fkey FOREIGN KEY (incident_id) REFERENCES dispatch_organization_default.incident(id) ON DELETE CASCADE;


--
-- Name: document document_project_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.document
    ADD CONSTRAINT document_project_id_fkey FOREIGN KEY (project_id) REFERENCES dispatch_organization_default.project(id) ON DELETE CASCADE;


--
-- Name: document document_report_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.document
    ADD CONSTRAINT document_report_id_fkey FOREIGN KEY (report_id) REFERENCES dispatch_organization_default.report(id) ON DELETE CASCADE;


--
-- Name: entity entity_entity_type_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.entity
    ADD CONSTRAINT entity_entity_type_id_fkey FOREIGN KEY (entity_type_id) REFERENCES dispatch_organization_default.entity_type(id);


--
-- Name: entity entity_project_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.entity
    ADD CONSTRAINT entity_project_id_fkey FOREIGN KEY (project_id) REFERENCES dispatch_organization_default.project(id) ON DELETE CASCADE;


--
-- Name: entity_type entity_type_project_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.entity_type
    ADD CONSTRAINT entity_type_project_id_fkey FOREIGN KEY (project_id) REFERENCES dispatch_organization_default.project(id) ON DELETE CASCADE;


--
-- Name: event event_case_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.event
    ADD CONSTRAINT event_case_id_fkey FOREIGN KEY (case_id) REFERENCES dispatch_organization_default."case"(id) ON DELETE CASCADE;


--
-- Name: event event_dispatch_user_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.event
    ADD CONSTRAINT event_dispatch_user_id_fkey FOREIGN KEY (dispatch_user_id) REFERENCES dispatch_core.dispatch_user(id) ON DELETE CASCADE;


--
-- Name: event event_incident_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.event
    ADD CONSTRAINT event_incident_id_fkey FOREIGN KEY (incident_id) REFERENCES dispatch_organization_default.incident(id) ON DELETE CASCADE;


--
-- Name: event event_individual_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.event
    ADD CONSTRAINT event_individual_id_fkey FOREIGN KEY (individual_id) REFERENCES dispatch_organization_default.individual_contact(id) ON DELETE CASCADE;


--
-- Name: feedback feedback_incident_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.feedback
    ADD CONSTRAINT feedback_incident_id_fkey FOREIGN KEY (incident_id) REFERENCES dispatch_organization_default.incident(id) ON DELETE CASCADE;


--
-- Name: feedback feedback_participant_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.feedback
    ADD CONSTRAINT feedback_participant_id_fkey FOREIGN KEY (participant_id) REFERENCES dispatch_organization_default.participant(id);


--
-- Name: forms forms_creator_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.forms
    ADD CONSTRAINT forms_creator_id_fkey FOREIGN KEY (creator_id) REFERENCES dispatch_organization_default.individual_contact(id);


--
-- Name: forms forms_form_type_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.forms
    ADD CONSTRAINT forms_form_type_id_fkey FOREIGN KEY (form_type_id) REFERENCES dispatch_organization_default.forms_type(id);


--
-- Name: forms forms_incident_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.forms
    ADD CONSTRAINT forms_incident_id_fkey FOREIGN KEY (incident_id) REFERENCES dispatch_organization_default.incident(id);


--
-- Name: forms forms_project_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.forms
    ADD CONSTRAINT forms_project_id_fkey FOREIGN KEY (project_id) REFERENCES dispatch_organization_default.project(id) ON DELETE CASCADE;


--
-- Name: forms_type forms_type_creator_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.forms_type
    ADD CONSTRAINT forms_type_creator_id_fkey FOREIGN KEY (creator_id) REFERENCES dispatch_organization_default.individual_contact(id);


--
-- Name: forms_type forms_type_project_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.forms_type
    ADD CONSTRAINT forms_type_project_id_fkey FOREIGN KEY (project_id) REFERENCES dispatch_organization_default.project(id) ON DELETE CASCADE;


--
-- Name: forms_type forms_type_service_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.forms_type
    ADD CONSTRAINT forms_type_service_id_fkey FOREIGN KEY (service_id) REFERENCES dispatch_organization_default.service(id);


--
-- Name: group group_case_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default."group"
    ADD CONSTRAINT group_case_id_fkey FOREIGN KEY (case_id) REFERENCES dispatch_organization_default."case"(id) ON DELETE CASCADE;


--
-- Name: group group_incident_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default."group"
    ADD CONSTRAINT group_incident_id_fkey FOREIGN KEY (incident_id) REFERENCES dispatch_organization_default.incident(id) ON DELETE CASCADE;


--
-- Name: incident incident_commander_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.incident
    ADD CONSTRAINT incident_commander_id_fkey FOREIGN KEY (commander_id) REFERENCES dispatch_organization_default.participant(id);


--
-- Name: incident_cost incident_cost_incident_cost_type_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.incident_cost
    ADD CONSTRAINT incident_cost_incident_cost_type_id_fkey FOREIGN KEY (incident_cost_type_id) REFERENCES dispatch_organization_default.incident_cost_type(id);


--
-- Name: incident_cost incident_cost_incident_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.incident_cost
    ADD CONSTRAINT incident_cost_incident_id_fkey FOREIGN KEY (incident_id) REFERENCES dispatch_organization_default.incident(id) ON DELETE CASCADE;


--
-- Name: incident incident_cost_model_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.incident
    ADD CONSTRAINT incident_cost_model_id_fkey FOREIGN KEY (cost_model_id) REFERENCES dispatch_organization_default.cost_model(id);


--
-- Name: incident_cost incident_cost_project_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.incident_cost
    ADD CONSTRAINT incident_cost_project_id_fkey FOREIGN KEY (project_id) REFERENCES dispatch_organization_default.project(id) ON DELETE CASCADE;


--
-- Name: incident_cost_type incident_cost_type_project_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.incident_cost_type
    ADD CONSTRAINT incident_cost_type_project_id_fkey FOREIGN KEY (project_id) REFERENCES dispatch_organization_default.project(id) ON DELETE CASCADE;


--
-- Name: incident incident_duplicate_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.incident
    ADD CONSTRAINT incident_duplicate_id_fkey FOREIGN KEY (duplicate_id) REFERENCES dispatch_organization_default.incident(id);


--
-- Name: incident incident_incident_document_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.incident
    ADD CONSTRAINT incident_incident_document_id_fkey FOREIGN KEY (incident_document_id) REFERENCES dispatch_organization_default.document(id);


--
-- Name: incident incident_incident_priority_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.incident
    ADD CONSTRAINT incident_incident_priority_id_fkey FOREIGN KEY (incident_priority_id) REFERENCES dispatch_organization_default.incident_priority(id);


--
-- Name: incident incident_incident_review_document_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.incident
    ADD CONSTRAINT incident_incident_review_document_id_fkey FOREIGN KEY (incident_review_document_id) REFERENCES dispatch_organization_default.document(id);


--
-- Name: incident incident_incident_severity_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.incident
    ADD CONSTRAINT incident_incident_severity_id_fkey FOREIGN KEY (incident_severity_id) REFERENCES dispatch_organization_default.incident_severity(id);


--
-- Name: incident incident_incident_type_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.incident
    ADD CONSTRAINT incident_incident_type_id_fkey FOREIGN KEY (incident_type_id) REFERENCES dispatch_organization_default.incident_type(id);


--
-- Name: incident incident_liaison_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.incident
    ADD CONSTRAINT incident_liaison_id_fkey FOREIGN KEY (liaison_id) REFERENCES dispatch_organization_default.participant(id);


--
-- Name: incident incident_notifications_group_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.incident
    ADD CONSTRAINT incident_notifications_group_id_fkey FOREIGN KEY (notifications_group_id) REFERENCES dispatch_organization_default."group"(id);


--
-- Name: incident_priority incident_priority_project_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.incident_priority
    ADD CONSTRAINT incident_priority_project_id_fkey FOREIGN KEY (project_id) REFERENCES dispatch_organization_default.project(id) ON DELETE CASCADE;


--
-- Name: incident incident_project_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.incident
    ADD CONSTRAINT incident_project_id_fkey FOREIGN KEY (project_id) REFERENCES dispatch_organization_default.project(id) ON DELETE CASCADE;


--
-- Name: incident incident_reporter_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.incident
    ADD CONSTRAINT incident_reporter_id_fkey FOREIGN KEY (reporter_id) REFERENCES dispatch_organization_default.participant(id);


--
-- Name: incident_role_incident_priority incident_role_incident_priority_incident_priority_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.incident_role_incident_priority
    ADD CONSTRAINT incident_role_incident_priority_incident_priority_id_fkey FOREIGN KEY (incident_priority_id) REFERENCES dispatch_organization_default.incident_priority(id);


--
-- Name: incident_role_incident_priority incident_role_incident_priority_incident_role_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.incident_role_incident_priority
    ADD CONSTRAINT incident_role_incident_priority_incident_role_id_fkey FOREIGN KEY (incident_role_id) REFERENCES dispatch_organization_default.incident_role(id);


--
-- Name: incident_role_incident_type incident_role_incident_type_incident_role_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.incident_role_incident_type
    ADD CONSTRAINT incident_role_incident_type_incident_role_id_fkey FOREIGN KEY (incident_role_id) REFERENCES dispatch_organization_default.incident_role(id);


--
-- Name: incident_role_incident_type incident_role_incident_type_incident_type_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.incident_role_incident_type
    ADD CONSTRAINT incident_role_incident_type_incident_type_id_fkey FOREIGN KEY (incident_type_id) REFERENCES dispatch_organization_default.incident_type(id);


--
-- Name: incident_role incident_role_individual_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.incident_role
    ADD CONSTRAINT incident_role_individual_id_fkey FOREIGN KEY (individual_id) REFERENCES dispatch_organization_default.individual_contact(id);


--
-- Name: incident_role incident_role_project_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.incident_role
    ADD CONSTRAINT incident_role_project_id_fkey FOREIGN KEY (project_id) REFERENCES dispatch_organization_default.project(id) ON DELETE CASCADE;


--
-- Name: incident_role incident_role_service_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.incident_role
    ADD CONSTRAINT incident_role_service_id_fkey FOREIGN KEY (service_id) REFERENCES dispatch_organization_default.service(id);


--
-- Name: incident_role_tag incident_role_tag_incident_role_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.incident_role_tag
    ADD CONSTRAINT incident_role_tag_incident_role_id_fkey FOREIGN KEY (incident_role_id) REFERENCES dispatch_organization_default.incident_role(id);


--
-- Name: incident_role_tag incident_role_tag_tag_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.incident_role_tag
    ADD CONSTRAINT incident_role_tag_tag_id_fkey FOREIGN KEY (tag_id) REFERENCES dispatch_organization_default.tag(id);


--
-- Name: incident incident_scribe_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.incident
    ADD CONSTRAINT incident_scribe_id_fkey FOREIGN KEY (scribe_id) REFERENCES dispatch_organization_default.participant(id);


--
-- Name: incident_severity incident_severity_project_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.incident_severity
    ADD CONSTRAINT incident_severity_project_id_fkey FOREIGN KEY (project_id) REFERENCES dispatch_organization_default.project(id) ON DELETE CASCADE;


--
-- Name: incident incident_tactical_group_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.incident
    ADD CONSTRAINT incident_tactical_group_id_fkey FOREIGN KEY (tactical_group_id) REFERENCES dispatch_organization_default."group"(id);


--
-- Name: incident_type incident_type_commander_service_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.incident_type
    ADD CONSTRAINT incident_type_commander_service_id_fkey FOREIGN KEY (commander_service_id) REFERENCES dispatch_organization_default.service(id);


--
-- Name: incident_type incident_type_executive_template_document_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.incident_type
    ADD CONSTRAINT incident_type_executive_template_document_id_fkey FOREIGN KEY (executive_template_document_id) REFERENCES dispatch_organization_default.document(id);


--
-- Name: incident_type incident_type_incident_template_document_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.incident_type
    ADD CONSTRAINT incident_type_incident_template_document_id_fkey FOREIGN KEY (incident_template_document_id) REFERENCES dispatch_organization_default.document(id);


--
-- Name: incident_type incident_type_liaison_service_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.incident_type
    ADD CONSTRAINT incident_type_liaison_service_id_fkey FOREIGN KEY (liaison_service_id) REFERENCES dispatch_organization_default.service(id);


--
-- Name: incident_type incident_type_project_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.incident_type
    ADD CONSTRAINT incident_type_project_id_fkey FOREIGN KEY (project_id) REFERENCES dispatch_organization_default.project(id) ON DELETE CASCADE;


--
-- Name: incident_type incident_type_review_template_document_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.incident_type
    ADD CONSTRAINT incident_type_review_template_document_id_fkey FOREIGN KEY (review_template_document_id) REFERENCES dispatch_organization_default.document(id);


--
-- Name: incident_type incident_type_tracking_template_document_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.incident_type
    ADD CONSTRAINT incident_type_tracking_template_document_id_fkey FOREIGN KEY (tracking_template_document_id) REFERENCES dispatch_organization_default.document(id);


--
-- Name: individual_contact individual_contact_project_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.individual_contact
    ADD CONSTRAINT individual_contact_project_id_fkey FOREIGN KEY (project_id) REFERENCES dispatch_organization_default.project(id) ON DELETE CASCADE;


--
-- Name: individual_contact individual_contact_team_contact_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.individual_contact
    ADD CONSTRAINT individual_contact_team_contact_id_fkey FOREIGN KEY (team_contact_id) REFERENCES dispatch_organization_default.team_contact(id);


--
-- Name: monitor monitor_creator_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.monitor
    ADD CONSTRAINT monitor_creator_id_fkey FOREIGN KEY (creator_id) REFERENCES dispatch_organization_default.participant(id);


--
-- Name: monitor monitor_incident_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.monitor
    ADD CONSTRAINT monitor_incident_id_fkey FOREIGN KEY (incident_id) REFERENCES dispatch_organization_default.incident(id) ON DELETE CASCADE;


--
-- Name: monitor monitor_plugin_instance_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.monitor
    ADD CONSTRAINT monitor_plugin_instance_id_fkey FOREIGN KEY (plugin_instance_id) REFERENCES dispatch_organization_default.plugin_instance(id);


--
-- Name: notification notification_project_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.notification
    ADD CONSTRAINT notification_project_id_fkey FOREIGN KEY (project_id) REFERENCES dispatch_organization_default.project(id) ON DELETE CASCADE;


--
-- Name: participant_activity participant_activity_incident_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.participant_activity
    ADD CONSTRAINT participant_activity_incident_id_fkey FOREIGN KEY (incident_id) REFERENCES dispatch_organization_default.incident(id);


--
-- Name: participant_activity participant_activity_participant_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.participant_activity
    ADD CONSTRAINT participant_activity_participant_id_fkey FOREIGN KEY (participant_id) REFERENCES dispatch_organization_default.participant(id);


--
-- Name: participant_activity participant_activity_plugin_event_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.participant_activity
    ADD CONSTRAINT participant_activity_plugin_event_id_fkey FOREIGN KEY (plugin_event_id) REFERENCES dispatch_core.plugin_event(id);


--
-- Name: participant participant_added_by_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.participant
    ADD CONSTRAINT participant_added_by_id_fkey FOREIGN KEY (added_by_id) REFERENCES dispatch_organization_default.participant(id);


--
-- Name: participant participant_case_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.participant
    ADD CONSTRAINT participant_case_id_fkey FOREIGN KEY (case_id) REFERENCES dispatch_organization_default."case"(id) ON DELETE CASCADE;


--
-- Name: participant participant_incident_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.participant
    ADD CONSTRAINT participant_incident_id_fkey FOREIGN KEY (incident_id) REFERENCES dispatch_organization_default.incident(id) ON DELETE CASCADE;


--
-- Name: participant participant_individual_contact_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.participant
    ADD CONSTRAINT participant_individual_contact_id_fkey FOREIGN KEY (individual_contact_id) REFERENCES dispatch_organization_default.individual_contact(id) ON DELETE CASCADE;


--
-- Name: participant_role participant_role_participant_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.participant_role
    ADD CONSTRAINT participant_role_participant_id_fkey FOREIGN KEY (participant_id) REFERENCES dispatch_organization_default.participant(id) ON DELETE CASCADE;


--
-- Name: participant participant_service_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.participant
    ADD CONSTRAINT participant_service_id_fkey FOREIGN KEY (service_id) REFERENCES dispatch_organization_default.service(id) ON DELETE CASCADE;


--
-- Name: plugin_instance plugin_instance_plugin_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.plugin_instance
    ADD CONSTRAINT plugin_instance_plugin_id_fkey FOREIGN KEY (plugin_id) REFERENCES dispatch_core.plugin(id);


--
-- Name: plugin_instance plugin_instance_project_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.plugin_instance
    ADD CONSTRAINT plugin_instance_project_id_fkey FOREIGN KEY (project_id) REFERENCES dispatch_organization_default.project(id) ON DELETE CASCADE;


--
-- Name: project project_organization_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.project
    ADD CONSTRAINT project_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES dispatch_core.organization(id);


--
-- Name: project project_stable_priority_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.project
    ADD CONSTRAINT project_stable_priority_id_fkey FOREIGN KEY (stable_priority_id) REFERENCES dispatch_organization_default.incident_priority(id);


--
-- Name: query query_project_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.query
    ADD CONSTRAINT query_project_id_fkey FOREIGN KEY (project_id) REFERENCES dispatch_organization_default.project(id) ON DELETE CASCADE;


--
-- Name: query query_source_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.query
    ADD CONSTRAINT query_source_id_fkey FOREIGN KEY (source_id) REFERENCES dispatch_organization_default.source(id);


--
-- Name: recommendation recommendation_incident_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.recommendation
    ADD CONSTRAINT recommendation_incident_id_fkey FOREIGN KEY (incident_id) REFERENCES dispatch_organization_default.incident(id);


--
-- Name: recommendation_match recommendation_match_recommendation_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.recommendation_match
    ADD CONSTRAINT recommendation_match_recommendation_id_fkey FOREIGN KEY (recommendation_id) REFERENCES dispatch_organization_default.recommendation(id);


--
-- Name: report report_incident_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.report
    ADD CONSTRAINT report_incident_id_fkey FOREIGN KEY (incident_id) REFERENCES dispatch_organization_default.incident(id) ON DELETE CASCADE;


--
-- Name: report report_participant_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.report
    ADD CONSTRAINT report_participant_id_fkey FOREIGN KEY (participant_id) REFERENCES dispatch_organization_default.participant(id);


--
-- Name: search_filter search_filter_creator_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.search_filter
    ADD CONSTRAINT search_filter_creator_id_fkey FOREIGN KEY (creator_id) REFERENCES dispatch_core.dispatch_user(id);


--
-- Name: search_filter search_filter_project_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.search_filter
    ADD CONSTRAINT search_filter_project_id_fkey FOREIGN KEY (project_id) REFERENCES dispatch_organization_default.project(id) ON DELETE CASCADE;


--
-- Name: service_feedback service_feedback_individual_contact_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.service_feedback
    ADD CONSTRAINT service_feedback_individual_contact_id_fkey FOREIGN KEY (individual_contact_id) REFERENCES dispatch_organization_default.individual_contact(id);


--
-- Name: service_feedback service_feedback_project_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.service_feedback
    ADD CONSTRAINT service_feedback_project_id_fkey FOREIGN KEY (project_id) REFERENCES dispatch_organization_default.project(id);


--
-- Name: service_feedback_reminder service_feedback_reminder_individual_contact_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.service_feedback_reminder
    ADD CONSTRAINT service_feedback_reminder_individual_contact_id_fkey FOREIGN KEY (individual_contact_id) REFERENCES dispatch_organization_default.individual_contact(id);


--
-- Name: service_feedback_reminder service_feedback_reminder_project_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.service_feedback_reminder
    ADD CONSTRAINT service_feedback_reminder_project_id_fkey FOREIGN KEY (project_id) REFERENCES dispatch_organization_default.project(id);


--
-- Name: service service_project_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.service
    ADD CONSTRAINT service_project_id_fkey FOREIGN KEY (project_id) REFERENCES dispatch_organization_default.project(id) ON DELETE CASCADE;


--
-- Name: signal signal_case_priority_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.signal
    ADD CONSTRAINT signal_case_priority_id_fkey FOREIGN KEY (case_priority_id) REFERENCES dispatch_organization_default.case_priority(id);


--
-- Name: signal signal_case_type_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.signal
    ADD CONSTRAINT signal_case_type_id_fkey FOREIGN KEY (case_type_id) REFERENCES dispatch_organization_default.case_type(id);


--
-- Name: signal_engagement signal_engagement_creator_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.signal_engagement
    ADD CONSTRAINT signal_engagement_creator_id_fkey FOREIGN KEY (creator_id) REFERENCES dispatch_core.dispatch_user(id);


--
-- Name: signal_engagement signal_engagement_entity_type_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.signal_engagement
    ADD CONSTRAINT signal_engagement_entity_type_id_fkey FOREIGN KEY (entity_type_id) REFERENCES dispatch_organization_default.entity_type(id);


--
-- Name: signal_engagement signal_engagement_project_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.signal_engagement
    ADD CONSTRAINT signal_engagement_project_id_fkey FOREIGN KEY (project_id) REFERENCES dispatch_organization_default.project(id) ON DELETE CASCADE;


--
-- Name: signal_filter signal_filter_creator_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.signal_filter
    ADD CONSTRAINT signal_filter_creator_id_fkey FOREIGN KEY (creator_id) REFERENCES dispatch_core.dispatch_user(id);


--
-- Name: signal_filter signal_filter_project_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.signal_filter
    ADD CONSTRAINT signal_filter_project_id_fkey FOREIGN KEY (project_id) REFERENCES dispatch_organization_default.project(id) ON DELETE CASCADE;


--
-- Name: signal_instance signal_instance_case_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.signal_instance
    ADD CONSTRAINT signal_instance_case_id_fkey FOREIGN KEY (case_id) REFERENCES dispatch_organization_default."case"(id) ON DELETE CASCADE;


--
-- Name: signal_instance signal_instance_case_priority_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.signal_instance
    ADD CONSTRAINT signal_instance_case_priority_id_fkey FOREIGN KEY (case_priority_id) REFERENCES dispatch_organization_default.case_priority(id);


--
-- Name: signal_instance signal_instance_case_type_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.signal_instance
    ADD CONSTRAINT signal_instance_case_type_id_fkey FOREIGN KEY (case_type_id) REFERENCES dispatch_organization_default.case_type(id);


--
-- Name: signal_instance signal_instance_project_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.signal_instance
    ADD CONSTRAINT signal_instance_project_id_fkey FOREIGN KEY (project_id) REFERENCES dispatch_organization_default.project(id) ON DELETE CASCADE;


--
-- Name: signal_instance signal_instance_signal_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.signal_instance
    ADD CONSTRAINT signal_instance_signal_id_fkey FOREIGN KEY (signal_id) REFERENCES dispatch_organization_default.signal(id);


--
-- Name: signal signal_oncall_service_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.signal
    ADD CONSTRAINT signal_oncall_service_id_fkey FOREIGN KEY (oncall_service_id) REFERENCES dispatch_organization_default.service(id);


--
-- Name: signal signal_project_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.signal
    ADD CONSTRAINT signal_project_id_fkey FOREIGN KEY (project_id) REFERENCES dispatch_organization_default.project(id) ON DELETE CASCADE;


--
-- Name: signal signal_source_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.signal
    ADD CONSTRAINT signal_source_id_fkey FOREIGN KEY (source_id) REFERENCES dispatch_organization_default.source(id);


--
-- Name: source_data_format source_data_format_project_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.source_data_format
    ADD CONSTRAINT source_data_format_project_id_fkey FOREIGN KEY (project_id) REFERENCES dispatch_organization_default.project(id) ON DELETE CASCADE;


--
-- Name: source_environment source_environment_project_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.source_environment
    ADD CONSTRAINT source_environment_project_id_fkey FOREIGN KEY (project_id) REFERENCES dispatch_organization_default.project(id) ON DELETE CASCADE;


--
-- Name: source source_owner_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.source
    ADD CONSTRAINT source_owner_id_fkey FOREIGN KEY (owner_id) REFERENCES dispatch_organization_default.service(id);


--
-- Name: source source_project_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.source
    ADD CONSTRAINT source_project_id_fkey FOREIGN KEY (project_id) REFERENCES dispatch_organization_default.project(id) ON DELETE CASCADE;


--
-- Name: source source_source_data_format_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.source
    ADD CONSTRAINT source_source_data_format_id_fkey FOREIGN KEY (source_data_format_id) REFERENCES dispatch_organization_default.source_data_format(id);


--
-- Name: source source_source_environment_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.source
    ADD CONSTRAINT source_source_environment_id_fkey FOREIGN KEY (source_environment_id) REFERENCES dispatch_organization_default.source_environment(id);


--
-- Name: source source_source_status_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.source
    ADD CONSTRAINT source_source_status_id_fkey FOREIGN KEY (source_status_id) REFERENCES dispatch_organization_default.source_status(id);


--
-- Name: source source_source_transport_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.source
    ADD CONSTRAINT source_source_transport_id_fkey FOREIGN KEY (source_transport_id) REFERENCES dispatch_organization_default.source_transport(id);


--
-- Name: source source_source_type_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.source
    ADD CONSTRAINT source_source_type_id_fkey FOREIGN KEY (source_type_id) REFERENCES dispatch_organization_default.source_type(id);


--
-- Name: source_status source_status_project_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.source_status
    ADD CONSTRAINT source_status_project_id_fkey FOREIGN KEY (project_id) REFERENCES dispatch_organization_default.project(id) ON DELETE CASCADE;


--
-- Name: source_transport source_transport_project_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.source_transport
    ADD CONSTRAINT source_transport_project_id_fkey FOREIGN KEY (project_id) REFERENCES dispatch_organization_default.project(id) ON DELETE CASCADE;


--
-- Name: source_type source_type_project_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.source_type
    ADD CONSTRAINT source_type_project_id_fkey FOREIGN KEY (project_id) REFERENCES dispatch_organization_default.project(id) ON DELETE CASCADE;


--
-- Name: storage storage_case_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.storage
    ADD CONSTRAINT storage_case_id_fkey FOREIGN KEY (case_id) REFERENCES dispatch_organization_default."case"(id) ON DELETE CASCADE;


--
-- Name: storage storage_incident_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.storage
    ADD CONSTRAINT storage_incident_id_fkey FOREIGN KEY (incident_id) REFERENCES dispatch_organization_default.incident(id) ON DELETE CASCADE;


--
-- Name: tag tag_project_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.tag
    ADD CONSTRAINT tag_project_id_fkey FOREIGN KEY (project_id) REFERENCES dispatch_organization_default.project(id) ON DELETE CASCADE;


--
-- Name: tag tag_tag_type_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.tag
    ADD CONSTRAINT tag_tag_type_id_fkey FOREIGN KEY (tag_type_id) REFERENCES dispatch_organization_default.tag_type(id);


--
-- Name: tag_type tag_type_project_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.tag_type
    ADD CONSTRAINT tag_type_project_id_fkey FOREIGN KEY (project_id) REFERENCES dispatch_organization_default.project(id) ON DELETE CASCADE;


--
-- Name: task_assignees task_assignees_participant_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.task_assignees
    ADD CONSTRAINT task_assignees_participant_id_fkey FOREIGN KEY (participant_id) REFERENCES dispatch_organization_default.participant(id) ON DELETE CASCADE;


--
-- Name: task_assignees task_assignees_task_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.task_assignees
    ADD CONSTRAINT task_assignees_task_id_fkey FOREIGN KEY (task_id) REFERENCES dispatch_organization_default.task(id) ON DELETE CASCADE;


--
-- Name: task task_creator_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.task
    ADD CONSTRAINT task_creator_id_fkey FOREIGN KEY (creator_id) REFERENCES dispatch_organization_default.participant(id) ON DELETE CASCADE;


--
-- Name: task task_incident_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.task
    ADD CONSTRAINT task_incident_id_fkey FOREIGN KEY (incident_id) REFERENCES dispatch_organization_default.incident(id) ON DELETE CASCADE;


--
-- Name: task task_owner_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.task
    ADD CONSTRAINT task_owner_id_fkey FOREIGN KEY (owner_id) REFERENCES dispatch_organization_default.participant(id) ON DELETE CASCADE;


--
-- Name: team_contact_incident team_contact_incident_incident_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.team_contact_incident
    ADD CONSTRAINT team_contact_incident_incident_id_fkey FOREIGN KEY (incident_id) REFERENCES dispatch_organization_default.incident(id);


--
-- Name: team_contact_incident team_contact_incident_team_contact_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.team_contact_incident
    ADD CONSTRAINT team_contact_incident_team_contact_id_fkey FOREIGN KEY (team_contact_id) REFERENCES dispatch_organization_default.team_contact(id);


--
-- Name: team_contact team_contact_project_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.team_contact
    ADD CONSTRAINT team_contact_project_id_fkey FOREIGN KEY (project_id) REFERENCES dispatch_organization_default.project(id) ON DELETE CASCADE;


--
-- Name: term term_project_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.term
    ADD CONSTRAINT term_project_id_fkey FOREIGN KEY (project_id) REFERENCES dispatch_organization_default.project(id) ON DELETE CASCADE;


--
-- Name: ticket ticket_case_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.ticket
    ADD CONSTRAINT ticket_case_id_fkey FOREIGN KEY (case_id) REFERENCES dispatch_organization_default."case"(id) ON DELETE CASCADE;


--
-- Name: ticket ticket_incident_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.ticket
    ADD CONSTRAINT ticket_incident_id_fkey FOREIGN KEY (incident_id) REFERENCES dispatch_organization_default.incident(id) ON DELETE CASCADE;


--
-- Name: workflow_incident_priority workflow_incident_priority_incident_priority_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.workflow_incident_priority
    ADD CONSTRAINT workflow_incident_priority_incident_priority_id_fkey FOREIGN KEY (incident_priority_id) REFERENCES dispatch_organization_default.incident_priority(id) ON DELETE CASCADE;


--
-- Name: workflow_incident_priority workflow_incident_priority_workflow_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.workflow_incident_priority
    ADD CONSTRAINT workflow_incident_priority_workflow_id_fkey FOREIGN KEY (workflow_id) REFERENCES dispatch_organization_default.workflow(id) ON DELETE CASCADE;


--
-- Name: workflow_incident_type workflow_incident_type_incident_type_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.workflow_incident_type
    ADD CONSTRAINT workflow_incident_type_incident_type_id_fkey FOREIGN KEY (incident_type_id) REFERENCES dispatch_organization_default.incident_type(id) ON DELETE CASCADE;


--
-- Name: workflow_incident_type workflow_incident_type_workflow_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.workflow_incident_type
    ADD CONSTRAINT workflow_incident_type_workflow_id_fkey FOREIGN KEY (workflow_id) REFERENCES dispatch_organization_default.workflow(id) ON DELETE CASCADE;


--
-- Name: workflow_instance_artifact workflow_instance_artifact_document_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.workflow_instance_artifact
    ADD CONSTRAINT workflow_instance_artifact_document_id_fkey FOREIGN KEY (document_id) REFERENCES dispatch_organization_default.document(id) ON DELETE CASCADE;


--
-- Name: workflow_instance_artifact workflow_instance_artifact_workflow_instance_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.workflow_instance_artifact
    ADD CONSTRAINT workflow_instance_artifact_workflow_instance_id_fkey FOREIGN KEY (workflow_instance_id) REFERENCES dispatch_organization_default.workflow_instance(id) ON DELETE CASCADE;


--
-- Name: workflow_instance workflow_instance_case_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.workflow_instance
    ADD CONSTRAINT workflow_instance_case_id_fkey FOREIGN KEY (case_id) REFERENCES dispatch_organization_default."case"(id) ON DELETE CASCADE;


--
-- Name: workflow_instance workflow_instance_creator_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.workflow_instance
    ADD CONSTRAINT workflow_instance_creator_id_fkey FOREIGN KEY (creator_id) REFERENCES dispatch_organization_default.participant(id);


--
-- Name: workflow_instance workflow_instance_incident_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.workflow_instance
    ADD CONSTRAINT workflow_instance_incident_id_fkey FOREIGN KEY (incident_id) REFERENCES dispatch_organization_default.incident(id) ON DELETE CASCADE;


--
-- Name: workflow_instance workflow_instance_signal_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.workflow_instance
    ADD CONSTRAINT workflow_instance_signal_id_fkey FOREIGN KEY (signal_id) REFERENCES dispatch_organization_default.signal(id) ON DELETE CASCADE;


--
-- Name: workflow_instance workflow_instance_workflow_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.workflow_instance
    ADD CONSTRAINT workflow_instance_workflow_id_fkey FOREIGN KEY (workflow_id) REFERENCES dispatch_organization_default.workflow(id);


--
-- Name: workflow workflow_plugin_instance_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.workflow
    ADD CONSTRAINT workflow_plugin_instance_id_fkey FOREIGN KEY (plugin_instance_id) REFERENCES dispatch_organization_default.plugin_instance(id);


--
-- Name: workflow workflow_project_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.workflow
    ADD CONSTRAINT workflow_project_id_fkey FOREIGN KEY (project_id) REFERENCES dispatch_organization_default.project(id) ON DELETE CASCADE;


--
-- Name: workflow_term workflow_term_term_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.workflow_term
    ADD CONSTRAINT workflow_term_term_id_fkey FOREIGN KEY (term_id) REFERENCES dispatch_organization_default.term(id) ON DELETE CASCADE;


--
-- Name: workflow_term workflow_term_workflow_id_fkey; Type: FK CONSTRAINT; Schema: dispatch_organization_default; Owner: postgres
--

ALTER TABLE ONLY dispatch_organization_default.workflow_term
    ADD CONSTRAINT workflow_term_workflow_id_fkey FOREIGN KEY (workflow_id) REFERENCES dispatch_organization_default.workflow(id) ON DELETE CASCADE;


--
-- Name: assoc_incident_tags assoc_incident_tags_incident_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.assoc_incident_tags
    ADD CONSTRAINT assoc_incident_tags_incident_id_fkey FOREIGN KEY (incident_id) REFERENCES public.incident(id) ON DELETE CASCADE;


--
-- Name: assoc_incident_tags assoc_incident_tags_tag_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.assoc_incident_tags
    ADD CONSTRAINT assoc_incident_tags_tag_id_fkey FOREIGN KEY (tag_id) REFERENCES public.tag(id) ON DELETE CASCADE;


--
-- Name: assoc_incident_terms assoc_incident_terms_incident_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.assoc_incident_terms
    ADD CONSTRAINT assoc_incident_terms_incident_id_fkey FOREIGN KEY (incident_id) REFERENCES public.incident(id) ON DELETE CASCADE;


--
-- Name: assoc_incident_terms assoc_incident_terms_term_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.assoc_incident_terms
    ADD CONSTRAINT assoc_incident_terms_term_id_fkey FOREIGN KEY (term_id) REFERENCES public.term(id) ON DELETE CASCADE;


--
-- Name: assoc_individual_contact_incident_priority assoc_individual_contact_incident_pr_individual_contact_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.assoc_individual_contact_incident_priority
    ADD CONSTRAINT assoc_individual_contact_incident_pr_individual_contact_id_fkey FOREIGN KEY (individual_contact_id) REFERENCES public.individual_contact(id);


--
-- Name: assoc_individual_contact_incident_priority assoc_individual_contact_incident_pri_incident_priority_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.assoc_individual_contact_incident_priority
    ADD CONSTRAINT assoc_individual_contact_incident_pri_incident_priority_id_fkey FOREIGN KEY (incident_priority_id) REFERENCES public.incident_priority(id);


--
-- Name: assoc_individual_contact_incident_type assoc_individual_contact_incident_ty_individual_contact_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.assoc_individual_contact_incident_type
    ADD CONSTRAINT assoc_individual_contact_incident_ty_individual_contact_id_fkey FOREIGN KEY (individual_contact_id) REFERENCES public.individual_contact(id);


--
-- Name: assoc_individual_contact_incident_type assoc_individual_contact_incident_type_incident_type_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.assoc_individual_contact_incident_type
    ADD CONSTRAINT assoc_individual_contact_incident_type_incident_type_id_fkey FOREIGN KEY (incident_type_id) REFERENCES public.incident_type(id);


--
-- Name: assoc_individual_contact_terms assoc_individual_contact_terms_individual_contact_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.assoc_individual_contact_terms
    ADD CONSTRAINT assoc_individual_contact_terms_individual_contact_id_fkey FOREIGN KEY (individual_contact_id) REFERENCES public.individual_contact(id);


--
-- Name: assoc_individual_contact_terms assoc_individual_contact_terms_term_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.assoc_individual_contact_terms
    ADD CONSTRAINT assoc_individual_contact_terms_term_id_fkey FOREIGN KEY (term_id) REFERENCES public.term(id);


--
-- Name: assoc_notification_filters assoc_notification_filters_notification_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.assoc_notification_filters
    ADD CONSTRAINT assoc_notification_filters_notification_id_fkey FOREIGN KEY (notification_id) REFERENCES public.notification(id) ON DELETE CASCADE;


--
-- Name: assoc_notification_filters assoc_notification_filters_search_filter_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.assoc_notification_filters
    ADD CONSTRAINT assoc_notification_filters_search_filter_id_fkey FOREIGN KEY (search_filter_id) REFERENCES public.search_filter(id) ON DELETE CASCADE;


--
-- Name: conference conference_incident_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.conference
    ADD CONSTRAINT conference_incident_id_fkey FOREIGN KEY (incident_id) REFERENCES public.incident(id) ON DELETE CASCADE;


--
-- Name: conversation conversation_incident_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.conversation
    ADD CONSTRAINT conversation_incident_id_fkey FOREIGN KEY (incident_id) REFERENCES public.incident(id) ON DELETE CASCADE;


--
-- Name: definition_teams definition_teams_definition_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.definition_teams
    ADD CONSTRAINT definition_teams_definition_id_fkey FOREIGN KEY (definition_id) REFERENCES public.definition(id);


--
-- Name: definition_teams definition_teams_team_contact_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.definition_teams
    ADD CONSTRAINT definition_teams_team_contact_id_fkey FOREIGN KEY (team_contact_id) REFERENCES public.team_contact(id);


--
-- Name: definition_terms definition_terms_definition_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.definition_terms
    ADD CONSTRAINT definition_terms_definition_id_fkey FOREIGN KEY (definition_id) REFERENCES public.definition(id);


--
-- Name: definition_terms definition_terms_term_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.definition_terms
    ADD CONSTRAINT definition_terms_term_id_fkey FOREIGN KEY (term_id) REFERENCES public.term(id);


--
-- Name: document document_incident_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.document
    ADD CONSTRAINT document_incident_id_fkey FOREIGN KEY (incident_id) REFERENCES public.incident(id) ON DELETE CASCADE;


--
-- Name: document_incident_priority document_incident_priority_document_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.document_incident_priority
    ADD CONSTRAINT document_incident_priority_document_id_fkey FOREIGN KEY (document_id) REFERENCES public.document(id);


--
-- Name: document_incident_priority document_incident_priority_incident_priority_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.document_incident_priority
    ADD CONSTRAINT document_incident_priority_incident_priority_id_fkey FOREIGN KEY (incident_priority_id) REFERENCES public.incident_priority(id);


--
-- Name: document_incident_type document_incident_type_document_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.document_incident_type
    ADD CONSTRAINT document_incident_type_document_id_fkey FOREIGN KEY (document_id) REFERENCES public.document(id);


--
-- Name: document_incident_type document_incident_type_incident_type_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.document_incident_type
    ADD CONSTRAINT document_incident_type_incident_type_id_fkey FOREIGN KEY (incident_type_id) REFERENCES public.incident_type(id);


--
-- Name: document document_report_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.document
    ADD CONSTRAINT document_report_id_fkey FOREIGN KEY (report_id) REFERENCES public.report(id);


--
-- Name: document_terms document_terms_document_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.document_terms
    ADD CONSTRAINT document_terms_document_id_fkey FOREIGN KEY (document_id) REFERENCES public.document(id);


--
-- Name: document_terms document_terms_term_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.document_terms
    ADD CONSTRAINT document_terms_term_id_fkey FOREIGN KEY (term_id) REFERENCES public.term(id);


--
-- Name: event event_incident_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.event
    ADD CONSTRAINT event_incident_id_fkey FOREIGN KEY (incident_id) REFERENCES public.incident(id) ON DELETE CASCADE;


--
-- Name: event event_individual_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.event
    ADD CONSTRAINT event_individual_id_fkey FOREIGN KEY (individual_id) REFERENCES public.individual_contact(id) ON DELETE CASCADE;


--
-- Name: feedback feedback_incident_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.feedback
    ADD CONSTRAINT feedback_incident_id_fkey FOREIGN KEY (incident_id) REFERENCES public.incident(id) ON DELETE CASCADE;


--
-- Name: feedback feedback_participant_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.feedback
    ADD CONSTRAINT feedback_participant_id_fkey FOREIGN KEY (participant_id) REFERENCES public.participant(id);


--
-- Name: group group_incident_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."group"
    ADD CONSTRAINT group_incident_id_fkey FOREIGN KEY (incident_id) REFERENCES public.incident(id) ON DELETE CASCADE;


--
-- Name: incident incident_duplicate_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.incident
    ADD CONSTRAINT incident_duplicate_id_fkey FOREIGN KEY (duplicate_id) REFERENCES public.incident(id);


--
-- Name: incident incident_incident_priority_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.incident
    ADD CONSTRAINT incident_incident_priority_id_fkey FOREIGN KEY (incident_priority_id) REFERENCES public.incident_priority(id);


--
-- Name: incident incident_incident_type_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.incident
    ADD CONSTRAINT incident_incident_type_id_fkey FOREIGN KEY (incident_type_id) REFERENCES public.incident_type(id);


--
-- Name: incident_type incident_type_commander_service_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.incident_type
    ADD CONSTRAINT incident_type_commander_service_id_fkey FOREIGN KEY (commander_service_id) REFERENCES public.service(id);


--
-- Name: incident_type incident_type_liaison_service_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.incident_type
    ADD CONSTRAINT incident_type_liaison_service_id_fkey FOREIGN KEY (liaison_service_id) REFERENCES public.service(id);


--
-- Name: individual_contact individual_contact_team_contact_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.individual_contact
    ADD CONSTRAINT individual_contact_team_contact_id_fkey FOREIGN KEY (team_contact_id) REFERENCES public.team_contact(id);


--
-- Name: participant participant_added_by_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.participant
    ADD CONSTRAINT participant_added_by_id_fkey FOREIGN KEY (added_by_id) REFERENCES public.participant(id);


--
-- Name: participant participant_incident_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.participant
    ADD CONSTRAINT participant_incident_id_fkey FOREIGN KEY (incident_id) REFERENCES public.incident(id) ON DELETE CASCADE;


--
-- Name: participant participant_individual_contact_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.participant
    ADD CONSTRAINT participant_individual_contact_id_fkey FOREIGN KEY (individual_contact_id) REFERENCES public.individual_contact(id);


--
-- Name: participant_role participant_role_participant_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.participant_role
    ADD CONSTRAINT participant_role_participant_id_fkey FOREIGN KEY (participant_id) REFERENCES public.participant(id) ON DELETE CASCADE;


--
-- Name: recommendation_accuracy recommendation_accuracy_recommendation_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.recommendation_accuracy
    ADD CONSTRAINT recommendation_accuracy_recommendation_id_fkey FOREIGN KEY (recommendation_id) REFERENCES public.recommendation(id);


--
-- Name: recommendation_documents recommendation_documents_document_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.recommendation_documents
    ADD CONSTRAINT recommendation_documents_document_id_fkey FOREIGN KEY (document_id) REFERENCES public.document(id);


--
-- Name: recommendation_documents recommendation_documents_recommendation_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.recommendation_documents
    ADD CONSTRAINT recommendation_documents_recommendation_id_fkey FOREIGN KEY (recommendation_id) REFERENCES public.recommendation(id);


--
-- Name: recommendation_incident_priorities recommendation_incident_priorities_incident_priority_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.recommendation_incident_priorities
    ADD CONSTRAINT recommendation_incident_priorities_incident_priority_id_fkey FOREIGN KEY (incident_priority_id) REFERENCES public.incident_priority(id);


--
-- Name: recommendation_incident_priorities recommendation_incident_priorities_recommendation_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.recommendation_incident_priorities
    ADD CONSTRAINT recommendation_incident_priorities_recommendation_id_fkey FOREIGN KEY (recommendation_id) REFERENCES public.recommendation(id);


--
-- Name: recommendation_incident_types recommendation_incident_types_incident_type_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.recommendation_incident_types
    ADD CONSTRAINT recommendation_incident_types_incident_type_id_fkey FOREIGN KEY (incident_type_id) REFERENCES public.incident_type(id);


--
-- Name: recommendation_incident_types recommendation_incident_types_recommendation_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.recommendation_incident_types
    ADD CONSTRAINT recommendation_incident_types_recommendation_id_fkey FOREIGN KEY (recommendation_id) REFERENCES public.recommendation(id);


--
-- Name: recommendation_individual_contacts recommendation_individual_contacts_individual_contact_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.recommendation_individual_contacts
    ADD CONSTRAINT recommendation_individual_contacts_individual_contact_id_fkey FOREIGN KEY (individual_contact_id) REFERENCES public.individual_contact(id);


--
-- Name: recommendation_individual_contacts recommendation_individual_contacts_recommendation_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.recommendation_individual_contacts
    ADD CONSTRAINT recommendation_individual_contacts_recommendation_id_fkey FOREIGN KEY (recommendation_id) REFERENCES public.recommendation(id);


--
-- Name: recommendation_services recommendation_services_recommendation_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.recommendation_services
    ADD CONSTRAINT recommendation_services_recommendation_id_fkey FOREIGN KEY (recommendation_id) REFERENCES public.recommendation(id);


--
-- Name: recommendation_services recommendation_services_service_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.recommendation_services
    ADD CONSTRAINT recommendation_services_service_id_fkey FOREIGN KEY (service_id) REFERENCES public.service(id);


--
-- Name: recommendation_team_contacts recommendation_team_contacts_recommendation_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.recommendation_team_contacts
    ADD CONSTRAINT recommendation_team_contacts_recommendation_id_fkey FOREIGN KEY (recommendation_id) REFERENCES public.recommendation(id);


--
-- Name: recommendation_team_contacts recommendation_team_contacts_team_contact_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.recommendation_team_contacts
    ADD CONSTRAINT recommendation_team_contacts_team_contact_id_fkey FOREIGN KEY (team_contact_id) REFERENCES public.team_contact(id);


--
-- Name: recommendation_terms recommendation_terms_recommendation_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.recommendation_terms
    ADD CONSTRAINT recommendation_terms_recommendation_id_fkey FOREIGN KEY (recommendation_id) REFERENCES public.recommendation(id);


--
-- Name: recommendation_terms recommendation_terms_term_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.recommendation_terms
    ADD CONSTRAINT recommendation_terms_term_id_fkey FOREIGN KEY (term_id) REFERENCES public.term(id);


--
-- Name: report report_incident_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.report
    ADD CONSTRAINT report_incident_id_fkey FOREIGN KEY (incident_id) REFERENCES public.incident(id) ON DELETE CASCADE;


--
-- Name: report report_participant_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.report
    ADD CONSTRAINT report_participant_id_fkey FOREIGN KEY (participant_id) REFERENCES public.participant(id);


--
-- Name: search_filter search_filter_creator_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.search_filter
    ADD CONSTRAINT search_filter_creator_id_fkey FOREIGN KEY (creator_id) REFERENCES public.dispatch_user(id);


--
-- Name: service_incident service_incident_incident_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.service_incident
    ADD CONSTRAINT service_incident_incident_id_fkey FOREIGN KEY (incident_id) REFERENCES public.incident(id);


--
-- Name: service_incident_priority service_incident_priority_incident_priority_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.service_incident_priority
    ADD CONSTRAINT service_incident_priority_incident_priority_id_fkey FOREIGN KEY (incident_priority_id) REFERENCES public.incident_priority(id);


--
-- Name: service_incident_priority service_incident_priority_service_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.service_incident_priority
    ADD CONSTRAINT service_incident_priority_service_id_fkey FOREIGN KEY (service_id) REFERENCES public.service(id);


--
-- Name: service_incident service_incident_service_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.service_incident
    ADD CONSTRAINT service_incident_service_id_fkey FOREIGN KEY (service_id) REFERENCES public.service(id);


--
-- Name: service_incident_type service_incident_type_incident_type_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.service_incident_type
    ADD CONSTRAINT service_incident_type_incident_type_id_fkey FOREIGN KEY (incident_type_id) REFERENCES public.incident_type(id);


--
-- Name: service_incident_type service_incident_type_service_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.service_incident_type
    ADD CONSTRAINT service_incident_type_service_id_fkey FOREIGN KEY (service_id) REFERENCES public.service(id);


--
-- Name: service_terms service_terms_service_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.service_terms
    ADD CONSTRAINT service_terms_service_id_fkey FOREIGN KEY (service_id) REFERENCES public.service(id);


--
-- Name: service_terms service_terms_term_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.service_terms
    ADD CONSTRAINT service_terms_term_id_fkey FOREIGN KEY (term_id) REFERENCES public.term(id);


--
-- Name: storage storage_incident_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.storage
    ADD CONSTRAINT storage_incident_id_fkey FOREIGN KEY (incident_id) REFERENCES public.incident(id) ON DELETE CASCADE;


--
-- Name: tag tag_tag_type_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.tag
    ADD CONSTRAINT tag_tag_type_id_fkey FOREIGN KEY (tag_type_id) REFERENCES public.tag_type(id);


--
-- Name: task_assignees task_assignees_participant_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.task_assignees
    ADD CONSTRAINT task_assignees_participant_id_fkey FOREIGN KEY (participant_id) REFERENCES public.participant(id) ON DELETE CASCADE;


--
-- Name: task_assignees task_assignees_task_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.task_assignees
    ADD CONSTRAINT task_assignees_task_id_fkey FOREIGN KEY (task_id) REFERENCES public.task(id) ON DELETE CASCADE;


--
-- Name: task task_creator_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.task
    ADD CONSTRAINT task_creator_id_fkey FOREIGN KEY (creator_id) REFERENCES public.participant(id);


--
-- Name: task task_incident_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.task
    ADD CONSTRAINT task_incident_id_fkey FOREIGN KEY (incident_id) REFERENCES public.incident(id) ON DELETE CASCADE;


--
-- Name: task task_owner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.task
    ADD CONSTRAINT task_owner_id_fkey FOREIGN KEY (owner_id) REFERENCES public.participant(id);


--
-- Name: task_tickets task_tickets_task_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.task_tickets
    ADD CONSTRAINT task_tickets_task_id_fkey FOREIGN KEY (task_id) REFERENCES public.task(id) ON DELETE CASCADE;


--
-- Name: task_tickets task_tickets_ticket_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.task_tickets
    ADD CONSTRAINT task_tickets_ticket_id_fkey FOREIGN KEY (ticket_id) REFERENCES public.ticket(id) ON DELETE CASCADE;


--
-- Name: team_contact_incident team_contact_incident_incident_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.team_contact_incident
    ADD CONSTRAINT team_contact_incident_incident_id_fkey FOREIGN KEY (incident_id) REFERENCES public.incident(id);


--
-- Name: team_contact_incident_priority team_contact_incident_priority_incident_priority_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.team_contact_incident_priority
    ADD CONSTRAINT team_contact_incident_priority_incident_priority_id_fkey FOREIGN KEY (incident_priority_id) REFERENCES public.incident_priority(id);


--
-- Name: team_contact_incident_priority team_contact_incident_priority_team_contact_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.team_contact_incident_priority
    ADD CONSTRAINT team_contact_incident_priority_team_contact_id_fkey FOREIGN KEY (team_contact_id) REFERENCES public.team_contact(id);


--
-- Name: team_contact_incident team_contact_incident_team_contact_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.team_contact_incident
    ADD CONSTRAINT team_contact_incident_team_contact_id_fkey FOREIGN KEY (team_contact_id) REFERENCES public.team_contact(id);


--
-- Name: team_contact_incident_type team_contact_incident_type_incident_type_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.team_contact_incident_type
    ADD CONSTRAINT team_contact_incident_type_incident_type_id_fkey FOREIGN KEY (incident_type_id) REFERENCES public.incident_type(id);


--
-- Name: team_contact_incident_type team_contact_incident_type_team_contact_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.team_contact_incident_type
    ADD CONSTRAINT team_contact_incident_type_team_contact_id_fkey FOREIGN KEY (team_contact_id) REFERENCES public.team_contact(id);


--
-- Name: team_contact_terms team_contact_terms_team_contact_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.team_contact_terms
    ADD CONSTRAINT team_contact_terms_team_contact_id_fkey FOREIGN KEY (team_contact_id) REFERENCES public.team_contact(id);


--
-- Name: team_contact_terms team_contact_terms_term_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.team_contact_terms
    ADD CONSTRAINT team_contact_terms_term_id_fkey FOREIGN KEY (term_id) REFERENCES public.term(id);


--
-- Name: ticket ticket_incident_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ticket
    ADD CONSTRAINT ticket_incident_id_fkey FOREIGN KEY (incident_id) REFERENCES public.incident(id) ON DELETE CASCADE;


--
-- Name: workflow_incident_priority workflow_incident_priority_incident_priority_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.workflow_incident_priority
    ADD CONSTRAINT workflow_incident_priority_incident_priority_id_fkey FOREIGN KEY (incident_priority_id) REFERENCES public.incident_priority(id);


--
-- Name: workflow_incident_priority workflow_incident_priority_workflow_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.workflow_incident_priority
    ADD CONSTRAINT workflow_incident_priority_workflow_id_fkey FOREIGN KEY (workflow_id) REFERENCES public.workflow(id);


--
-- Name: workflow_incident_type workflow_incident_type_incident_type_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.workflow_incident_type
    ADD CONSTRAINT workflow_incident_type_incident_type_id_fkey FOREIGN KEY (incident_type_id) REFERENCES public.incident_type(id);


--
-- Name: workflow_incident_type workflow_incident_type_workflow_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.workflow_incident_type
    ADD CONSTRAINT workflow_incident_type_workflow_id_fkey FOREIGN KEY (workflow_id) REFERENCES public.workflow(id);


--
-- Name: workflow_instance_artifact workflow_instance_artifact_document_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.workflow_instance_artifact
    ADD CONSTRAINT workflow_instance_artifact_document_id_fkey FOREIGN KEY (document_id) REFERENCES public.document(id);


--
-- Name: workflow_instance_artifact workflow_instance_artifact_workflow_instance_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.workflow_instance_artifact
    ADD CONSTRAINT workflow_instance_artifact_workflow_instance_id_fkey FOREIGN KEY (workflow_instance_id) REFERENCES public.workflow_instance(id);


--
-- Name: workflow_instance workflow_instance_creator_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.workflow_instance
    ADD CONSTRAINT workflow_instance_creator_id_fkey FOREIGN KEY (creator_id) REFERENCES public.participant(id);


--
-- Name: workflow_instance workflow_instance_incident_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.workflow_instance
    ADD CONSTRAINT workflow_instance_incident_id_fkey FOREIGN KEY (incident_id) REFERENCES public.incident(id) ON DELETE CASCADE;


--
-- Name: workflow_instance workflow_instance_workflow_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.workflow_instance
    ADD CONSTRAINT workflow_instance_workflow_id_fkey FOREIGN KEY (workflow_id) REFERENCES public.workflow(id);


--
-- Name: workflow workflow_plugin_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.workflow
    ADD CONSTRAINT workflow_plugin_id_fkey FOREIGN KEY (plugin_id) REFERENCES public.plugin(id);


--
-- Name: workflow_term workflow_term_term_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.workflow_term
    ADD CONSTRAINT workflow_term_term_id_fkey FOREIGN KEY (term_id) REFERENCES public.term(id);


--
-- Name: workflow_term workflow_term_workflow_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.workflow_term
    ADD CONSTRAINT workflow_term_workflow_id_fkey FOREIGN KEY (workflow_id) REFERENCES public.workflow(id);


--
-- PostgreSQL database dump complete
--

