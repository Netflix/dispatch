"""Adds back required foreign keys.

Revision ID: 5afcb4dfa2b0
Revises: f011c050b9ba
Create Date: 2021-06-08 11:40:38.058256

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "5afcb4dfa2b0"
down_revision = "f011c050b9ba"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_foreign_key(
        None, "assoc_document_filters", "document", ["document_id"], ["id"], ondelete="CASCADE"
    )
    op.create_foreign_key(
        None,
        "assoc_document_filters",
        "search_filter",
        ["search_filter_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        None, "assoc_incident_tags", "incident", ["incident_id"], ["id"], ondelete="CASCADE"
    )
    op.create_foreign_key(
        None, "assoc_incident_tags", "tag", ["tag_id"], ["id"], ondelete="CASCADE"
    )
    op.create_foreign_key(
        None, "assoc_incident_terms", "term", ["term_id"], ["id"], ondelete="CASCADE"
    )
    op.create_foreign_key(
        None, "assoc_incident_terms", "incident", ["incident_id"], ["id"], ondelete="CASCADE"
    )
    op.create_foreign_key(
        None,
        "assoc_individual_contact_filters",
        "individual_contact",
        ["individual_contact_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        None,
        "assoc_individual_contact_filters",
        "search_filter",
        ["search_filter_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        None,
        "assoc_notification_filters",
        "notification",
        ["notification_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        None,
        "assoc_notification_filters",
        "search_filter",
        ["search_filter_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        None, "assoc_service_filters", "service", ["service_id"], ["id"], ondelete="CASCADE"
    )
    op.create_foreign_key(
        None,
        "assoc_service_filters",
        "search_filter",
        ["search_filter_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        None,
        "assoc_team_contact_filters",
        "search_filter",
        ["search_filter_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        None,
        "assoc_team_contact_filters",
        "team_contact",
        ["team_contact_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        None, "conference", "incident", ["incident_id"], ["id"], ondelete="CASCADE"
    )
    op.create_foreign_key(
        None, "conversation", "incident", ["incident_id"], ["id"], ondelete="CASCADE"
    )
    op.create_foreign_key(None, "definition", "project", ["project_id"], ["id"], ondelete="CASCADE")
    op.create_foreign_key(None, "definition_teams", "team_contact", ["team_contact_id"], ["id"])
    op.create_foreign_key(None, "definition_teams", "definition", ["definition_id"], ["id"])
    op.create_foreign_key(None, "definition_terms", "term", ["term_id"], ["id"])
    op.create_foreign_key(None, "definition_terms", "definition", ["definition_id"], ["id"])
    op.create_foreign_key(
        None,
        "dispatch_user_project",
        "dispatch_user",
        ["dispatch_user_id"],
        ["id"],
        referent_schema="dispatch_core",
    )
    op.create_foreign_key(None, "dispatch_user_project", "project", ["project_id"], ["id"])
    op.create_foreign_key(
        None, "document", "incident", ["incident_id"], ["id"], ondelete="CASCADE", use_alter=True
    )
    op.create_foreign_key(None, "document", "project", ["project_id"], ["id"], ondelete="CASCADE")
    op.create_foreign_key(None, "document", "report", ["report_id"], ["id"])
    op.create_foreign_key(
        None, "event", "individual_contact", ["individual_id"], ["id"], ondelete="CASCADE"
    )
    op.create_foreign_key(None, "event", "incident", ["incident_id"], ["id"], ondelete="CASCADE")
    op.create_foreign_key(None, "feedback", "participant", ["participant_id"], ["id"])
    op.create_foreign_key(None, "feedback", "incident", ["incident_id"], ["id"], ondelete="CASCADE")
    op.create_foreign_key(None, "group", "incident", ["incident_id"], ["id"], ondelete="CASCADE")
    op.create_foreign_key(None, "incident", "incident", ["duplicate_id"], ["id"])
    op.create_foreign_key(None, "incident", "incident_type", ["incident_type_id"], ["id"])
    op.create_foreign_key(None, "incident", "project", ["project_id"], ["id"], ondelete="CASCADE")
    op.create_foreign_key(None, "incident", "incident_priority", ["incident_priority_id"], ["id"])
    op.create_foreign_key(
        None, "incident_cost", "project", ["project_id"], ["id"], ondelete="CASCADE"
    )
    op.create_foreign_key(
        None, "incident_cost", "incident", ["incident_id"], ["id"], ondelete="CASCADE"
    )
    op.create_foreign_key(
        None, "incident_cost", "incident_cost_type", ["incident_cost_type_id"], ["id"]
    )
    op.create_foreign_key(
        None, "incident_cost_type", "project", ["project_id"], ["id"], ondelete="CASCADE"
    )
    op.create_foreign_key(
        None, "incident_priority", "project", ["project_id"], ["id"], ondelete="CASCADE"
    )
    op.create_foreign_key(None, "incident_type", "service", ["liaison_service_id"], ["id"])
    op.create_foreign_key(
        None, "incident_type", "project", ["project_id"], ["id"], ondelete="CASCADE"
    )
    op.create_foreign_key(None, "incident_type", "document", ["template_document_id"], ["id"])
    op.create_foreign_key(None, "incident_type", "service", ["commander_service_id"], ["id"])
    op.create_foreign_key(
        None, "individual_contact", "project", ["project_id"], ["id"], ondelete="CASCADE"
    )
    op.create_foreign_key(None, "individual_contact", "team_contact", ["team_contact_id"], ["id"])
    op.create_foreign_key(
        None, "notification", "project", ["project_id"], ["id"], ondelete="CASCADE"
    )
    op.create_foreign_key(
        None, "participant", "service", ["service_id"], ["id"], ondelete="CASCADE"
    )
    op.create_foreign_key(
        None, "participant", "individual_contact", ["individual_contact_id"], ["id"]
    )
    op.create_foreign_key(
        None, "participant", "incident", ["incident_id"], ["id"], ondelete="CASCADE", use_alter=True
    )
    op.create_foreign_key(None, "participant", "participant", ["added_by_id"], ["id"])
    op.create_foreign_key(
        None, "participant_role", "participant", ["participant_id"], ["id"], ondelete="CASCADE"
    )
    op.create_foreign_key(
        None, "plugin_instance", "project", ["project_id"], ["id"], ondelete="CASCADE"
    )
    op.create_foreign_key(None, "plugin_instance", "plugin", ["plugin_id"], ["id"])
    op.create_foreign_key(
        None,
        "project",
        "organization",
        ["organization_id"],
        ["id"],
        referent_schema="dispatch_core",
    )
    op.create_foreign_key(None, "recommendation", "incident", ["incident_id"], ["id"])
    op.drop_column("recommendation", "text")
    op.create_foreign_key(
        None, "recommendation_match", "recommendation", ["recommendation_id"], ["id"]
    )
    op.create_foreign_key(None, "report", "participant", ["participant_id"], ["id"])
    op.create_foreign_key(
        None, "report", "incident", ["incident_id"], ["id"], ondelete="CASCADE", use_alter=True
    )
    op.create_foreign_key(
        None, "search_filter", "project", ["project_id"], ["id"], ondelete="CASCADE"
    )
    op.create_foreign_key(
        None,
        "search_filter",
        "dispatch_user",
        ["creator_id"],
        ["id"],
        referent_schema="dispatch_core",
    )
    op.create_foreign_key(None, "service", "project", ["project_id"], ["id"], ondelete="CASCADE")
    op.create_foreign_key(None, "service_incident", "incident", ["incident_id"], ["id"])
    op.create_foreign_key(None, "service_incident", "service", ["service_id"], ["id"])
    op.create_foreign_key(None, "storage", "incident", ["incident_id"], ["id"], ondelete="CASCADE")
    op.create_foreign_key(None, "tag", "project", ["project_id"], ["id"], ondelete="CASCADE")
    op.create_foreign_key(None, "tag", "tag_type", ["tag_type_id"], ["id"])
    op.create_foreign_key(None, "tag_type", "project", ["project_id"], ["id"], ondelete="CASCADE")
    op.create_foreign_key(None, "task", "incident", ["incident_id"], ["id"], ondelete="CASCADE")
    op.create_foreign_key(None, "task", "participant", ["creator_id"], ["id"], ondelete="CASCADE")
    op.create_foreign_key(None, "task", "participant", ["owner_id"], ["id"], ondelete="CASCADE")
    op.create_foreign_key(
        None, "task_assignees", "participant", ["participant_id"], ["id"], ondelete="CASCADE"
    )
    op.create_foreign_key(None, "task_assignees", "task", ["task_id"], ["id"], ondelete="CASCADE")
    op.create_foreign_key(None, "task_tickets", "ticket", ["ticket_id"], ["id"], ondelete="CASCADE")
    op.create_foreign_key(None, "task_tickets", "task", ["task_id"], ["id"], ondelete="CASCADE")
    op.create_foreign_key(
        None, "team_contact", "project", ["project_id"], ["id"], ondelete="CASCADE"
    )
    op.create_foreign_key(
        None, "team_contact_incident", "team_contact", ["team_contact_id"], ["id"]
    )
    op.create_foreign_key(None, "team_contact_incident", "incident", ["incident_id"], ["id"])
    op.create_foreign_key(None, "term", "project", ["project_id"], ["id"], ondelete="CASCADE")
    op.create_foreign_key(None, "ticket", "incident", ["incident_id"], ["id"], ondelete="CASCADE")
    op.create_foreign_key(None, "workflow", "plugin", ["plugin_id"], ["id"])
    op.create_foreign_key(None, "workflow", "project", ["project_id"], ["id"], ondelete="CASCADE")
    op.create_foreign_key(
        None,
        "workflow_incident_priority",
        "incident_priority",
        ["incident_priority_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        None, "workflow_incident_priority", "workflow", ["workflow_id"], ["id"], ondelete="CASCADE"
    )
    op.create_foreign_key(
        None, "workflow_incident_type", "workflow", ["workflow_id"], ["id"], ondelete="CASCADE"
    )
    op.create_foreign_key(
        None,
        "workflow_incident_type",
        "incident_type",
        ["incident_type_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        None, "workflow_instance", "incident", ["incident_id"], ["id"], ondelete="CASCADE"
    )
    op.create_foreign_key(None, "workflow_instance", "workflow", ["workflow_id"], ["id"])
    op.create_foreign_key(None, "workflow_instance", "participant", ["creator_id"], ["id"])
    op.create_foreign_key(
        None, "workflow_instance_artifact", "document", ["document_id"], ["id"], ondelete="CASCADE"
    )
    op.create_foreign_key(
        None,
        "workflow_instance_artifact",
        "workflow_instance",
        ["workflow_instance_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.create_foreign_key(None, "workflow_term", "term", ["term_id"], ["id"], ondelete="CASCADE")
    op.create_foreign_key(
        None, "workflow_term", "workflow", ["workflow_id"], ["id"], ondelete="CASCADE"
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "workflow_term", type_="foreignkey")
    op.drop_constraint(None, "workflow_term", type_="foreignkey")
    op.drop_constraint(None, "workflow_instance_artifact", type_="foreignkey")
    op.drop_constraint(None, "workflow_instance_artifact", type_="foreignkey")
    op.drop_constraint(None, "workflow_instance", type_="foreignkey")
    op.drop_constraint(None, "workflow_instance", type_="foreignkey")
    op.drop_constraint(None, "workflow_instance", type_="foreignkey")
    op.drop_constraint(None, "workflow_incident_type", type_="foreignkey")
    op.drop_constraint(None, "workflow_incident_type", type_="foreignkey")
    op.drop_constraint(None, "workflow_incident_priority", type_="foreignkey")
    op.drop_constraint(None, "workflow_incident_priority", type_="foreignkey")
    op.drop_constraint(None, "workflow", type_="foreignkey")
    op.drop_constraint(None, "workflow", type_="foreignkey")
    op.drop_constraint(None, "ticket", type_="foreignkey")
    op.drop_constraint(None, "term", type_="foreignkey")
    op.drop_constraint(None, "team_contact_incident", type_="foreignkey")
    op.drop_constraint(None, "team_contact_incident", type_="foreignkey")
    op.drop_constraint(None, "team_contact", type_="foreignkey")
    op.drop_constraint(None, "task_tickets", type_="foreignkey")
    op.drop_constraint(None, "task_tickets", type_="foreignkey")
    op.drop_constraint(None, "task_assignees", type_="foreignkey")
    op.drop_constraint(None, "task_assignees", type_="foreignkey")
    op.drop_constraint(None, "task", type_="foreignkey")
    op.drop_constraint(None, "task", type_="foreignkey")
    op.drop_constraint(None, "task", type_="foreignkey")
    op.drop_constraint(None, "tag_type", type_="foreignkey")
    op.drop_constraint(None, "tag", type_="foreignkey")
    op.drop_constraint(None, "tag", type_="foreignkey")
    op.drop_constraint(None, "storage", type_="foreignkey")
    op.drop_constraint(None, "service_incident", type_="foreignkey")
    op.drop_constraint(None, "service_incident", type_="foreignkey")
    op.drop_constraint(None, "service", type_="foreignkey")
    op.drop_constraint(None, "search_filter", type_="foreignkey")
    op.drop_constraint(None, "search_filter", type_="foreignkey")
    op.drop_constraint(None, "report", type_="foreignkey")
    op.drop_constraint(None, "report", type_="foreignkey")
    op.drop_constraint(None, "recommendation_match", type_="foreignkey")
    op.add_column(
        "recommendation", sa.Column("text", sa.VARCHAR(), autoincrement=False, nullable=True)
    )
    op.drop_constraint(None, "recommendation", type_="foreignkey")
    op.drop_constraint(None, "project", type_="foreignkey")
    op.drop_constraint(None, "plugin_instance", type_="foreignkey")
    op.drop_constraint(None, "plugin_instance", type_="foreignkey")
    op.drop_constraint(None, "participant_role", type_="foreignkey")
    op.drop_constraint(None, "participant", type_="foreignkey")
    op.drop_constraint(None, "participant", type_="foreignkey")
    op.drop_constraint(None, "participant", type_="foreignkey")
    op.drop_constraint(None, "participant", type_="foreignkey")
    op.drop_constraint(None, "notification", type_="foreignkey")
    op.drop_constraint(None, "individual_contact", type_="foreignkey")
    op.drop_constraint(None, "individual_contact", type_="foreignkey")
    op.drop_constraint(None, "incident_type", type_="foreignkey")
    op.drop_constraint(None, "incident_type", type_="foreignkey")
    op.drop_constraint(None, "incident_type", type_="foreignkey")
    op.drop_constraint(None, "incident_type", type_="foreignkey")
    op.drop_constraint(None, "incident_priority", type_="foreignkey")
    op.drop_constraint(None, "incident_cost_type", type_="foreignkey")
    op.drop_constraint(None, "incident_cost", type_="foreignkey")
    op.drop_constraint(None, "incident_cost", type_="foreignkey")
    op.drop_constraint(None, "incident_cost", type_="foreignkey")
    op.drop_constraint(None, "incident", type_="foreignkey")
    op.drop_constraint(None, "incident", type_="foreignkey")
    op.drop_constraint(None, "incident", type_="foreignkey")
    op.drop_constraint(None, "incident", type_="foreignkey")
    op.drop_constraint(None, "group", type_="foreignkey")
    op.drop_constraint(None, "feedback", type_="foreignkey")
    op.drop_constraint(None, "feedback", type_="foreignkey")
    op.drop_constraint(None, "event", type_="foreignkey")
    op.drop_constraint(None, "event", type_="foreignkey")
    op.drop_constraint(None, "document", type_="foreignkey")
    op.drop_constraint(None, "document", type_="foreignkey")
    op.drop_constraint(None, "document", type_="foreignkey")
    op.drop_constraint(None, "dispatch_user_project", type_="foreignkey")
    op.drop_constraint(None, "dispatch_user_project", type_="foreignkey")
    op.drop_constraint(None, "definition_terms", type_="foreignkey")
    op.drop_constraint(None, "definition_terms", type_="foreignkey")
    op.drop_constraint(None, "definition_teams", type_="foreignkey")
    op.drop_constraint(None, "definition_teams", type_="foreignkey")
    op.drop_constraint(None, "definition", type_="foreignkey")
    op.drop_constraint(None, "conversation", type_="foreignkey")
    op.drop_constraint(None, "conference", type_="foreignkey")
    op.drop_constraint(None, "assoc_team_contact_filters", type_="foreignkey")
    op.drop_constraint(None, "assoc_team_contact_filters", type_="foreignkey")
    op.drop_constraint(None, "assoc_service_filters", type_="foreignkey")
    op.drop_constraint(None, "assoc_service_filters", type_="foreignkey")
    op.drop_constraint(None, "assoc_notification_filters", type_="foreignkey")
    op.drop_constraint(None, "assoc_notification_filters", type_="foreignkey")
    op.drop_constraint(None, "assoc_individual_contact_filters", type_="foreignkey")
    op.drop_constraint(None, "assoc_individual_contact_filters", type_="foreignkey")
    op.drop_constraint(None, "assoc_incident_terms", type_="foreignkey")
    op.drop_constraint(None, "assoc_incident_terms", type_="foreignkey")
    op.drop_constraint(None, "assoc_incident_tags", type_="foreignkey")
    op.drop_constraint(None, "assoc_incident_tags", type_="foreignkey")
    op.drop_constraint(None, "assoc_document_filters", type_="foreignkey")
    op.drop_constraint(None, "assoc_document_filters", type_="foreignkey")
    # ### end Alembic commands ###
