"""Adds signal processing

Revision ID: 4721e1059262
Revises: f9384b873721
Create Date: 2022-09-09 10:26:29.875566

"""
from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "4721e1059262"
down_revision = "f9384b873721"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "duplication_rule",
        sa.Column("evergreen", sa.Boolean(), nullable=True),
        sa.Column("evergreen_owner", sa.String(), nullable=True),
        sa.Column("evergreen_reminder_interval", sa.Integer(), nullable=True),
        sa.Column("evergreen_last_reminder_at", sa.DateTime(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("expression", sa.JSON(), nullable=False),
        sa.Column("creator_id", sa.Integer(), nullable=True),
        sa.Column("mode", sa.String(), nullable=False),
        sa.Column("expiration", sa.DateTime(), nullable=True),
        sa.Column("search_vector", sqlalchemy_utils.types.ts_vector.TSVectorType(), nullable=True),
        sa.Column("project_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["creator_id"],
            ["dispatch_core.dispatch_user.id"],
        ),
        sa.ForeignKeyConstraint(["project_id"], ["project.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name", "project_id"),
    )
    op.create_index(
        "duplication_rule_search_vector_idx",
        "duplication_rule",
        ["search_vector"],
        unique=False,
        postgresql_using="gin",
    )
    op.create_table(
        "supression_rule",
        sa.Column("evergreen", sa.Boolean(), nullable=True),
        sa.Column("evergreen_owner", sa.String(), nullable=True),
        sa.Column("evergreen_reminder_interval", sa.Integer(), nullable=True),
        sa.Column("evergreen_last_reminder_at", sa.DateTime(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("expression", sa.JSON(), nullable=False),
        sa.Column("creator_id", sa.Integer(), nullable=True),
        sa.Column("mode", sa.String(), nullable=False),
        sa.Column("expiration", sa.DateTime(), nullable=True),
        sa.Column("search_vector", sqlalchemy_utils.types.ts_vector.TSVectorType(), nullable=True),
        sa.Column("project_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["creator_id"],
            ["dispatch_core.dispatch_user.id"],
        ),
        sa.ForeignKeyConstraint(["project_id"], ["project.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name", "project_id"),
    )
    op.create_index(
        "supression_rule_search_vector_idx",
        "supression_rule",
        ["search_vector"],
        unique=False,
        postgresql_using="gin",
    )
    op.create_table(
        "signal",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("severity", sa.String(), nullable=True),
        sa.Column("detection", sa.String(), nullable=True),
        sa.Column("fingerprint", sa.String(), nullable=True),
        sa.Column("duplicate", sa.Boolean(), nullable=True),
        sa.Column("supressed", sa.Boolean(), nullable=True),
        sa.Column("raw", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("source_id", sa.Integer(), nullable=True),
        sa.Column("duplication_rule_id", sa.Integer(), nullable=True),
        sa.Column("supression_rule_id", sa.Integer(), nullable=True),
        sa.Column("project_id", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["duplication_rule_id"],
            ["duplication_rule.id"],
        ),
        sa.ForeignKeyConstraint(["project_id"], ["project.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(
            ["source_id"],
            ["source.id"],
        ),
        sa.ForeignKeyConstraint(
            ["supression_rule_id"],
            ["supression_rule.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("signal")
    op.drop_index(
        "supression_rule_search_vector_idx", table_name="supression_rule", postgresql_using="gin"
    )
    op.drop_table("supression_rule")
    op.drop_index(
        "duplication_rule_search_vector_idx", table_name="duplication_rule", postgresql_using="gin"
    )
    op.drop_table("duplication_rule")
    # ### end Alembic commands ###
