"""Adds GenAI prompt table.

Revision ID: 408118048599
Revises: df10accae9a9
Create Date: 2025-07-16 16:39:33.957649

"""

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "408118048599"
down_revision = "df10accae9a9"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "prompt",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("genai_type", sa.Integer(), nullable=False),
        sa.Column("genai_prompt", sa.String(), nullable=False),
        sa.Column("genai_system_message", sa.String(), nullable=True),
        sa.Column("enabled", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("project_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["project_id"], ["project.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )

    # Add unique constraint to ensure only one enabled prompt per type per project
    op.create_unique_constraint(
        "uq_prompt_type_project_enabled",
        "prompt",
        ["genai_type", "project_id", "enabled"],
        deferrable=True,
        initially="DEFERRED",
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("uq_prompt_type_project_enabled", "prompt", type_="unique")
    op.drop_table("prompt")
    # ### end Alembic commands ###
