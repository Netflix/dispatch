"""Fixes automatic generation issues

Revision ID: 928b725d64f6
Revises: 3edb0476365a
Create Date: 2024-11-04 15:55:57.864691

"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.engine.reflection import Inspector

# revision identifiers, used by Alembic.
revision = "928b725d64f6"
down_revision = "3edb0476365a"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    conn = op.get_bind()
    inspector = Inspector.from_engine(conn)

    # Check if the table exists
    if "service_incident" in inspector.get_table_names():
        op.drop_table("service_incident")

    op.alter_column(
        "entity", "source", existing_type=sa.BOOLEAN(), type_=sa.String(), existing_nullable=True
    )

    indexes = inspector.get_indexes("entity")
    index_exists = any(index["name"] == "ix_entity_search_vector" for index in indexes)

    if index_exists:
        op.drop_index("ix_entity_search_vector", table_name="entity", postgresql_using="gin")

    index_exists = any(index["name"] == "entity_search_vector_idx" for index in indexes)
    if not index_exists:
        op.create_index(
            "entity_search_vector_idx",
            "entity",
            ["search_vector"],
            unique=False,
            postgresql_using="gin",
        )
    op.alter_column("entity_type", "jpath", existing_type=sa.VARCHAR(), nullable=True)

    columns = inspector.get_columns("plugin_instance")
    column_exists = any(column["name"] == "configuration" for column in columns)
    if column_exists:
        op.drop_column("plugin_instance", "configuration")

    op.drop_constraint("project_stable_priority_id_fkey", "project", type_="foreignkey")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###
