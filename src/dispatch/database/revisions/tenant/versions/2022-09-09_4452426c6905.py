"""Replaces Assoc Object tables with 1:1 relationships for case and types, severities, and priorities

Revision ID: 4452426c6905
Revises: f9384b873721
Create Date: 2022-09-09 11:41:01.036642

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "4452426c6905"
down_revision = "f9384b873721"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("assoc_case_case_type")
    op.drop_table("assoc_case_case_priority")
    op.drop_table("assoc_case_case_severity")
    op.add_column("case", sa.Column("case_type_id", sa.Integer(), nullable=True))
    op.add_column("case", sa.Column("case_severity_id", sa.Integer(), nullable=True))
    op.add_column("case", sa.Column("case_priority_id", sa.Integer(), nullable=True))
    op.create_foreign_key(None, "case", "case_severity", ["case_severity_id"], ["id"])
    op.create_foreign_key(None, "case", "case_type", ["case_type_id"], ["id"])
    op.create_foreign_key(None, "case", "case_priority", ["case_priority_id"], ["id"])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "case", type_="foreignkey")
    op.drop_constraint(None, "case", type_="foreignkey")
    op.drop_constraint(None, "case", type_="foreignkey")
    op.drop_column("case", "case_priority_id")
    op.drop_column("case", "case_severity_id")
    op.drop_column("case", "case_type_id")
    op.create_table(
        "assoc_case_case_severity",
        sa.Column("case_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("case_severity_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(
            ["case_id"],
            ["case.id"],
            name="assoc_case_case_severity_case_id_fkey",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["case_severity_id"],
            ["case_severity.id"],
            name="assoc_case_case_severity_case_severity_id_fkey",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name="assoc_case_case_severity_pkey"),
    )
    op.create_table(
        "assoc_case_case_priority",
        sa.Column("case_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("case_priority_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(
            ["case_id"],
            ["case.id"],
            name="assoc_case_case_priority_case_id_fkey",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["case_priority_id"],
            ["case_priority.id"],
            name="assoc_case_case_priority_case_priority_id_fkey",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name="assoc_case_case_priority_pkey"),
    )
    op.create_table(
        "assoc_case_case_type",
        sa.Column("case_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("case_type_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(
            ["case_id"], ["case.id"], name="assoc_case_case_type_case_id_fkey", ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["case_type_id"],
            ["case_type.id"],
            name="assoc_case_case_type_case_type_id_fkey",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name="assoc_case_case_type_pkey"),
    )
    # ### end Alembic commands ###
