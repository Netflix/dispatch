"""empty message

Revision ID: 8a558baeef05
Revises: f011c050b9ba
Create Date: 2021-06-15 16:12:33.534076

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "8a558baeef05"
down_revision = "f011c050b9ba"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("document_terms")
    op.drop_table("team_contact_terms")
    op.drop_table("recommendation_documents")
    op.drop_table("service_incident_type")
    op.drop_table("assoc_individual_contact_incident_priority")
    op.drop_table("recommendation_terms")
    op.drop_table("team_contact_incident_priority")
    op.drop_table("recommendation_individual_contacts")
    op.drop_table("assoc_individual_contact_terms")
    op.drop_table("recommendation_incident_types")
    op.drop_table("assoc_individual_contact_incident_type")
    op.drop_table("recommendation_incident_priorities")
    op.drop_table("document_incident_priority")
    op.drop_table("service_incident_priority")
    op.drop_table("document_incident_type")
    op.drop_table("recommendation_services")
    op.drop_table("service_terms")
    op.drop_table("team_contact_incident_type")
    op.drop_table("recommendation_team_contacts")
    op.drop_table("recommendation_accuracy")
    op.drop_constraint(
        "assoc_document_filters_document_id_fkey", "assoc_document_filters", type_="foreignkey"
    )
    op.drop_constraint(
        "assoc_document_filters_search_filter_id_fkey", "assoc_document_filters", type_="foreignkey"
    )
    op.create_foreign_key(
        None,
        "assoc_document_filters",
        "search_filter",
        ["search_filter_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        None, "assoc_document_filters", "document", ["document_id"], ["id"], ondelete="CASCADE"
    )
    op.drop_constraint(
        "assoc_incident_tags_incident_id_fkey", "assoc_incident_tags", type_="foreignkey"
    )
    op.drop_constraint("assoc_incident_tags_tag_id_fkey", "assoc_incident_tags", type_="foreignkey")
    op.create_foreign_key(
        None, "assoc_incident_tags", "incident", ["incident_id"], ["id"], ondelete="CASCADE"
    )
    op.create_foreign_key(
        None, "assoc_incident_tags", "tag", ["tag_id"], ["id"], ondelete="CASCADE"
    )
    op.drop_constraint(
        "assoc_incident_terms_incident_id_fkey", "assoc_incident_terms", type_="foreignkey"
    )
    op.drop_constraint(
        "assoc_incident_terms_term_id_fkey", "assoc_incident_terms", type_="foreignkey"
    )
    op.create_foreign_key(
        None, "assoc_incident_terms", "incident", ["incident_id"], ["id"], ondelete="CASCADE"
    )
    op.create_foreign_key(
        None, "assoc_incident_terms", "term", ["term_id"], ["id"], ondelete="CASCADE"
    )
    op.drop_constraint(
        "assoc_individual_contact_filters_search_filter_id_fkey",
        "assoc_individual_contact_filters",
        type_="foreignkey",
    )
    op.drop_constraint(
        "assoc_individual_contact_filters_individual_contact_id_fkey",
        "assoc_individual_contact_filters",
        type_="foreignkey",
    )
    op.create_foreign_key(
        None,
        "assoc_individual_contact_filters",
        "individual_contact",
        ["individual_contact_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        None,
        "assoc_individual_contact_filters",
        "search_filter",
        ["search_filter_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.drop_constraint(
        "assoc_notification_filters_search_filter_id_fkey",
        "assoc_notification_filters",
        type_="foreignkey",
    )
    op.drop_constraint(
        "assoc_notification_filters_notification_id_fkey",
        "assoc_notification_filters",
        type_="foreignkey",
    )
    op.create_foreign_key(
        None,
        "assoc_notification_filters",
        "search_filter",
        ["search_filter_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        None,
        "assoc_notification_filters",
        "notification",
        ["notification_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.drop_constraint(
        "assoc_service_filters_service_id_fkey", "assoc_service_filters", type_="foreignkey"
    )
    op.drop_constraint(
        "assoc_service_filters_search_filter_id_fkey", "assoc_service_filters", type_="foreignkey"
    )
    op.create_foreign_key(
        None,
        "assoc_service_filters",
        "search_filter",
        ["search_filter_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        None, "assoc_service_filters", "service", ["service_id"], ["id"], ondelete="CASCADE"
    )
    op.drop_constraint(
        "assoc_team_contact_filters_search_filter_id_fkey",
        "assoc_team_contact_filters",
        type_="foreignkey",
    )
    op.drop_constraint(
        "assoc_team_contact_filters_team_contact_id_fkey",
        "assoc_team_contact_filters",
        type_="foreignkey",
    )
    op.create_foreign_key(
        None,
        "assoc_team_contact_filters",
        "team_contact",
        ["team_contact_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        None,
        "assoc_team_contact_filters",
        "search_filter",
        ["search_filter_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.drop_constraint("conference_incident_id_fkey", "conference", type_="foreignkey")
    op.create_foreign_key(
        None, "conference", "incident", ["incident_id"], ["id"], ondelete="CASCADE"
    )
    op.drop_constraint("conversation_incident_id_fkey", "conversation", type_="foreignkey")
    op.create_foreign_key(
        None, "conversation", "incident", ["incident_id"], ["id"], ondelete="CASCADE"
    )
    op.drop_constraint("definition_project_id_fkey", "definition", type_="foreignkey")
    op.create_foreign_key(None, "definition", "project", ["project_id"], ["id"], ondelete="CASCADE")
    op.drop_constraint(
        "definition_teams_definition_id_fkey", "definition_teams", type_="foreignkey"
    )
    op.drop_constraint(
        "definition_teams_team_contact_id_fkey", "definition_teams", type_="foreignkey"
    )
    op.create_foreign_key(None, "definition_teams", "definition", ["definition_id"], ["id"])
    op.create_foreign_key(None, "definition_teams", "team_contact", ["team_contact_id"], ["id"])
    op.drop_constraint("definition_terms_term_id_fkey", "definition_terms", type_="foreignkey")
    op.drop_constraint(
        "definition_terms_definition_id_fkey", "definition_terms", type_="foreignkey"
    )
    op.create_foreign_key(None, "definition_terms", "term", ["term_id"], ["id"])
    op.create_foreign_key(None, "definition_terms", "definition", ["definition_id"], ["id"])
    op.alter_column(
        "dispatch_user_project", "dispatch_user_id", existing_type=sa.INTEGER(), nullable=False
    )
    op.alter_column(
        "dispatch_user_project", "project_id", existing_type=sa.INTEGER(), nullable=False
    )
    op.drop_constraint(
        "dispatch_user_project_project_id_fkey", "dispatch_user_project", type_="foreignkey"
    )
    op.drop_constraint(
        "dispatch_user_project_dispatch_user_id_fkey", "dispatch_user_project", type_="foreignkey"
    )
    op.create_foreign_key(None, "dispatch_user_project", "project", ["project_id"], ["id"])
    op.create_foreign_key(
        None,
        "dispatch_user_project",
        "dispatch_user",
        ["dispatch_user_id"],
        ["id"],
        referent_schema="dispatch_core",
    )
    op.drop_column("dispatch_user_project", "id")
    op.drop_constraint("document_project_id_fkey", "document", type_="foreignkey")
    op.drop_constraint("document_incident_id_fkey", "document", type_="foreignkey")
    op.drop_constraint("document_report_id_fkey", "document", type_="foreignkey")
    op.create_foreign_key(None, "document", "project", ["project_id"], ["id"], ondelete="CASCADE")
    op.create_foreign_key(None, "document", "report", ["report_id"], ["id"])
    op.create_foreign_key(
        None, "document", "incident", ["incident_id"], ["id"], ondelete="CASCADE", use_alter=True
    )
    op.drop_constraint("event_incident_id_fkey", "event", type_="foreignkey")
    op.drop_constraint("event_individual_id_fkey", "event", type_="foreignkey")
    op.create_foreign_key(
        None, "event", "individual_contact", ["individual_id"], ["id"], ondelete="CASCADE"
    )
    op.create_foreign_key(None, "event", "incident", ["incident_id"], ["id"], ondelete="CASCADE")
    op.drop_constraint("feedback_incident_id_fkey", "feedback", type_="foreignkey")
    op.drop_constraint("feedback_participant_id_fkey", "feedback", type_="foreignkey")
    op.create_foreign_key(None, "feedback", "incident", ["incident_id"], ["id"], ondelete="CASCADE")
    op.create_foreign_key(None, "feedback", "participant", ["participant_id"], ["id"])
    op.drop_constraint("group_incident_id_fkey", "group", type_="foreignkey")
    op.create_foreign_key(None, "group", "incident", ["incident_id"], ["id"], ondelete="CASCADE")
    op.drop_constraint("incident_project_id_fkey", "incident", type_="foreignkey")
    op.drop_constraint("incident_incident_type_id_fkey", "incident", type_="foreignkey")
    op.drop_constraint("incident_duplicate_id_fkey", "incident", type_="foreignkey")
    op.drop_constraint("incident_incident_priority_id_fkey", "incident", type_="foreignkey")
    op.create_foreign_key(None, "incident", "project", ["project_id"], ["id"], ondelete="CASCADE")
    op.create_foreign_key(None, "incident", "incident_priority", ["incident_priority_id"], ["id"])
    op.create_foreign_key(None, "incident", "incident", ["duplicate_id"], ["id"])
    op.create_foreign_key(None, "incident", "incident_type", ["incident_type_id"], ["id"])
    op.drop_constraint("incident_cost_incident_id_fkey", "incident_cost", type_="foreignkey")
    op.drop_constraint("incident_cost_project_id_fkey", "incident_cost", type_="foreignkey")
    op.drop_constraint(
        "incident_cost_incident_cost_type_id_fkey", "incident_cost", type_="foreignkey"
    )
    op.create_foreign_key(
        None, "incident_cost", "incident_cost_type", ["incident_cost_type_id"], ["id"]
    )
    op.create_foreign_key(
        None, "incident_cost", "incident", ["incident_id"], ["id"], ondelete="CASCADE"
    )
    op.create_foreign_key(
        None, "incident_cost", "project", ["project_id"], ["id"], ondelete="CASCADE"
    )
    op.drop_constraint(
        "incident_cost_type_project_id_fkey", "incident_cost_type", type_="foreignkey"
    )
    op.create_foreign_key(
        None, "incident_cost_type", "project", ["project_id"], ["id"], ondelete="CASCADE"
    )
    op.drop_constraint("incident_priority_project_id_fkey", "incident_priority", type_="foreignkey")
    op.create_foreign_key(
        None, "incident_priority", "project", ["project_id"], ["id"], ondelete="CASCADE"
    )
    op.drop_constraint(
        "incident_type_template_document_id_fkey", "incident_type", type_="foreignkey"
    )
    op.drop_constraint("incident_type_project_id_fkey", "incident_type", type_="foreignkey")
    op.drop_constraint(
        "incident_type_commander_service_id_fkey", "incident_type", type_="foreignkey"
    )
    op.execute(
        "ALTER TABLE incident_type DROP CONSTRAINT IF EXISTS incident_type_liason_service_id_fkey"
    )
    op.create_foreign_key(None, "incident_type", "service", ["commander_service_id"], ["id"])
    op.create_foreign_key(None, "incident_type", "document", ["template_document_id"], ["id"])
    op.create_foreign_key(None, "incident_type", "service", ["liaison_service_id"], ["id"])
    op.create_foreign_key(
        None, "incident_type", "project", ["project_id"], ["id"], ondelete="CASCADE"
    )
    op.drop_constraint(
        "individual_contact_project_id_fkey", "individual_contact", type_="foreignkey"
    )
    op.drop_constraint(
        "individual_contact_team_contact_id_fkey", "individual_contact", type_="foreignkey"
    )
    op.create_foreign_key(None, "individual_contact", "team_contact", ["team_contact_id"], ["id"])
    op.create_foreign_key(
        None, "individual_contact", "project", ["project_id"], ["id"], ondelete="CASCADE"
    )
    op.drop_constraint("notification_project_id_fkey", "notification", type_="foreignkey")
    op.create_foreign_key(
        None, "notification", "project", ["project_id"], ["id"], ondelete="CASCADE"
    )
    op.drop_constraint("participant_service_id_fkey", "participant", type_="foreignkey")
    op.drop_constraint("participant_incident_id_fkey", "participant", type_="foreignkey")
    op.drop_constraint("participant_added_by_id_fkey", "participant", type_="foreignkey")
    op.drop_constraint("participant_individual_contact_id_fkey", "participant", type_="foreignkey")
    op.create_foreign_key(
        None, "participant", "individual_contact", ["individual_contact_id"], ["id"]
    )
    op.create_foreign_key(
        None, "participant", "service", ["service_id"], ["id"], ondelete="CASCADE"
    )
    op.create_foreign_key(None, "participant", "participant", ["added_by_id"], ["id"])
    op.create_foreign_key(
        None, "participant", "incident", ["incident_id"], ["id"], ondelete="CASCADE", use_alter=True
    )
    op.drop_constraint(
        "participant_role_participant_id_fkey", "participant_role", type_="foreignkey"
    )
    op.create_foreign_key(
        None, "participant_role", "participant", ["participant_id"], ["id"], ondelete="CASCADE"
    )
    op.drop_constraint("plugin_instance_plugin_id_fkey", "plugin_instance", type_="foreignkey")
    op.drop_constraint("plugin_instance_project_id_fkey", "plugin_instance", type_="foreignkey")
    op.create_foreign_key(
        None, "plugin_instance", "project", ["project_id"], ["id"], ondelete="CASCADE"
    )
    op.create_foreign_key(
        None, "plugin_instance", "plugin", ["plugin_id"], ["id"], referent_schema="dispatch_core"
    )
    op.drop_constraint("project_organization_id_fkey", "project", type_="foreignkey")
    op.create_foreign_key(
        None,
        "project",
        "organization",
        ["organization_id"],
        ["id"],
        referent_schema="dispatch_core",
    )
    op.drop_constraint("recommendation_incident_id_fkey", "recommendation", type_="foreignkey")
    op.create_foreign_key(None, "recommendation", "incident", ["incident_id"], ["id"])
    op.drop_column("recommendation", "text")
    op.drop_constraint(
        "recommendation_match_recommendation_id_fkey", "recommendation_match", type_="foreignkey"
    )
    op.create_foreign_key(
        None, "recommendation_match", "recommendation", ["recommendation_id"], ["id"]
    )
    op.drop_constraint("report_participant_id_fkey", "report", type_="foreignkey")
    op.drop_constraint("report_incident_id_fkey", "report", type_="foreignkey")
    op.create_foreign_key(None, "report", "participant", ["participant_id"], ["id"])
    op.create_foreign_key(
        None, "report", "incident", ["incident_id"], ["id"], ondelete="CASCADE", use_alter=True
    )
    op.drop_constraint("search_filter_project_id_fkey", "search_filter", type_="foreignkey")
    op.drop_constraint("search_filter_creator_id_fkey", "search_filter", type_="foreignkey")
    op.create_foreign_key(
        None, "search_filter", "project", ["project_id"], ["id"], ondelete="CASCADE"
    )
    op.create_foreign_key(
        None,
        "search_filter",
        "dispatch_user",
        ["creator_id"],
        ["id"],
        referent_schema="dispatch_core",
    )
    op.drop_constraint("service_project_id_fkey", "service", type_="foreignkey")
    op.create_foreign_key(None, "service", "project", ["project_id"], ["id"], ondelete="CASCADE")
    op.drop_constraint("service_incident_service_id_fkey", "service_incident", type_="foreignkey")
    op.drop_constraint("service_incident_incident_id_fkey", "service_incident", type_="foreignkey")
    op.create_foreign_key(None, "service_incident", "incident", ["incident_id"], ["id"])
    op.create_foreign_key(None, "service_incident", "service", ["service_id"], ["id"])
    op.drop_constraint("storage_incident_id_fkey", "storage", type_="foreignkey")
    op.create_foreign_key(None, "storage", "incident", ["incident_id"], ["id"], ondelete="CASCADE")
    op.drop_constraint("tag_project_id_fkey", "tag", type_="foreignkey")
    op.drop_constraint("tag_tag_type_id_fkey", "tag", type_="foreignkey")
    op.create_foreign_key(None, "tag", "project", ["project_id"], ["id"], ondelete="CASCADE")
    op.create_foreign_key(None, "tag", "tag_type", ["tag_type_id"], ["id"])
    op.drop_constraint("tag_type_project_id_fkey", "tag_type", type_="foreignkey")
    op.create_foreign_key(None, "tag_type", "project", ["project_id"], ["id"], ondelete="CASCADE")
    op.drop_constraint("task_incident_id_fkey", "task", type_="foreignkey")
    op.drop_constraint("task_creator_id_fkey", "task", type_="foreignkey")
    op.drop_constraint("task_owner_id_fkey", "task", type_="foreignkey")
    op.create_foreign_key(None, "task", "incident", ["incident_id"], ["id"], ondelete="CASCADE")
    op.create_foreign_key(None, "task", "participant", ["creator_id"], ["id"], ondelete="CASCADE")
    op.create_foreign_key(None, "task", "participant", ["owner_id"], ["id"], ondelete="CASCADE")
    op.drop_constraint("task_assignees_task_id_fkey", "task_assignees", type_="foreignkey")
    op.drop_constraint("task_assignees_participant_id_fkey", "task_assignees", type_="foreignkey")
    op.create_foreign_key(
        None, "task_assignees", "participant", ["participant_id"], ["id"], ondelete="CASCADE"
    )
    op.create_foreign_key(None, "task_assignees", "task", ["task_id"], ["id"], ondelete="CASCADE")
    op.drop_constraint("task_tickets_task_id_fkey", "task_tickets", type_="foreignkey")
    op.drop_constraint("task_tickets_ticket_id_fkey", "task_tickets", type_="foreignkey")
    op.create_foreign_key(None, "task_tickets", "task", ["task_id"], ["id"], ondelete="CASCADE")
    op.create_foreign_key(None, "task_tickets", "ticket", ["ticket_id"], ["id"], ondelete="CASCADE")
    op.drop_constraint("team_contact_project_id_fkey", "team_contact", type_="foreignkey")
    op.create_foreign_key(
        None, "team_contact", "project", ["project_id"], ["id"], ondelete="CASCADE"
    )
    op.drop_constraint(
        "team_contact_incident_incident_id_fkey", "team_contact_incident", type_="foreignkey"
    )
    op.drop_constraint(
        "team_contact_incident_team_contact_id_fkey", "team_contact_incident", type_="foreignkey"
    )
    op.create_foreign_key(
        None, "team_contact_incident", "team_contact", ["team_contact_id"], ["id"]
    )
    op.create_foreign_key(None, "team_contact_incident", "incident", ["incident_id"], ["id"])
    op.drop_constraint("term_project_id_fkey", "term", type_="foreignkey")
    op.create_foreign_key(None, "term", "project", ["project_id"], ["id"], ondelete="CASCADE")
    op.drop_constraint("ticket_incident_id_fkey", "ticket", type_="foreignkey")
    op.create_foreign_key(None, "ticket", "incident", ["incident_id"], ["id"], ondelete="CASCADE")
    op.drop_constraint("workflow_plugin_id_fkey", "workflow", type_="foreignkey")
    op.drop_constraint("workflow_project_id_fkey", "workflow", type_="foreignkey")
    op.create_foreign_key(None, "workflow", "project", ["project_id"], ["id"], ondelete="CASCADE")
    op.create_foreign_key(
        None, "workflow", "plugin", ["plugin_id"], ["id"], referent_schema="dispatch_core"
    )
    op.drop_constraint(
        "workflow_incident_priority_incident_priority_id_fkey",
        "workflow_incident_priority",
        type_="foreignkey",
    )
    op.drop_constraint(
        "workflow_incident_priority_workflow_id_fkey",
        "workflow_incident_priority",
        type_="foreignkey",
    )
    op.create_foreign_key(
        None,
        "workflow_incident_priority",
        "incident_priority",
        ["incident_priority_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        None, "workflow_incident_priority", "workflow", ["workflow_id"], ["id"], ondelete="CASCADE"
    )
    op.drop_constraint(
        "workflow_incident_type_incident_type_id_fkey", "workflow_incident_type", type_="foreignkey"
    )
    op.drop_constraint(
        "workflow_incident_type_workflow_id_fkey", "workflow_incident_type", type_="foreignkey"
    )
    op.create_foreign_key(
        None,
        "workflow_incident_type",
        "incident_type",
        ["incident_type_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        None, "workflow_incident_type", "workflow", ["workflow_id"], ["id"], ondelete="CASCADE"
    )
    op.drop_constraint("workflow_instance_creator_id_fkey", "workflow_instance", type_="foreignkey")
    op.drop_constraint(
        "workflow_instance_incident_id_fkey", "workflow_instance", type_="foreignkey"
    )
    op.drop_constraint(
        "workflow_instance_workflow_id_fkey", "workflow_instance", type_="foreignkey"
    )
    op.create_foreign_key(None, "workflow_instance", "participant", ["creator_id"], ["id"])
    op.create_foreign_key(None, "workflow_instance", "workflow", ["workflow_id"], ["id"])
    op.create_foreign_key(
        None, "workflow_instance", "incident", ["incident_id"], ["id"], ondelete="CASCADE"
    )
    op.drop_constraint(
        "workflow_instance_artifact_document_id_fkey",
        "workflow_instance_artifact",
        type_="foreignkey",
    )
    op.drop_constraint(
        "workflow_instance_artifact_workflow_instance_id_fkey",
        "workflow_instance_artifact",
        type_="foreignkey",
    )
    op.create_foreign_key(
        None, "workflow_instance_artifact", "document", ["document_id"], ["id"], ondelete="CASCADE"
    )
    op.create_foreign_key(
        None,
        "workflow_instance_artifact",
        "workflow_instance",
        ["workflow_instance_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.drop_constraint("workflow_term_workflow_id_fkey", "workflow_term", type_="foreignkey")
    op.drop_constraint("workflow_term_term_id_fkey", "workflow_term", type_="foreignkey")
    op.create_foreign_key(None, "workflow_term", "term", ["term_id"], ["id"], ondelete="CASCADE")
    op.create_foreign_key(
        None, "workflow_term", "workflow", ["workflow_id"], ["id"], ondelete="CASCADE"
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "workflow_term", type_="foreignkey")
    op.drop_constraint(None, "workflow_term", type_="foreignkey")
    op.create_foreign_key(
        "workflow_term_term_id_fkey",
        "workflow_term",
        "term",
        ["term_id"],
        ["id"],
        referent_schema="public",
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        "workflow_term_workflow_id_fkey",
        "workflow_term",
        "workflow",
        ["workflow_id"],
        ["id"],
        referent_schema="public",
        ondelete="CASCADE",
    )
    op.drop_constraint(None, "workflow_instance_artifact", type_="foreignkey")
    op.drop_constraint(None, "workflow_instance_artifact", type_="foreignkey")
    op.create_foreign_key(
        "workflow_instance_artifact_workflow_instance_id_fkey",
        "workflow_instance_artifact",
        "workflow_instance",
        ["workflow_instance_id"],
        ["id"],
        referent_schema="public",
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        "workflow_instance_artifact_document_id_fkey",
        "workflow_instance_artifact",
        "document",
        ["document_id"],
        ["id"],
        referent_schema="public",
        ondelete="CASCADE",
    )
    op.drop_constraint(None, "workflow_instance", type_="foreignkey")
    op.drop_constraint(None, "workflow_instance", type_="foreignkey")
    op.drop_constraint(None, "workflow_instance", type_="foreignkey")
    op.create_foreign_key(
        "workflow_instance_workflow_id_fkey",
        "workflow_instance",
        "workflow",
        ["workflow_id"],
        ["id"],
        referent_schema="public",
    )
    op.create_foreign_key(
        "workflow_instance_incident_id_fkey",
        "workflow_instance",
        "incident",
        ["incident_id"],
        ["id"],
        referent_schema="public",
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        "workflow_instance_creator_id_fkey",
        "workflow_instance",
        "participant",
        ["creator_id"],
        ["id"],
        referent_schema="public",
    )
    op.drop_constraint(None, "workflow_incident_type", type_="foreignkey")
    op.drop_constraint(None, "workflow_incident_type", type_="foreignkey")
    op.create_foreign_key(
        "workflow_incident_type_workflow_id_fkey",
        "workflow_incident_type",
        "workflow",
        ["workflow_id"],
        ["id"],
        referent_schema="public",
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        "workflow_incident_type_incident_type_id_fkey",
        "workflow_incident_type",
        "incident_type",
        ["incident_type_id"],
        ["id"],
        referent_schema="public",
        ondelete="CASCADE",
    )
    op.drop_constraint(None, "workflow_incident_priority", type_="foreignkey")
    op.drop_constraint(None, "workflow_incident_priority", type_="foreignkey")
    op.create_foreign_key(
        "workflow_incident_priority_workflow_id_fkey",
        "workflow_incident_priority",
        "workflow",
        ["workflow_id"],
        ["id"],
        referent_schema="public",
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        "workflow_incident_priority_incident_priority_id_fkey",
        "workflow_incident_priority",
        "incident_priority",
        ["incident_priority_id"],
        ["id"],
        referent_schema="public",
        ondelete="CASCADE",
    )
    op.drop_constraint(None, "workflow", type_="foreignkey")
    op.drop_constraint(None, "workflow", type_="foreignkey")
    op.create_foreign_key(
        "workflow_project_id_fkey",
        "workflow",
        "project",
        ["project_id"],
        ["id"],
        referent_schema="public",
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        "workflow_plugin_id_fkey",
        "workflow",
        "plugin",
        ["plugin_id"],
        ["id"],
        referent_schema="public",
    )
    op.drop_constraint(None, "ticket", type_="foreignkey")
    op.create_foreign_key(
        "ticket_incident_id_fkey",
        "ticket",
        "incident",
        ["incident_id"],
        ["id"],
        referent_schema="public",
        ondelete="CASCADE",
    )
    op.drop_constraint(None, "term", type_="foreignkey")
    op.create_foreign_key(
        "term_project_id_fkey",
        "term",
        "project",
        ["project_id"],
        ["id"],
        referent_schema="public",
        ondelete="CASCADE",
    )
    op.drop_constraint(None, "team_contact_incident", type_="foreignkey")
    op.drop_constraint(None, "team_contact_incident", type_="foreignkey")
    op.create_foreign_key(
        "team_contact_incident_team_contact_id_fkey",
        "team_contact_incident",
        "team_contact",
        ["team_contact_id"],
        ["id"],
        referent_schema="public",
    )
    op.create_foreign_key(
        "team_contact_incident_incident_id_fkey",
        "team_contact_incident",
        "incident",
        ["incident_id"],
        ["id"],
        referent_schema="public",
    )
    op.drop_constraint(None, "team_contact", type_="foreignkey")
    op.create_foreign_key(
        "team_contact_project_id_fkey",
        "team_contact",
        "project",
        ["project_id"],
        ["id"],
        referent_schema="public",
        ondelete="CASCADE",
    )
    op.drop_constraint(None, "task_tickets", type_="foreignkey")
    op.drop_constraint(None, "task_tickets", type_="foreignkey")
    op.create_foreign_key(
        "task_tickets_ticket_id_fkey",
        "task_tickets",
        "ticket",
        ["ticket_id"],
        ["id"],
        referent_schema="public",
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        "task_tickets_task_id_fkey",
        "task_tickets",
        "task",
        ["task_id"],
        ["id"],
        referent_schema="public",
        ondelete="CASCADE",
    )
    op.drop_constraint(None, "task_assignees", type_="foreignkey")
    op.drop_constraint(None, "task_assignees", type_="foreignkey")
    op.create_foreign_key(
        "task_assignees_participant_id_fkey",
        "task_assignees",
        "participant",
        ["participant_id"],
        ["id"],
        referent_schema="public",
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        "task_assignees_task_id_fkey",
        "task_assignees",
        "task",
        ["task_id"],
        ["id"],
        referent_schema="public",
        ondelete="CASCADE",
    )
    op.drop_constraint(None, "task", type_="foreignkey")
    op.drop_constraint(None, "task", type_="foreignkey")
    op.drop_constraint(None, "task", type_="foreignkey")
    op.create_foreign_key(
        "task_owner_id_fkey",
        "task",
        "participant",
        ["owner_id"],
        ["id"],
        referent_schema="public",
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        "task_creator_id_fkey",
        "task",
        "participant",
        ["creator_id"],
        ["id"],
        referent_schema="public",
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        "task_incident_id_fkey",
        "task",
        "incident",
        ["incident_id"],
        ["id"],
        referent_schema="public",
        ondelete="CASCADE",
    )
    op.drop_constraint(None, "tag_type", type_="foreignkey")
    op.create_foreign_key(
        "tag_type_project_id_fkey",
        "tag_type",
        "project",
        ["project_id"],
        ["id"],
        referent_schema="public",
        ondelete="CASCADE",
    )
    op.drop_constraint(None, "tag", type_="foreignkey")
    op.drop_constraint(None, "tag", type_="foreignkey")
    op.create_foreign_key(
        "tag_tag_type_id_fkey", "tag", "tag_type", ["tag_type_id"], ["id"], referent_schema="public"
    )
    op.create_foreign_key(
        "tag_project_id_fkey",
        "tag",
        "project",
        ["project_id"],
        ["id"],
        referent_schema="public",
        ondelete="CASCADE",
    )
    op.drop_constraint(None, "storage", type_="foreignkey")
    op.create_foreign_key(
        "storage_incident_id_fkey",
        "storage",
        "incident",
        ["incident_id"],
        ["id"],
        referent_schema="public",
        ondelete="CASCADE",
    )
    op.drop_constraint(None, "service_incident", type_="foreignkey")
    op.drop_constraint(None, "service_incident", type_="foreignkey")
    op.create_foreign_key(
        "service_incident_incident_id_fkey",
        "service_incident",
        "incident",
        ["incident_id"],
        ["id"],
        referent_schema="public",
    )
    op.create_foreign_key(
        "service_incident_service_id_fkey",
        "service_incident",
        "service",
        ["service_id"],
        ["id"],
        referent_schema="public",
    )
    op.drop_constraint(None, "service", type_="foreignkey")
    op.create_foreign_key(
        "service_project_id_fkey",
        "service",
        "project",
        ["project_id"],
        ["id"],
        referent_schema="public",
        ondelete="CASCADE",
    )
    op.drop_constraint(None, "search_filter", type_="foreignkey")
    op.drop_constraint(None, "search_filter", type_="foreignkey")
    op.create_foreign_key(
        "search_filter_creator_id_fkey",
        "search_filter",
        "dispatch_user",
        ["creator_id"],
        ["id"],
        referent_schema="public",
    )
    op.create_foreign_key(
        "search_filter_project_id_fkey",
        "search_filter",
        "project",
        ["project_id"],
        ["id"],
        referent_schema="public",
        ondelete="CASCADE",
    )
    op.drop_constraint(None, "report", type_="foreignkey")
    op.drop_constraint(None, "report", type_="foreignkey")
    op.create_foreign_key(
        "report_incident_id_fkey",
        "report",
        "incident",
        ["incident_id"],
        ["id"],
        referent_schema="public",
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        "report_participant_id_fkey",
        "report",
        "participant",
        ["participant_id"],
        ["id"],
        referent_schema="public",
    )
    op.drop_constraint(None, "recommendation_match", type_="foreignkey")
    op.create_foreign_key(
        "recommendation_match_recommendation_id_fkey",
        "recommendation_match",
        "recommendation",
        ["recommendation_id"],
        ["id"],
        referent_schema="public",
    )
    op.add_column(
        "recommendation", sa.Column("text", sa.VARCHAR(), autoincrement=False, nullable=True)
    )
    op.drop_constraint(None, "recommendation", type_="foreignkey")
    op.create_foreign_key(
        "recommendation_incident_id_fkey",
        "recommendation",
        "incident",
        ["incident_id"],
        ["id"],
        referent_schema="public",
    )
    op.drop_constraint(None, "project", type_="foreignkey")
    op.create_foreign_key(
        "project_organization_id_fkey",
        "project",
        "organization",
        ["organization_id"],
        ["id"],
        referent_schema="public",
    )
    op.drop_constraint(None, "plugin_instance", type_="foreignkey")
    op.drop_constraint(None, "plugin_instance", type_="foreignkey")
    op.create_foreign_key(
        "plugin_instance_project_id_fkey",
        "plugin_instance",
        "project",
        ["project_id"],
        ["id"],
        referent_schema="public",
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        "plugin_instance_plugin_id_fkey",
        "plugin_instance",
        "plugin",
        ["plugin_id"],
        ["id"],
        referent_schema="public",
    )
    op.drop_constraint(None, "participant_role", type_="foreignkey")
    op.create_foreign_key(
        "participant_role_participant_id_fkey",
        "participant_role",
        "participant",
        ["participant_id"],
        ["id"],
        referent_schema="public",
        ondelete="CASCADE",
    )
    op.drop_constraint(None, "participant", type_="foreignkey")
    op.drop_constraint(None, "participant", type_="foreignkey")
    op.drop_constraint(None, "participant", type_="foreignkey")
    op.drop_constraint(None, "participant", type_="foreignkey")
    op.create_foreign_key(
        "participant_individual_contact_id_fkey",
        "participant",
        "individual_contact",
        ["individual_contact_id"],
        ["id"],
        referent_schema="public",
    )
    op.create_foreign_key(
        "participant_added_by_id_fkey",
        "participant",
        "participant",
        ["added_by_id"],
        ["id"],
        referent_schema="public",
    )
    op.create_foreign_key(
        "participant_incident_id_fkey",
        "participant",
        "incident",
        ["incident_id"],
        ["id"],
        referent_schema="public",
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        "participant_service_id_fkey",
        "participant",
        "service",
        ["service_id"],
        ["id"],
        referent_schema="public",
        ondelete="CASCADE",
    )
    op.drop_constraint(None, "notification", type_="foreignkey")
    op.create_foreign_key(
        "notification_project_id_fkey",
        "notification",
        "project",
        ["project_id"],
        ["id"],
        referent_schema="public",
        ondelete="CASCADE",
    )
    op.drop_constraint(None, "individual_contact", type_="foreignkey")
    op.drop_constraint(None, "individual_contact", type_="foreignkey")
    op.create_foreign_key(
        "individual_contact_team_contact_id_fkey",
        "individual_contact",
        "team_contact",
        ["team_contact_id"],
        ["id"],
        referent_schema="public",
    )
    op.create_foreign_key(
        "individual_contact_project_id_fkey",
        "individual_contact",
        "project",
        ["project_id"],
        ["id"],
        referent_schema="public",
        ondelete="CASCADE",
    )
    op.drop_constraint(None, "incident_type", type_="foreignkey")
    op.drop_constraint(None, "incident_type", type_="foreignkey")
    op.drop_constraint(None, "incident_type", type_="foreignkey")
    op.drop_constraint(None, "incident_type", type_="foreignkey")
    op.create_foreign_key(
        "incident_type_liason_service_id_fkey",
        "incident_type",
        "service",
        ["liaison_service_id"],
        ["id"],
        referent_schema="public",
    )
    op.create_foreign_key(
        "incident_type_commander_service_id_fkey",
        "incident_type",
        "service",
        ["commander_service_id"],
        ["id"],
        referent_schema="public",
    )
    op.create_foreign_key(
        "incident_type_project_id_fkey",
        "incident_type",
        "project",
        ["project_id"],
        ["id"],
        referent_schema="public",
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        "incident_type_template_document_id_fkey",
        "incident_type",
        "document",
        ["template_document_id"],
        ["id"],
        referent_schema="public",
    )
    op.drop_constraint(None, "incident_priority", type_="foreignkey")
    op.create_foreign_key(
        "incident_priority_project_id_fkey",
        "incident_priority",
        "project",
        ["project_id"],
        ["id"],
        referent_schema="public",
        ondelete="CASCADE",
    )
    op.drop_constraint(None, "incident_cost_type", type_="foreignkey")
    op.create_foreign_key(
        "incident_cost_type_project_id_fkey",
        "incident_cost_type",
        "project",
        ["project_id"],
        ["id"],
        referent_schema="public",
        ondelete="CASCADE",
    )
    op.drop_constraint(None, "incident_cost", type_="foreignkey")
    op.drop_constraint(None, "incident_cost", type_="foreignkey")
    op.drop_constraint(None, "incident_cost", type_="foreignkey")
    op.create_foreign_key(
        "incident_cost_incident_cost_type_id_fkey",
        "incident_cost",
        "incident_cost_type",
        ["incident_cost_type_id"],
        ["id"],
        referent_schema="public",
    )
    op.create_foreign_key(
        "incident_cost_project_id_fkey",
        "incident_cost",
        "project",
        ["project_id"],
        ["id"],
        referent_schema="public",
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        "incident_cost_incident_id_fkey",
        "incident_cost",
        "incident",
        ["incident_id"],
        ["id"],
        referent_schema="public",
        ondelete="CASCADE",
    )
    op.drop_constraint(None, "incident", type_="foreignkey")
    op.drop_constraint(None, "incident", type_="foreignkey")
    op.drop_constraint(None, "incident", type_="foreignkey")
    op.drop_constraint(None, "incident", type_="foreignkey")
    op.create_foreign_key(
        "incident_incident_priority_id_fkey",
        "incident",
        "incident_priority",
        ["incident_priority_id"],
        ["id"],
        referent_schema="public",
    )
    op.create_foreign_key(
        "incident_duplicate_id_fkey",
        "incident",
        "incident",
        ["duplicate_id"],
        ["id"],
        referent_schema="public",
    )
    op.create_foreign_key(
        "incident_incident_type_id_fkey",
        "incident",
        "incident_type",
        ["incident_type_id"],
        ["id"],
        referent_schema="public",
    )
    op.create_foreign_key(
        "incident_project_id_fkey",
        "incident",
        "project",
        ["project_id"],
        ["id"],
        referent_schema="public",
        ondelete="CASCADE",
    )
    op.drop_constraint(None, "group", type_="foreignkey")
    op.create_foreign_key(
        "group_incident_id_fkey",
        "group",
        "incident",
        ["incident_id"],
        ["id"],
        referent_schema="public",
        ondelete="CASCADE",
    )
    op.drop_constraint(None, "feedback", type_="foreignkey")
    op.drop_constraint(None, "feedback", type_="foreignkey")
    op.create_foreign_key(
        "feedback_participant_id_fkey",
        "feedback",
        "participant",
        ["participant_id"],
        ["id"],
        referent_schema="public",
    )
    op.create_foreign_key(
        "feedback_incident_id_fkey",
        "feedback",
        "incident",
        ["incident_id"],
        ["id"],
        referent_schema="public",
        ondelete="CASCADE",
    )
    op.drop_constraint(None, "event", type_="foreignkey")
    op.drop_constraint(None, "event", type_="foreignkey")
    op.create_foreign_key(
        "event_individual_id_fkey",
        "event",
        "individual_contact",
        ["individual_id"],
        ["id"],
        referent_schema="public",
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        "event_incident_id_fkey",
        "event",
        "incident",
        ["incident_id"],
        ["id"],
        referent_schema="public",
        ondelete="CASCADE",
    )
    op.drop_constraint(None, "document", type_="foreignkey")
    op.drop_constraint(None, "document", type_="foreignkey")
    op.drop_constraint(None, "document", type_="foreignkey")
    op.create_foreign_key(
        "document_report_id_fkey",
        "document",
        "report",
        ["report_id"],
        ["id"],
        referent_schema="public",
    )
    op.create_foreign_key(
        "document_incident_id_fkey",
        "document",
        "incident",
        ["incident_id"],
        ["id"],
        referent_schema="public",
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        "document_project_id_fkey",
        "document",
        "project",
        ["project_id"],
        ["id"],
        referent_schema="public",
        ondelete="CASCADE",
    )
    op.add_column(
        "dispatch_user_project",
        sa.Column(
            "id",
            sa.INTEGER(),
            server_default=sa.text("nextval('public.dispatch_user_project_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
    )
    op.drop_constraint(None, "dispatch_user_project", type_="foreignkey")
    op.drop_constraint(None, "dispatch_user_project", type_="foreignkey")
    op.create_foreign_key(
        "dispatch_user_project_dispatch_user_id_fkey",
        "dispatch_user_project",
        "dispatch_user",
        ["dispatch_user_id"],
        ["id"],
        referent_schema="public",
    )
    op.create_foreign_key(
        "dispatch_user_project_project_id_fkey",
        "dispatch_user_project",
        "project",
        ["project_id"],
        ["id"],
        referent_schema="public",
    )
    op.alter_column(
        "dispatch_user_project", "project_id", existing_type=sa.INTEGER(), nullable=True
    )
    op.alter_column(
        "dispatch_user_project", "dispatch_user_id", existing_type=sa.INTEGER(), nullable=True
    )
    op.drop_constraint(None, "definition_terms", type_="foreignkey")
    op.drop_constraint(None, "definition_terms", type_="foreignkey")
    op.create_foreign_key(
        "definition_terms_definition_id_fkey",
        "definition_terms",
        "definition",
        ["definition_id"],
        ["id"],
        referent_schema="public",
    )
    op.create_foreign_key(
        "definition_terms_term_id_fkey",
        "definition_terms",
        "term",
        ["term_id"],
        ["id"],
        referent_schema="public",
    )
    op.drop_constraint(None, "definition_teams", type_="foreignkey")
    op.drop_constraint(None, "definition_teams", type_="foreignkey")
    op.create_foreign_key(
        "definition_teams_team_contact_id_fkey",
        "definition_teams",
        "team_contact",
        ["team_contact_id"],
        ["id"],
        referent_schema="public",
    )
    op.create_foreign_key(
        "definition_teams_definition_id_fkey",
        "definition_teams",
        "definition",
        ["definition_id"],
        ["id"],
        referent_schema="public",
    )
    op.drop_constraint(None, "definition", type_="foreignkey")
    op.create_foreign_key(
        "definition_project_id_fkey",
        "definition",
        "project",
        ["project_id"],
        ["id"],
        referent_schema="public",
        ondelete="CASCADE",
    )
    op.drop_constraint(None, "conversation", type_="foreignkey")
    op.create_foreign_key(
        "conversation_incident_id_fkey",
        "conversation",
        "incident",
        ["incident_id"],
        ["id"],
        referent_schema="public",
        ondelete="CASCADE",
    )
    op.drop_constraint(None, "conference", type_="foreignkey")
    op.create_foreign_key(
        "conference_incident_id_fkey",
        "conference",
        "incident",
        ["incident_id"],
        ["id"],
        referent_schema="public",
        ondelete="CASCADE",
    )
    op.drop_constraint(None, "assoc_team_contact_filters", type_="foreignkey")
    op.drop_constraint(None, "assoc_team_contact_filters", type_="foreignkey")
    op.create_foreign_key(
        "assoc_team_contact_filters_team_contact_id_fkey",
        "assoc_team_contact_filters",
        "team_contact",
        ["team_contact_id"],
        ["id"],
        referent_schema="public",
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        "assoc_team_contact_filters_search_filter_id_fkey",
        "assoc_team_contact_filters",
        "search_filter",
        ["search_filter_id"],
        ["id"],
        referent_schema="public",
        ondelete="CASCADE",
    )
    op.drop_constraint(None, "assoc_service_filters", type_="foreignkey")
    op.drop_constraint(None, "assoc_service_filters", type_="foreignkey")
    op.create_foreign_key(
        "assoc_service_filters_search_filter_id_fkey",
        "assoc_service_filters",
        "search_filter",
        ["search_filter_id"],
        ["id"],
        referent_schema="public",
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        "assoc_service_filters_service_id_fkey",
        "assoc_service_filters",
        "service",
        ["service_id"],
        ["id"],
        referent_schema="public",
        ondelete="CASCADE",
    )
    op.drop_constraint(None, "assoc_notification_filters", type_="foreignkey")
    op.drop_constraint(None, "assoc_notification_filters", type_="foreignkey")
    op.create_foreign_key(
        "assoc_notification_filters_notification_id_fkey",
        "assoc_notification_filters",
        "notification",
        ["notification_id"],
        ["id"],
        referent_schema="public",
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        "assoc_notification_filters_search_filter_id_fkey",
        "assoc_notification_filters",
        "search_filter",
        ["search_filter_id"],
        ["id"],
        referent_schema="public",
        ondelete="CASCADE",
    )
    op.drop_constraint(None, "assoc_individual_contact_filters", type_="foreignkey")
    op.drop_constraint(None, "assoc_individual_contact_filters", type_="foreignkey")
    op.create_foreign_key(
        "assoc_individual_contact_filters_individual_contact_id_fkey",
        "assoc_individual_contact_filters",
        "individual_contact",
        ["individual_contact_id"],
        ["id"],
        referent_schema="public",
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        "assoc_individual_contact_filters_search_filter_id_fkey",
        "assoc_individual_contact_filters",
        "search_filter",
        ["search_filter_id"],
        ["id"],
        referent_schema="public",
        ondelete="CASCADE",
    )
    op.drop_constraint(None, "assoc_incident_terms", type_="foreignkey")
    op.drop_constraint(None, "assoc_incident_terms", type_="foreignkey")
    op.create_foreign_key(
        "assoc_incident_terms_term_id_fkey",
        "assoc_incident_terms",
        "term",
        ["term_id"],
        ["id"],
        referent_schema="public",
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        "assoc_incident_terms_incident_id_fkey",
        "assoc_incident_terms",
        "incident",
        ["incident_id"],
        ["id"],
        referent_schema="public",
        ondelete="CASCADE",
    )
    op.drop_constraint(None, "assoc_incident_tags", type_="foreignkey")
    op.drop_constraint(None, "assoc_incident_tags", type_="foreignkey")
    op.create_foreign_key(
        "assoc_incident_tags_tag_id_fkey",
        "assoc_incident_tags",
        "tag",
        ["tag_id"],
        ["id"],
        referent_schema="public",
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        "assoc_incident_tags_incident_id_fkey",
        "assoc_incident_tags",
        "incident",
        ["incident_id"],
        ["id"],
        referent_schema="public",
        ondelete="CASCADE",
    )
    op.drop_constraint(None, "assoc_document_filters", type_="foreignkey")
    op.drop_constraint(None, "assoc_document_filters", type_="foreignkey")
    op.create_foreign_key(
        "assoc_document_filters_search_filter_id_fkey",
        "assoc_document_filters",
        "search_filter",
        ["search_filter_id"],
        ["id"],
        referent_schema="public",
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        "assoc_document_filters_document_id_fkey",
        "assoc_document_filters",
        "document",
        ["document_id"],
        ["id"],
        referent_schema="public",
        ondelete="CASCADE",
    )
    op.create_table(
        "recommendation_accuracy",
        sa.Column(
            "id",
            sa.INTEGER(),
            server_default=sa.text("nextval('public.recommendation_accuracy_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("recommendation_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("correct", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column("resource_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("resource_type", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ["recommendation_id"],
            ["public.recommendation.id"],
            name="recommendation_accuracy_recommendation_id_fkey",
        ),
        sa.PrimaryKeyConstraint("id", name="recommendation_accuracy_pkey"),
    )
    op.create_table(
        "recommendation_team_contacts",
        sa.Column("team_contact_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("recommendation_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["recommendation_id"],
            ["public.recommendation.id"],
            name="recommendation_team_contacts_recommendation_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["team_contact_id"],
            ["public.team_contact.id"],
            name="recommendation_team_contacts_team_contact_id_fkey",
        ),
        sa.PrimaryKeyConstraint(
            "team_contact_id", "recommendation_id", name="recommendation_team_contacts_pkey"
        ),
    )
    op.create_table(
        "team_contact_incident_type",
        sa.Column("incident_type_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("team_contact_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["incident_type_id"],
            ["public.incident_type.id"],
            name="team_contact_incident_type_incident_type_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["team_contact_id"],
            ["public.team_contact.id"],
            name="team_contact_incident_type_team_contact_id_fkey",
        ),
        sa.PrimaryKeyConstraint(
            "incident_type_id", "team_contact_id", name="team_contact_incident_type_pkey"
        ),
    )
    op.create_table(
        "service_terms",
        sa.Column("term_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("service_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["service_id"], ["public.service.id"], name="service_terms_service_id_fkey"
        ),
        sa.ForeignKeyConstraint(["term_id"], ["public.term.id"], name="service_terms_term_id_fkey"),
        sa.PrimaryKeyConstraint("term_id", "service_id", name="service_terms_pkey"),
    )
    op.create_table(
        "recommendation_services",
        sa.Column("service_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("recommendation_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["recommendation_id"],
            ["public.recommendation.id"],
            name="recommendation_services_recommendation_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["service_id"], ["public.service.id"], name="recommendation_services_service_id_fkey"
        ),
        sa.PrimaryKeyConstraint(
            "service_id", "recommendation_id", name="recommendation_services_pkey"
        ),
    )
    op.create_table(
        "document_incident_type",
        sa.Column("incident_type_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("document_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["document_id"], ["public.document.id"], name="document_incident_type_document_id_fkey"
        ),
        sa.ForeignKeyConstraint(
            ["incident_type_id"],
            ["public.incident_type.id"],
            name="document_incident_type_incident_type_id_fkey",
        ),
        sa.PrimaryKeyConstraint(
            "incident_type_id", "document_id", name="document_incident_type_pkey"
        ),
    )
    op.create_table(
        "service_incident_priority",
        sa.Column("incident_priority_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("service_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["incident_priority_id"],
            ["public.incident_priority.id"],
            name="service_incident_priority_incident_priority_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["service_id"], ["public.service.id"], name="service_incident_priority_service_id_fkey"
        ),
        sa.PrimaryKeyConstraint(
            "incident_priority_id", "service_id", name="service_incident_priority_pkey"
        ),
    )
    op.create_table(
        "document_incident_priority",
        sa.Column("incident_priority_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("document_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["document_id"],
            ["public.document.id"],
            name="document_incident_priority_document_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["incident_priority_id"],
            ["public.incident_priority.id"],
            name="document_incident_priority_incident_priority_id_fkey",
        ),
        sa.PrimaryKeyConstraint(
            "incident_priority_id", "document_id", name="document_incident_priority_pkey"
        ),
    )
    op.create_table(
        "recommendation_incident_priorities",
        sa.Column("incident_priority_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("recommendation_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["incident_priority_id"],
            ["public.incident_priority.id"],
            name="recommendation_incident_priorities_incident_priority_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["recommendation_id"],
            ["public.recommendation.id"],
            name="recommendation_incident_priorities_recommendation_id_fkey",
        ),
        sa.PrimaryKeyConstraint(
            "incident_priority_id",
            "recommendation_id",
            name="recommendation_incident_priorities_pkey",
        ),
    )
    op.create_table(
        "assoc_individual_contact_incident_type",
        sa.Column("incident_type_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("individual_contact_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["incident_type_id"],
            ["public.incident_type.id"],
            name="assoc_individual_contact_incident_type_incident_type_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["individual_contact_id"],
            ["public.individual_contact.id"],
            name="assoc_individual_contact_incident_ty_individual_contact_id_fkey",
        ),
        sa.PrimaryKeyConstraint(
            "incident_type_id",
            "individual_contact_id",
            name="assoc_individual_contact_incident_type_pkey",
        ),
    )
    op.create_table(
        "recommendation_incident_types",
        sa.Column("incident_type_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("recommendation_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["incident_type_id"],
            ["public.incident_type.id"],
            name="recommendation_incident_types_incident_type_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["recommendation_id"],
            ["public.recommendation.id"],
            name="recommendation_incident_types_recommendation_id_fkey",
        ),
        sa.PrimaryKeyConstraint(
            "incident_type_id", "recommendation_id", name="recommendation_incident_types_pkey"
        ),
    )
    op.create_table(
        "assoc_individual_contact_terms",
        sa.Column("term_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("individual_contact_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["individual_contact_id"],
            ["public.individual_contact.id"],
            name="assoc_individual_contact_terms_individual_contact_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["term_id"], ["public.term.id"], name="assoc_individual_contact_terms_term_id_fkey"
        ),
        sa.PrimaryKeyConstraint(
            "term_id", "individual_contact_id", name="assoc_individual_contact_terms_pkey"
        ),
    )
    op.create_table(
        "recommendation_individual_contacts",
        sa.Column("individual_contact_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("recommendation_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["individual_contact_id"],
            ["public.individual_contact.id"],
            name="recommendation_individual_contacts_individual_contact_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["recommendation_id"],
            ["public.recommendation.id"],
            name="recommendation_individual_contacts_recommendation_id_fkey",
        ),
        sa.PrimaryKeyConstraint(
            "individual_contact_id",
            "recommendation_id",
            name="recommendation_individual_contacts_pkey",
        ),
    )
    op.create_table(
        "team_contact_incident_priority",
        sa.Column("incident_priority_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("team_contact_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["incident_priority_id"],
            ["public.incident_priority.id"],
            name="team_contact_incident_priority_incident_priority_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["team_contact_id"],
            ["public.team_contact.id"],
            name="team_contact_incident_priority_team_contact_id_fkey",
        ),
        sa.PrimaryKeyConstraint(
            "incident_priority_id", "team_contact_id", name="team_contact_incident_priority_pkey"
        ),
    )
    op.create_table(
        "recommendation_terms",
        sa.Column("term_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("recommendation_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["recommendation_id"],
            ["public.recommendation.id"],
            name="recommendation_terms_recommendation_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["term_id"], ["public.term.id"], name="recommendation_terms_term_id_fkey"
        ),
        sa.PrimaryKeyConstraint("term_id", "recommendation_id", name="recommendation_terms_pkey"),
    )
    op.create_table(
        "assoc_individual_contact_incident_priority",
        sa.Column("incident_priority_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("individual_contact_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["incident_priority_id"],
            ["public.incident_priority.id"],
            name="assoc_individual_contact_incident_pri_incident_priority_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["individual_contact_id"],
            ["public.individual_contact.id"],
            name="assoc_individual_contact_incident_pr_individual_contact_id_fkey",
        ),
        sa.PrimaryKeyConstraint(
            "incident_priority_id",
            "individual_contact_id",
            name="assoc_individual_contact_incident_priority_pkey",
        ),
    )
    op.create_table(
        "service_incident_type",
        sa.Column("incident_type_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("service_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["incident_type_id"],
            ["public.incident_type.id"],
            name="service_incident_type_incident_type_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["service_id"], ["public.service.id"], name="service_incident_type_service_id_fkey"
        ),
        sa.PrimaryKeyConstraint(
            "incident_type_id", "service_id", name="service_incident_type_pkey"
        ),
    )
    op.create_table(
        "recommendation_documents",
        sa.Column("document_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("recommendation_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["document_id"],
            ["public.document.id"],
            name="recommendation_documents_document_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["recommendation_id"],
            ["public.recommendation.id"],
            name="recommendation_documents_recommendation_id_fkey",
        ),
        sa.PrimaryKeyConstraint(
            "document_id", "recommendation_id", name="recommendation_documents_pkey"
        ),
    )
    op.create_table(
        "team_contact_terms",
        sa.Column("term_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("team_contact_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["team_contact_id"],
            ["public.team_contact.id"],
            name="team_contact_terms_team_contact_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["term_id"], ["public.term.id"], name="team_contact_terms_term_id_fkey"
        ),
        sa.PrimaryKeyConstraint("term_id", "team_contact_id", name="team_contact_terms_pkey"),
    )
    op.create_table(
        "document_terms",
        sa.Column("term_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("document_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["document_id"],
            ["public.document.id"],
            name="document_terms_document_id_fkey",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["term_id"], ["public.term.id"], name="document_terms_term_id_fkey", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("term_id", "document_id", name="document_terms_pkey"),
    )
    # ### end Alembic commands ###
