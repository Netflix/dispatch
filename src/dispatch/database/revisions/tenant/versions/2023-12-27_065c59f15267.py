"""empty message

Revision ID: 065c59f15267
Revises: 2f06fd73eae6
Create Date: 2023-12-27 13:44:18.845443

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import sqlalchemy_utils

# revision identifiers, used by Alembic.
revision = "065c59f15267"
down_revision = "2f06fd73eae6"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "incident_cost_model",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("enabled", sa.Boolean(), nullable=True),
        sa.Column("search_vector", sqlalchemy_utils.types.ts_vector.TSVectorType(), nullable=True),
        sa.Column("project_id", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(["project_id"], ["project.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name", "project_id"),
    )
    op.create_index(
        "incident_cost_model_search_vector_idx",
        "incident_cost_model",
        ["search_vector"],
        unique=False,
        postgresql_using="gin",
    )
    op.create_table(
        "incident_cost_model_activity",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("plugin_event_id", sa.Integer(), nullable=True),
        sa.Column("response_time_seconds", sa.Integer(), nullable=True),
        sa.Column("enabled", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(
            ["plugin_event_id"], ["dispatch_core.plugin_event.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "assoc_incident_cost_model_activities",
        sa.Column("incident_cost_model_id", sa.Integer(), nullable=False),
        sa.Column("incident_cost_model_activity_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["incident_cost_model_activity_id"],
            ["incident_cost_model_activity.id"],
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["incident_cost_model_id"], ["incident_cost_model.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("incident_cost_model_id", "incident_cost_model_activity_id"),
    )
    op.create_table(
        "incident_participant_activity",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("plugin_event_id", sa.Integer(), nullable=True),
        sa.Column("started_at", sa.DateTime(), nullable=True),
        sa.Column("ended_at", sa.DateTime(), nullable=True),
        sa.Column("participant_id", sa.Integer(), nullable=True),
        sa.Column("incident_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["incident_id"],
            ["incident.id"],
        ),
        sa.ForeignKeyConstraint(
            ["participant_id"],
            ["participant.id"],
        ),
        sa.ForeignKeyConstraint(
            ["plugin_event_id"],
            ["dispatch_core.plugin_event.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "assoc_signal_instance_tags",
        sa.Column("signal_instance_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("tag_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["signal_instance_id"], ["signal_instance.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["tag_id"], ["tag.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("signal_instance_id", "tag_id"),
    )
    op.drop_table("service_feedback_reminder")
    op.alter_column(
        "entity", "source", existing_type=sa.BOOLEAN(), type_=sa.String(), existing_nullable=True
    )
    op.drop_index("ix_entity_search_vector", table_name="entity", postgresql_using="gin")
    op.create_index(
        "entity_search_vector_idx",
        "entity",
        ["search_vector"],
        unique=False,
        postgresql_using="gin",
    )
    op.alter_column("entity_type", "jpath", existing_type=sa.VARCHAR(), nullable=True)
    op.add_column("incident", sa.Column("incident_cost_model_id", sa.Integer(), nullable=True))
    op.create_foreign_key(
        None, "incident", "incident_cost_model", ["incident_cost_model_id"], ["id"]
    )
    op.drop_column("plugin_instance", "configuration")
    op.drop_constraint("project_stable_priority_id_fkey", "project", type_="foreignkey")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_foreign_key(
        "project_stable_priority_id_fkey",
        "project",
        "incident_priority",
        ["stable_priority_id"],
        ["id"],
    )
    op.add_column(
        "plugin_instance",
        sa.Column(
            "configuration",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.drop_constraint(None, "incident", type_="foreignkey")
    op.drop_column("incident", "incident_cost_model_id")
    op.alter_column("entity_type", "jpath", existing_type=sa.VARCHAR(), nullable=False)
    op.drop_index("entity_search_vector_idx", table_name="entity", postgresql_using="gin")
    op.create_index(
        "ix_entity_search_vector", "entity", ["search_vector"], unique=False, postgresql_using="gin"
    )
    op.alter_column(
        "entity", "source", existing_type=sa.String(), type_=sa.BOOLEAN(), existing_nullable=True
    )
    op.create_table(
        "service_feedback_reminder",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("reminder_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column("schedule_id", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("schedule_name", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("shift_end_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column("individual_contact_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("project_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column("updated_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ["individual_contact_id"],
            ["individual_contact.id"],
            name="service_feedback_reminder_individual_contact_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["project_id"], ["project.id"], name="service_feedback_reminder_project_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="service_feedback_reminder_pkey"),
    )
    op.drop_table("assoc_signal_instance_tags")
    op.drop_table("incident_participant_activity")
    op.drop_table("assoc_incident_cost_model_activities")
    op.drop_table("incident_cost_model_activity")
    op.drop_index(
        "incident_cost_model_search_vector_idx",
        table_name="incident_cost_model",
        postgresql_using="gin",
    )
    op.drop_table("incident_cost_model")
    # ### end Alembic commands ###
