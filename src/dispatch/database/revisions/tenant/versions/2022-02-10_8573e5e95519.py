"""empty message

Revision ID: 8573e5e95519
Revises: 5f96c909a3c0
Create Date: 2022-02-10 14:40:02.776472

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import sqlalchemy_utils

# revision identifiers, used by Alembic.
revision = "8573e5e95519"
down_revision = "5f96c909a3c0"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "query",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("text", sa.String(), nullable=True),
        sa.Column("search_vector", sqlalchemy_utils.types.ts_vector.TSVectorType(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "query_search_vector_idx", "query", ["search_vector"], unique=False, postgresql_using="gin"
    )
    op.create_table(
        "source",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("last_refreshed", sa.DateTime(), nullable=True),
        sa.Column("daily_volume", sa.Integer(), nullable=True),
        sa.Column("aggregated", sa.Boolean(), nullable=True),
        sa.Column("retention", sa.Integer(), nullable=True),
        sa.Column("size", sa.BigInteger(), nullable=True),
        sa.Column("delay", sa.Integer(), nullable=True),
        sa.Column("environment", sa.String(), nullable=True),
        sa.Column("external_id", sa.String(), nullable=True),
        sa.Column("documentation", sa.Text(), nullable=True),
        sa.Column("sampling_rate", sa.Integer(), nullable=True),
        sa.Column("source_schema", sa.Text(), nullable=True),
        sa.Column("source_type", sa.String(), nullable=True),
        sa.Column("data_format", sa.String(), nullable=True),
        sa.Column("status", sa.String(), nullable=True),
        sa.Column("transport", sa.String(), nullable=True),
        sa.Column("owner_id", sa.Integer(), nullable=True),
        sa.Column("search_vector", sqlalchemy_utils.types.ts_vector.TSVectorType(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["owner_id"],
            ["service.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "source_search_vector_idx",
        "source",
        ["search_vector"],
        unique=False,
        postgresql_using="gin",
    )
    op.create_table(
        "alert",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("source_id", sa.Integer(), nullable=True),
        sa.Column("search_vector", sqlalchemy_utils.types.ts_vector.TSVectorType(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["source_id"],
            ["source.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "alert_search_vector_idx", "alert", ["search_vector"], unique=False, postgresql_using="gin"
    )
    op.create_table(
        "assoc_source_tags",
        sa.Column("source_id", sa.Integer(), nullable=False),
        sa.Column("tag_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["source_id"], ["source.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["tag_id"], ["tag.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("source_id", "tag_id"),
    )
    op.create_table(
        "assoc_source_incidents",
        sa.Column("source_id", sa.Integer(), nullable=False),
        sa.Column("incident_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["incident_id"], ["incident.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["source_id"], ["source.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("source_id", "incident_id"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "plugin_instance",
        sa.Column(
            "configuration",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.drop_table("assoc_source_incidents")
    op.drop_table("assoc_source_tags")
    op.drop_index("alert_search_vector_idx", table_name="alert", postgresql_using="gin")
    op.drop_table("alert")
    op.drop_index("source_search_vector_idx", table_name="source", postgresql_using="gin")
    op.drop_table("source")
    op.drop_index("query_search_vector_idx", table_name="query", postgresql_using="gin")
    op.drop_table("query")
    # ### end Alembic commands ###
