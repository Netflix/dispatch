"""empty message

Revision ID: 5693756fd192
Revises: d1e66a4ef671
Create Date: 2020-05-05 14:34:23.108821

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy import orm

from dispatch.task.models import Task
from dispatch.participant.models import Participant
from dispatch.participant.flows import add_participant
from dispatch.individual.models import IndividualContact


# revision identifiers, used by Alembic.
revision = "5693756fd192"
down_revision = "d1e66a4ef671"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    bind = op.get_bind()
    session = orm.Session(bind=bind)

    tasks = bind.execute("select incident_id, creator, assignees, id from task")

    for incident_id, creator, assignees, id in tasks:
        emails = [e.strip() for e in assignees.split(",")]
        assignee_participants = []
        for e in emails:
            try:
                assignee_participants.append(add_participant(e, incident_id, db_session=session))
            except Exception as ex:
                print(f"Issue with assignee: {e} Reason: {ex}")

        try:
            contact = (
                session.query(IndividualContact)
                .filter(IndividualContact.name == creator)
                .one_or_none()
            )
            creator_participant = add_participant(contact.email, incident_id, db_session=session)
        except Exception as ex:
            print(f"Issue with creator: {creator} Reason: {ex}")

    return
    op.create_table(
        "task_assignees",
        sa.Column("participant_id", sa.Integer(), nullable=False),
        sa.Column("task_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["participant_id"], ["participant.id"],),
        sa.ForeignKeyConstraint(["task_id"], ["task.id"],),
        sa.PrimaryKeyConstraint("participant_id", "task_id"),
    )
    op.add_column("task", sa.Column("creator_id", sa.Integer(), nullable=True))
    op.create_foreign_key(None, "task", "participant", ["creator_id"], ["id"])

    op.drop_column("task", "creator")
    op.drop_column("task", "assignees")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    return
    op.drop_constraint(None, "task", type_="foreignkey")
    op.drop_column("task", "creator_id")
    op.drop_table("task_assignees")

    op.add_column("task", sa.Column("assignees", sa.VARCHAR(), nullable=True))
    op.add_column("task", sa.Column("creator", sa.VARCHAR(), nullable=True))
    # ### end Alembic commands ###
