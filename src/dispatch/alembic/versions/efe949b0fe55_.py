"""Refactors recommendations to use search filter expressions

Revision ID: efe949b0fe55
Revises: 87400096f4cc
Create Date: 2021-04-22 11:19:07.315701

"""
from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils


# revision identifiers, used by Alembic.
revision = "efe949b0fe55"
down_revision = "87400096f4cc"
branch_labels = None
depends_on = None


# setup models needed for migration
def engagement_models_to_search_filter(models):
    filters = []
    for model in models:
        for service in model.services:
            service_filter = {"or": []}
            service_filter["or"].append(
                {"model": "Service", "field": "id", "op": "==", "value": service.id}
            )

        for term in model.terms:
            term_filter = {"or": []}
            term_filter["or"].append({"model": "Term", "field": "id", "op": "==", "value": term.id})

        for incident_type in model.incident_types:
            incident_type_filter = {"or": []}
            incident_type_filter["or"].append(
                {"model": "IncidentType", "field": "id", "op": "==", "value": incident_type.id}
            )

        for incident_priority in model.incident_priority:
            incident_priority_filter = {"or": []}
            incident_priority_filter["or"].append(
                {
                    "model": "IncidentPriority",
                    "field": "id",
                    "op": "==",
                    "value": incident_priority.id,
                }
            )

        filters.append(
            {"and": [service_filter, term_filter, incident_type_filter, incident_priority_filter]}
        )

    return filters


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "recommendation_match",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("recommendation_id", sa.Integer(), nullable=True),
        sa.Column("correct", sa.Boolean(), nullable=True),
        sa.Column("resource_type", sa.String(), nullable=True),
        sa.Column("resource_state", sqlalchemy_utils.types.json.JSONType(), nullable=True),
        sa.ForeignKeyConstraint(
            ["recommendation_id"],
            ["recommendation.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "assoc_document_filters",
        sa.Column("document_id", sa.Integer(), nullable=False),
        sa.Column("search_filter_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["document_id"], ["document.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["search_filter_id"], ["search_filter.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("document_id", "search_filter_id"),
    )
    op.create_table(
        "assoc_service_filters",
        sa.Column("service_id", sa.Integer(), nullable=False),
        sa.Column("search_filter_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["search_filter_id"], ["search_filter.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["service_id"], ["service.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("service_id", "search_filter_id"),
    )
    op.create_table(
        "assoc_team_filters",
        sa.Column("team_contact_id", sa.Integer(), nullable=False),
        sa.Column("search_filter_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["search_filter_id"], ["search_filter.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["team_contact_id"], ["team_contact.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("team_contact_id", "search_filter_id"),
    )
    op.create_table(
        "assoc_individual_filters",
        sa.Column("individual_contact_id", sa.Integer(), nullable=False),
        sa.Column("search_filter_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["individual_contact_id"], ["individual_contact.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["search_filter_id"], ["search_filter.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("individual_contact_id", "search_filter_id"),
    )

    op.drop_table("service_terms")
    op.drop_table("recommendation_incident_priorities")
    op.drop_table("service_incident_priority")
    op.drop_table("document_terms")
    op.drop_table("assoc_individual_contact_incident_priority")
    op.drop_table("recommendation_individual_contacts")
    op.drop_table("team_contact_incident_priority")
    op.drop_table("recommendation_incident_types")
    op.drop_table("recommendation_documents")
    op.drop_table("team_contact_incident_type")
    op.drop_table("recommendation_services")
    op.drop_table("recommendation_accuracy")
    op.drop_table("recommendation_team_contacts")
    op.drop_table("document_incident_priority")
    op.drop_table("document_incident_type")
    op.drop_table("recommendation_terms")
    op.drop_table("assoc_individual_contact_terms")
    op.drop_table("assoc_individual_contact_incident_type")
    op.drop_table("team_contact_terms")
    op.drop_table("service_incident_type")
    op.add_column("recommendation", sa.Column("created_at", sa.DateTime(), nullable=True))
    op.add_column("recommendation", sa.Column("incident_id", sa.Integer(), nullable=True))
    op.create_foreign_key(None, "recommendation", "incident", ["incident_id"], ["id"])
    op.drop_column("recommendation", "text")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "recommendation", sa.Column("text", sa.VARCHAR(), autoincrement=False, nullable=True)
    )
    op.drop_constraint(None, "recommendation", type_="foreignkey")
    op.drop_column("recommendation", "incident_id")
    op.drop_column("recommendation", "created_at")
    op.create_table(
        "service_incident_type",
        sa.Column("incident_type_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("service_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["incident_type_id"],
            ["incident_type.id"],
            name="service_incident_type_incident_type_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["service_id"], ["service.id"], name="service_incident_type_service_id_fkey"
        ),
        sa.PrimaryKeyConstraint(
            "incident_type_id", "service_id", name="service_incident_type_pkey"
        ),
    )
    op.create_table(
        "team_contact_terms",
        sa.Column("term_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("team_contact_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["team_contact_id"], ["team_contact.id"], name="team_contact_terms_team_contact_id_fkey"
        ),
        sa.ForeignKeyConstraint(["term_id"], ["term.id"], name="team_contact_terms_term_id_fkey"),
        sa.PrimaryKeyConstraint("term_id", "team_contact_id", name="team_contact_terms_pkey"),
    )
    op.create_table(
        "assoc_individual_contact_incident_type",
        sa.Column("incident_type_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("individual_contact_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["incident_type_id"],
            ["incident_type.id"],
            name="assoc_individual_contact_incident_type_incident_type_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["individual_contact_id"],
            ["individual_contact.id"],
            name="assoc_individual_contact_incident_ty_individual_contact_id_fkey",
        ),
        sa.PrimaryKeyConstraint(
            "incident_type_id",
            "individual_contact_id",
            name="assoc_individual_contact_incident_type_pkey",
        ),
    )
    op.create_table(
        "assoc_individual_contact_terms",
        sa.Column("term_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("individual_contact_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["individual_contact_id"],
            ["individual_contact.id"],
            name="assoc_individual_contact_terms_individual_contact_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["term_id"], ["term.id"], name="assoc_individual_contact_terms_term_id_fkey"
        ),
        sa.PrimaryKeyConstraint(
            "term_id", "individual_contact_id", name="assoc_individual_contact_terms_pkey"
        ),
    )
    op.create_table(
        "recommendation_terms",
        sa.Column("term_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("recommendation_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["recommendation_id"],
            ["recommendation.id"],
            name="recommendation_terms_recommendation_id_fkey",
        ),
        sa.ForeignKeyConstraint(["term_id"], ["term.id"], name="recommendation_terms_term_id_fkey"),
        sa.PrimaryKeyConstraint("term_id", "recommendation_id", name="recommendation_terms_pkey"),
    )
    op.create_table(
        "document_incident_type",
        sa.Column("incident_type_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("document_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["document_id"], ["document.id"], name="document_incident_type_document_id_fkey"
        ),
        sa.ForeignKeyConstraint(
            ["incident_type_id"],
            ["incident_type.id"],
            name="document_incident_type_incident_type_id_fkey",
        ),
        sa.PrimaryKeyConstraint(
            "incident_type_id", "document_id", name="document_incident_type_pkey"
        ),
    )
    op.create_table(
        "document_incident_priority",
        sa.Column("incident_priority_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("document_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["document_id"], ["document.id"], name="document_incident_priority_document_id_fkey"
        ),
        sa.ForeignKeyConstraint(
            ["incident_priority_id"],
            ["incident_priority.id"],
            name="document_incident_priority_incident_priority_id_fkey",
        ),
        sa.PrimaryKeyConstraint(
            "incident_priority_id", "document_id", name="document_incident_priority_pkey"
        ),
    )
    op.create_table(
        "recommendation_team_contacts",
        sa.Column("team_contact_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("recommendation_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["recommendation_id"],
            ["recommendation.id"],
            name="recommendation_team_contacts_recommendation_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["team_contact_id"],
            ["team_contact.id"],
            name="recommendation_team_contacts_team_contact_id_fkey",
        ),
        sa.PrimaryKeyConstraint(
            "team_contact_id", "recommendation_id", name="recommendation_team_contacts_pkey"
        ),
    )
    op.create_table(
        "recommendation_accuracy",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("recommendation_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("correct", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column("resource_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("resource_type", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ["recommendation_id"],
            ["recommendation.id"],
            name="recommendation_accuracy_recommendation_id_fkey",
        ),
        sa.PrimaryKeyConstraint("id", name="recommendation_accuracy_pkey"),
    )
    op.create_table(
        "recommendation_services",
        sa.Column("service_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("recommendation_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["recommendation_id"],
            ["recommendation.id"],
            name="recommendation_services_recommendation_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["service_id"], ["service.id"], name="recommendation_services_service_id_fkey"
        ),
        sa.PrimaryKeyConstraint(
            "service_id", "recommendation_id", name="recommendation_services_pkey"
        ),
    )
    op.create_table(
        "team_contact_incident_type",
        sa.Column("incident_type_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("team_contact_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["incident_type_id"],
            ["incident_type.id"],
            name="team_contact_incident_type_incident_type_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["team_contact_id"],
            ["team_contact.id"],
            name="team_contact_incident_type_team_contact_id_fkey",
        ),
        sa.PrimaryKeyConstraint(
            "incident_type_id", "team_contact_id", name="team_contact_incident_type_pkey"
        ),
    )
    op.create_table(
        "recommendation_documents",
        sa.Column("document_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("recommendation_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["document_id"], ["document.id"], name="recommendation_documents_document_id_fkey"
        ),
        sa.ForeignKeyConstraint(
            ["recommendation_id"],
            ["recommendation.id"],
            name="recommendation_documents_recommendation_id_fkey",
        ),
        sa.PrimaryKeyConstraint(
            "document_id", "recommendation_id", name="recommendation_documents_pkey"
        ),
    )
    op.create_table(
        "recommendation_incident_types",
        sa.Column("incident_type_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("recommendation_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["incident_type_id"],
            ["incident_type.id"],
            name="recommendation_incident_types_incident_type_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["recommendation_id"],
            ["recommendation.id"],
            name="recommendation_incident_types_recommendation_id_fkey",
        ),
        sa.PrimaryKeyConstraint(
            "incident_type_id", "recommendation_id", name="recommendation_incident_types_pkey"
        ),
    )
    op.create_table(
        "team_contact_incident_priority",
        sa.Column("incident_priority_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("team_contact_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["incident_priority_id"],
            ["incident_priority.id"],
            name="team_contact_incident_priority_incident_priority_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["team_contact_id"],
            ["team_contact.id"],
            name="team_contact_incident_priority_team_contact_id_fkey",
        ),
        sa.PrimaryKeyConstraint(
            "incident_priority_id", "team_contact_id", name="team_contact_incident_priority_pkey"
        ),
    )
    op.create_table(
        "recommendation_individual_contacts",
        sa.Column("individual_contact_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("recommendation_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["individual_contact_id"],
            ["individual_contact.id"],
            name="recommendation_individual_contacts_individual_contact_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["recommendation_id"],
            ["recommendation.id"],
            name="recommendation_individual_contacts_recommendation_id_fkey",
        ),
        sa.PrimaryKeyConstraint(
            "individual_contact_id",
            "recommendation_id",
            name="recommendation_individual_contacts_pkey",
        ),
    )
    op.create_table(
        "assoc_individual_contact_incident_priority",
        sa.Column("incident_priority_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("individual_contact_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["incident_priority_id"],
            ["incident_priority.id"],
            name="assoc_individual_contact_incident_pri_incident_priority_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["individual_contact_id"],
            ["individual_contact.id"],
            name="assoc_individual_contact_incident_pr_individual_contact_id_fkey",
        ),
        sa.PrimaryKeyConstraint(
            "incident_priority_id",
            "individual_contact_id",
            name="assoc_individual_contact_incident_priority_pkey",
        ),
    )
    op.create_table(
        "document_terms",
        sa.Column("term_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("document_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["document_id"],
            ["document.id"],
            name="document_terms_document_id_fkey",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["term_id"], ["term.id"], name="document_terms_term_id_fkey", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("term_id", "document_id", name="document_terms_pkey"),
    )
    op.create_table(
        "service_incident_priority",
        sa.Column("incident_priority_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("service_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["incident_priority_id"],
            ["incident_priority.id"],
            name="service_incident_priority_incident_priority_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["service_id"], ["service.id"], name="service_incident_priority_service_id_fkey"
        ),
        sa.PrimaryKeyConstraint(
            "incident_priority_id", "service_id", name="service_incident_priority_pkey"
        ),
    )
    op.create_table(
        "recommendation_incident_priorities",
        sa.Column("incident_priority_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("recommendation_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["incident_priority_id"],
            ["incident_priority.id"],
            name="recommendation_incident_priorities_incident_priority_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["recommendation_id"],
            ["recommendation.id"],
            name="recommendation_incident_priorities_recommendation_id_fkey",
        ),
        sa.PrimaryKeyConstraint(
            "incident_priority_id",
            "recommendation_id",
            name="recommendation_incident_priorities_pkey",
        ),
    )
    op.create_table(
        "service_terms",
        sa.Column("term_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("service_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["service_id"], ["service.id"], name="service_terms_service_id_fkey"
        ),
        sa.ForeignKeyConstraint(["term_id"], ["term.id"], name="service_terms_term_id_fkey"),
        sa.PrimaryKeyConstraint("term_id", "service_id", name="service_terms_pkey"),
    )
    op.drop_table("assoc_individual_filters")
    op.drop_table("assoc_team_filters")
    op.drop_table("assoc_service_filters")
    op.drop_table("assoc_document_filters")
    op.drop_table("recommendation_match")
    # ### end Alembic commands ###
