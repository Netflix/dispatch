"""Adds on delete cascade behavior and renames primary and foreign keys, and sequence id for report

Revision ID: 38f0b01448ba
Revises: 1c3f808aa00c
Create Date: 2020-12-17 16:20:11.517862

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "38f0b01448ba"
down_revision = "1c3f808aa00c"
branch_labels = None
depends_on = None


def upgrade():
    # we update the name of the primary and foreign keys, and sequence id for report
    bind = op.get_bind()
    bind.execute("ALTER INDEX IF EXISTS status_report_pkey RENAME TO report_pkey")

    bind.execute("ALTER SEQUENCE IF EXISTS status_report_id_seq RENAME TO report_id_seq")

    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("document_incident")
    op.drop_constraint(
        "assoc_incident_tags_incident_id_fkey", "assoc_incident_tags", type_="foreignkey"
    )
    op.drop_constraint("assoc_incident_tags_tag_id_fkey", "assoc_incident_tags", type_="foreignkey")
    op.create_foreign_key(
        None, "assoc_incident_tags", "tag", ["tag_id"], ["id"], ondelete="CASCADE"
    )
    op.create_foreign_key(
        None, "assoc_incident_tags", "incident", ["incident_id"], ["id"], ondelete="CASCADE"
    )
    op.drop_constraint(
        "assoc_incident_terms_incident_id_fkey", "assoc_incident_terms", type_="foreignkey"
    )
    op.drop_constraint(
        "assoc_incident_terms_term_id_fkey", "assoc_incident_terms", type_="foreignkey"
    )
    op.create_foreign_key(
        None, "assoc_incident_terms", "term", ["term_id"], ["id"], ondelete="CASCADE"
    )
    op.create_foreign_key(
        None, "assoc_incident_terms", "incident", ["incident_id"], ["id"], ondelete="CASCADE"
    )
    op.drop_constraint("conference_incident_id_fkey", "conference", type_="foreignkey")
    op.create_foreign_key(
        None, "conference", "incident", ["incident_id"], ["id"], ondelete="CASCADE"
    )
    op.drop_constraint("conversation_incident_id_fkey", "conversation", type_="foreignkey")
    op.create_foreign_key(
        None, "conversation", "incident", ["incident_id"], ["id"], ondelete="CASCADE"
    )
    op.drop_constraint("document_incident_id_fkey", "document", type_="foreignkey")
    op.create_foreign_key(None, "document", "incident", ["incident_id"], ["id"], ondelete="CASCADE")
    op.drop_constraint("event_individual_id_fkey", "event", type_="foreignkey")
    op.drop_constraint("event_incident_id_fkey", "event", type_="foreignkey")
    op.create_foreign_key(None, "event", "incident", ["incident_id"], ["id"], ondelete="CASCADE")
    op.create_foreign_key(
        None, "event", "individual_contact", ["individual_id"], ["id"], ondelete="CASCADE"
    )
    op.drop_constraint("feedback_incident_id_fkey", "feedback", type_="foreignkey")
    op.create_foreign_key(None, "feedback", "incident", ["incident_id"], ["id"], ondelete="CASCADE")
    op.drop_constraint("group_incident_id_fkey", "group", type_="foreignkey")
    op.create_foreign_key(None, "group", "incident", ["incident_id"], ["id"], ondelete="CASCADE")
    op.drop_constraint("participant_incident_id_fkey", "participant", type_="foreignkey")
    op.create_foreign_key(
        None, "participant", "incident", ["incident_id"], ["id"], ondelete="CASCADE"
    )
    op.drop_constraint(
        "participant_role_participant_id_fkey", "participant_role", type_="foreignkey"
    )
    op.create_foreign_key(
        None, "participant_role", "participant", ["participant_id"], ["id"], ondelete="CASCADE"
    )
    op.drop_constraint("report_incident_id_fkey", "report", type_="foreignkey")
    op.create_foreign_key(None, "report", "incident", ["incident_id"], ["id"], ondelete="CASCADE")
    op.drop_constraint("storage_incident_id_fkey", "storage", type_="foreignkey")
    op.create_foreign_key(None, "storage", "incident", ["incident_id"], ["id"], ondelete="CASCADE")
    op.drop_constraint("task_incident_id_fkey", "task", type_="foreignkey")
    op.create_foreign_key(None, "task", "incident", ["incident_id"], ["id"], ondelete="CASCADE")
    op.drop_constraint("ticket_incident_id_fkey", "ticket", type_="foreignkey")
    op.create_foreign_key(None, "ticket", "incident", ["incident_id"], ["id"], ondelete="CASCADE")
    op.drop_constraint(
        "workflow_instance_incident_id_fkey", "workflow_instance", type_="foreignkey"
    )
    op.create_foreign_key(
        None, "workflow_instance", "incident", ["incident_id"], ["id"], ondelete="CASCADE"
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "workflow_instance", type_="foreignkey")
    op.create_foreign_key(
        "workflow_instance_incident_id_fkey",
        "workflow_instance",
        "incident",
        ["incident_id"],
        ["id"],
    )
    op.drop_constraint(None, "ticket", type_="foreignkey")
    op.create_foreign_key("ticket_incident_id_fkey", "ticket", "incident", ["incident_id"], ["id"])
    op.drop_constraint(None, "task", type_="foreignkey")
    op.create_foreign_key("task_incident_id_fkey", "task", "incident", ["incident_id"], ["id"])
    op.drop_constraint(None, "storage", type_="foreignkey")
    op.create_foreign_key(
        "storage_incident_id_fkey", "storage", "incident", ["incident_id"], ["id"]
    )
    op.drop_constraint(None, "report", type_="foreignkey")
    op.create_foreign_key("report_incident_id_fkey", "report", "incident", ["incident_id"], ["id"])
    op.drop_constraint(None, "participant_role", type_="foreignkey")
    op.create_foreign_key(
        "participant_role_participant_id_fkey",
        "participant_role",
        "participant",
        ["participant_id"],
        ["id"],
    )
    op.drop_constraint(None, "participant", type_="foreignkey")
    op.create_foreign_key(
        "participant_incident_id_fkey", "participant", "incident", ["incident_id"], ["id"]
    )
    op.drop_constraint(None, "group", type_="foreignkey")
    op.create_foreign_key("group_incident_id_fkey", "group", "incident", ["incident_id"], ["id"])
    op.drop_constraint(None, "feedback", type_="foreignkey")
    op.create_foreign_key(
        "feedback_incident_id_fkey", "feedback", "incident", ["incident_id"], ["id"]
    )
    op.drop_constraint(None, "event", type_="foreignkey")
    op.drop_constraint(None, "event", type_="foreignkey")
    op.create_foreign_key("event_incident_id_fkey", "event", "incident", ["incident_id"], ["id"])
    op.create_foreign_key(
        "event_individual_id_fkey", "event", "individual_contact", ["individual_id"], ["id"]
    )
    op.drop_constraint(None, "document", type_="foreignkey")
    op.create_foreign_key(
        "document_incident_id_fkey", "document", "incident", ["incident_id"], ["id"]
    )
    op.drop_constraint(None, "conversation", type_="foreignkey")
    op.create_foreign_key(
        "conversation_incident_id_fkey", "conversation", "incident", ["incident_id"], ["id"]
    )
    op.drop_constraint(None, "conference", type_="foreignkey")
    op.create_foreign_key(
        "conference_incident_id_fkey", "conference", "incident", ["incident_id"], ["id"]
    )
    op.drop_constraint(None, "assoc_incident_terms", type_="foreignkey")
    op.drop_constraint(None, "assoc_incident_terms", type_="foreignkey")
    op.create_foreign_key(
        "assoc_incident_terms_term_id_fkey", "assoc_incident_terms", "term", ["term_id"], ["id"]
    )
    op.create_foreign_key(
        "assoc_incident_terms_incident_id_fkey",
        "assoc_incident_terms",
        "incident",
        ["incident_id"],
        ["id"],
    )
    op.drop_constraint(None, "assoc_incident_tags", type_="foreignkey")
    op.drop_constraint(None, "assoc_incident_tags", type_="foreignkey")
    op.create_foreign_key(
        "assoc_incident_tags_tag_id_fkey", "assoc_incident_tags", "tag", ["tag_id"], ["id"]
    )
    op.create_foreign_key(
        "assoc_incident_tags_incident_id_fkey",
        "assoc_incident_tags",
        "incident",
        ["incident_id"],
        ["id"],
    )
    op.create_table(
        "document_incident",
        sa.Column("incident_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("document_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["document_id"], ["document.id"], name="document_incident_document_id_fkey"
        ),
        sa.ForeignKeyConstraint(
            ["incident_id"], ["incident.id"], name="document_incident_incident_id_fkey"
        ),
        sa.PrimaryKeyConstraint("incident_id", "document_id", name="document_incident_pkey"),
    )
    # ### end Alembic commands ###
