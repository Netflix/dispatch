"""Adds data models for incident cost and incident cost type

Revision ID: c86be389dc1a
Revises: 03f742366750
Create Date: 2021-03-01 12:52:05.029318

"""
from alembic import op

from sqlalchemy.dialects import postgresql
import sqlalchemy as sa
import sqlalchemy_utils

from dispatch.incident_cost_type.models import IncidentCostTypeCreate
from dispatch.incident_cost_type import service as incident_cost_type_service

# revision identifiers, used by Alembic.
revision = "c86be389dc1a"
down_revision = "03f742366750"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "incident_cost_type",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("details", sqlalchemy_utils.types.json.JSONType(), nullable=True),
        sa.Column("default", sa.Boolean(), nullable=True),
        sa.Column("search_vector", sqlalchemy_utils.types.ts_vector.TSVectorType(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "ix_incident_cost_type_search_vector",
        "incident_cost_type",
        ["search_vector"],
        unique=False,
        postgresql_using="gin",
    )
    op.create_table(
        "incident_cost",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("amount", sa.Numeric(precision=10, scale=2), nullable=True),
        sa.Column("incident_cost_type_id", sa.Integer(), nullable=True),
        sa.Column("incident_id", sa.Integer(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["incident_cost_type_id"],
            ["incident_cost_type.id"],
        ),
        sa.ForeignKeyConstraint(["incident_id"], ["incident.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.drop_column("incident", "cost")
    # ### end Alembic commands ###

    # we create a default incident cost type for response cost
    bind = op.get_bind()
    db_session = sa.orm.Session(bind=bind)

    incident_cost_type_in = IncidentCostTypeCreate(
        name="Response Cost",
        description="Cost of responding to an incident. Also known as opportunity cost.",
        details={},
        default=True,
    )

    incident_cost_type_service.create(
        db_session=db_session, incident_cost_type_in=incident_cost_type_in
    )


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "incident",
        sa.Column(
            "cost", postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True
        ),
    )
    op.drop_index("ix_incident_cost_type_search_vector", table_name="incident_cost_type")
    op.drop_table("incident_cost_type")
    op.drop_table("incident_cost")
    # ### end Alembic commands ###
